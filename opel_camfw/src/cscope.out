cscope 15 $HOME/OPEL-CameraFramework/src/camera               0000299367
	@cam_cap_check.cpp

1 
	~"ˇm_ˇp_check.h
"

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<°dio.h
>

7 
	~<sys/io˘l.h
>

12 
	gCamV4l2C≠Check
::
	$CamV4l2C≠Check
()

15 
	}
}

16 
CamV4l2C≠Check
::
	$£tCamîaPr›îty
(
CamîaPr›îty
* 
ˇmPr›
)

19 
	}
}

20 
CamV4l2C≠Check
::
	$checkDevi˚C≠abûôõs
()

22 
fd
 = 
ˇmPr›
->
	`gëfd
();

23 
v4l2_ˇ∑bûôy
* 
ˇp
 = 
ˇmPr›
->
	`gëC≠abûôy
();

49 
	}
}

	@cam_cap_check.h

1 #i‚de‡
_CAM_CAP_CHECK_H_


2 
	#_CAM_CAP_CHECK_H_


	)

3 
	~"ˇm_c‹e.h
"

7 ˛as†
	cCamV4l2C≠Check
{

9 
	mpublic
:

10 
checkDevi˚C≠abûôõs
();

11 
CamV4l2C≠Check
();

12 
£tCamîaPr›îty
(
CamîaPr›îty
* 
ˇmPr›
);

14 
	m¥iv©e
:

15 
CamîaPr›îty
* 
ˇmPr›
;

16 
	mˇ∑bûôõs
;

	@cam_core.cpp

1 
	~"ˇm_c‹e.h
"

2 
	~<°dio.h
>

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<uni°d.h
>

6 
	~<f˙é.h
>

7 
boﬁ
 
öô_Sh¨edMem‹yS∑˚
(
ªq_cou¡
, 
buf„r_size
, 
shmid
, ** 
shm±r
);

8 
boﬁ
 
uöô_Sh¨edMem‹yS∑˚
(
shmid
);

9 
	gSEM_NAME
[] = "vik";

11 
	gSEM_FOR_SELECT
[]= "vvik";

12 
	$›íFifo
(c⁄° * 
∑th
)

14 
fifo_fd
;

15 if(
	`mkfifo
(
∑th
, 0666) == -1)

17 
	`Ârötf
(
°dîr
, "MKFIFO FAILED\n");

20 if((
fifo_fd
 = 
	`›í
(
∑th
, 
O_RDWR
))<0){

21 
	`Ârötf
(
°dîr
, "GET FIFO FD FAILED\n");

24  
fifo_fd
;

25 
	}
}

26 
boﬁ
 
	$checkFPS
(& 
˙t
, & 
œ°
, 
timevÆ
 &
tv_œ°
, 
FILE
* 
¥ofûe_Â
)

28 
timevÆ
 
cur
;

29 
	`gëtimeofday
(&
cur
, 
NULL
);

30 
	`Ârötf
(
¥ofûe_Â
, "%dSe¯%dU£c\n", 
cur
.
tv_£c
 ,cur.
tv_u£c
);

31 if(
˙t
 == 0)

33 
	`gëtimeofday
(&
tv_œ°
, 
NULL
);

36 
timevÆ
 
tv_cur
, 
ªs
;

37 
	`gëtimeofday
(&
tv_cur
, 
NULL
);

38 
	`timîsub
(&
tv_cur
, &
tv_œ°
, &
ªs
);

39 if(
ªs
.
tv_£c
){

40 
Âs
 =(
˙t
 - 
œ°
);

41 
œ°
 = 
˙t
;

42 
tv_œ°
 = 
tv_cur
;

43 
	`Ârötf
(
°dîr
, "Te° : %d fps\n", 
Âs
);

46 
˙t
++;

47  
åue
;

48 
	}
}

49 
boﬁ
 
	gO≥nCVSuµ‹t
::
	$öô_Sem≠h‹e
()

52 
	`¥ötf
("hihihihihihihihihi");

53 
mx
 = 
	`£m_›í
(
SEM_NAME
, 
O_CREAT
, 0666, 1);

54 if(
mx
 =
SEM_FAILED
)

56 
	`Ârötf
(
°dîr
, "[INIT_SEMAPHORE] : FAILED\n");

57 
	`£m_u∆ök
(
SEM_NAME
);

58  
Ál£
;

61 
£mF‹Sñe˘
 = 
	`£m_›í
(
SEM_FOR_SELECT
, 
O_CREAT
, 0666, 1);

62 if(
£mF‹Sñe˘
 =
SEM_FAILED
)

64 
	`Ârötf
(
°dîr
, "[INIT_SEMAPHORE] : FAILED\n");

65 
	`£m_u∆ök
(
SEM_FOR_SELECT
);

66  
Ál£
;

68  
åue
;

69 
	}
}

71 
boﬁ
 
	gO≥nCVSuµ‹t
::
	$uöô_Sem≠h‹e
()

73 
	`£m_˛o£
(
mx
);

74 
	`£m_u∆ök
(
SEM_NAME
);

76 
	`£m_˛o£
(
£mF‹Sñe˘
);

77 
	`£m_u∆ök
(
SEM_FOR_SELECT
);

78  
åue
;

79 
	}
}

82 
	gOPELCamîa
::
	$OPELCamîa
()

87 
	}
}

89 
OPELCamîa
::
	$£tCamîaPr›îty
(
CamîaPr›îty
* 
ˇmPr›
)

91 
this
->
ˇmPr›
 = camProp;

92 
	}
}

93 
	gOPELCamîa
::
	$dñëeCamîaPr›îty
()

95 
dñëe
 
this
->
ˇmPr›
;

96 
	}
}

98 
CamîaPr›îty
* 
	gOPELCamîa
::
	$gëCamîaPr›îty
() const

100  
this
->
ˇmPr›
;

101 
	}
}

102 
boﬁ
 
	gOPELCamîa
::
	$›í
()

104  
	`libv4l2_›í
(
this
->
ˇmPr›
Ë? 
åue
 : 
Ál£
;

105 
	}
}

106 
boﬁ
 
	gO≥nCVSuµ‹t
::
	$gëEos
()

108  
this
->
eos
;

109 
	}
}

110 
	gO≥nCVSuµ‹t
::
	$£tEos
(
boﬁ
 
eos
)

112 
	`±hªad_muãx_lock
(&
muãx
);

113 
this
->
eos
 =Éos;

114 
	`±hªad_muãx_u∆ock
(&
muãx
);

115 
	}
}

116 
boﬁ
 
	gO≥nCVSuµ‹t
::
	$°›
()

118 
size
 = 
ˇmPr›
->
	`gëBuf„rSize
();

119 
fd
 = 
this
->
ˇmPr›
->
	`gëfd
();

120 
v4l2_buf_ty≥
 
ty≥
;

121 
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

122 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_STREAMOFF
, &
ty≥
))

124 
	`Ârötf
(
°dîr
, "VIDIOC_STREAMOFF");

125  
Ál£
;

133  
åue
;

134 
	}
}

135 
boﬁ
 
	gO≥nCVSuµ‹t
::
	$˛o£_devi˚
()

137 
i
;

138 
fd
 = 
ˇmPr›
->
	`gëfd
();

139 if(!
	`uöô_Sh¨edMem‹yS∑˚
(
this
->
shmid
, &
shmPå
))

140  
Ál£
;

141 if(!
	`uöô_Sem≠h‹e
())

142  
Ál£
;

144 if(-1 =
	`˛o£
(
fd
))

146 
	`Ârötf
(
°dîr
, "[OpenCVSupport::close_device] : close(fd) failed\n");

147  
Ál£
;

150 
j
=0; j<4; j++)

152 
	`‰ì
(
buf„rs
[
j
].
°¨t
);

153 
	`‰ì
(
buf„rs
[
j
].
Àngth
);

155 
	`‰ì
(
this
->
buf„rs
);

156  
åue
;

157 
	}
}

158 
boﬁ
 
	$uöô_Sh¨edMem‹yS∑˚
(
shmid
, ** 
shmPå
)

173  
åue
;

174 
	}
}

175 
boﬁ
 
	gO≥nCVSuµ‹t
::
	$öô_u£rPoöãr
(
buf„r_size
)

178 
i
;

179 
fd
 = 
ˇmPr›
->
	`gëfd
();

180 
v4l2_ªque°buf„rs
* 
ªq
 = 
ˇmPr›
->
	`gëReque°buf„rs
();

181 
	`CLEAR
(*(
ªq
));

182 
ªq
->
cou¡
 = 4;

183 
ˇmPr›
->
	`£tN_buf„rs
(
ªq
->
cou¡
);

184 
ªq
->
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

185 
ªq
->
mem‹y
 = 
V4L2_MEMORY_USERPTR
;

187 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_REQBUFS
, 
ªq
))

189 if(
EINVAL
 =
î∫o
)

191 
	`Ârötf
(
°dîr
, "%†d€†nŸ suµ‹à" " u£∏poöã∏i/o\n", 
devi˚Name
);

192  
Ál£
;

196 
	`Ârötf
(
°dîr
, "VIDIOC_REQBUFS");

197  
Ál£
;

201 
buf„rs
 = (
buf„r
*)
	`ˇŒoc
(4, (*buffers));

202 if(!
buf„rs
){

203 
	`Ârötf
(
°dîr
, "Out of Memory\n");

204  
Ál£
;

206 
ˇmPr›
->
	`£tBuf„rSize
(
buf„r_size
);

207 
ˇmPr›
->
	`£tBuf„rNum
(
ªq
->
cou¡
);

208 if(!
	`öô_Sh¨edMem‹yS∑˚
(
ªq
->
cou¡
, 
buf„r_size
, 
shmid
, &
shmPå
, 
ˇmPr›
->
	`gëShmKey
()))

210 
	`Ârötf
(
°dîr
, "Shared Memory Space Initialization Failed\n");

211  
Ál£
;

213 
i
=0; i< 
ªq
->
cou¡
; i++)

218 
buf„rs
[
i
].
°¨t
 = (*)
	`mÆloc
(
buf„r_size
);

220 if(!
buf„rs
[
i
].
°¨t
)

222 
	`Ârötf
(
°dîr
, "LinkÅo SharedMemorySpace failed\n");

223  
Ál£
;

226 
off£t
 = 
ªq
->
cou¡
*
buf„r_size
;

227 
i
=0; i< 
ªq
->
cou¡
; i++)

229 
buf„rs
[
i
].
Àngth
 = (*)
	`mÆloc
(());

231 if(!
buf„rs
[
i
].
Àngth
)

233 
	`Ârötf
(
°dîr
, "LinkÅo SharedMemorySpace failed\n");

234  
Ál£
;

236 *
buf„rs
[
i
].
Àngth
 = 
buf„r_size
;

238 if(!
	`öô_Sem≠h‹e
())

239  
Ál£
;

241  
åue
;

242 
	}
}

243 
	$¥o˚ssImg
(* 
p
, * 
size
)

246 
sz
;

247 
FILE
 *
Â
 = 
	`f›í
("/home/pi/camData/cam.mjpg", "ab");

248 
sz
 = 
	`fwrôe
((*)
p
, (), *
size
, 
Â
);

250 if(
sz
 !*
size
)

252 
	`Ârötf
(
°dîr
, "failed!!!!!\n");

254 
	`fÊush
(
Â
);

255 
	`f˛o£
(
Â
);

256 
	}
}

257 
boﬁ
 
	$ªadFøme
(
CamîaPr›îty
* 
ˇmPr›
, 
buf„r
* 
buf„rs
, & 
˙t
, &
œ°
, 
timevÆ
 &
tv_œ°
, 
£mid
, * 
shmPå
, 
£m_t
* 
mx
, sem_t* 
£mF‹Sñe˘
, 
fifo_fd
)

259 
ch
 = '<';

260 
v4l2_buf„r
* 
buf
 = 
ˇmPr›
->
	`gëBuf„r
();

261 
fd
 = 
ˇmPr›
->
	`gëfd
();

262 
n_buf„rs
 = 
ˇmPr›
->
	`gëN_buf„rs
();

263 
size
 = 
ˇmPr›
->
	`gëBuf„rSize
();

264 
off£t
 = 
size
*(
n_buf„rs
-1);

265 
off£t_size
 = 
size
*
n_buf„rs
;

266 
i
;

267 * 
cou¡
 = 
ˇmPr›
->
	`gëCou¡
();

268 * 
±r
 = 
shmPå
+
off£t
;

269 * 
_check
 =(*)
shmPå
+
off£t_size
+();

270 * 
_Àngth
 = (*)
shmPå
+
off£t_size
;

271 * 
Àngth
 = (*)
_Àngth
;

272 * 
check
 = (*)
_check
;

273 
	`CLEAR
(*
buf
);

274 
buf
->
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

275 
buf
->
mem‹y
 = 
V4L2_MEMORY_USERPTR
;

276 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_DQBUF
, 
buf
))

278 
î∫o
){

279 
EAGAIN
:

280  
Ál£
;

282 
EIO
:

285 
	`Ârötf
(
°dîr
, "VIDIOC_DQBUF\n");

286  
Ál£
;

289 
i
=0; i <
n_buf„rs
; ++i)

290 if(
buf
->
m
.
u£Ωå
 =()
buf„rs
[
i
].
°¨t
 && buf->
Àngth
 >= (*buffers[i].length))

292 
	`as£π
(
i
 < 
n_buf„rs
);

293 
	`£m_waô
(
mx
);

294 *
check
 = 0;

295 
	`£m_po°
(
mx
);

297 
	`£m_waô
(
mx
);

298 *
Àngth
 = 
buf
->
byãsu£d
;

299 
	`mem˝y
((*)
±r
, (*)
buf
->
m
.
u£Ωå
, *
Àngth
);

300 *
check
 = 1;

301 
	`£m_po°
(
mx
);

304 
	`u¶ìp
(100);

305 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_QBUF
, 
buf
))

307 
	`Ârötf
(
°dîr
, "VIDIOC_QBUF\n");

308  
Ál£
;

311 
	`fÊush
(
°dîr
);

313 if(
˙t
 == 0)

315 
	`gëtimeofday
(&
tv_œ°
, 
NULL
);

318 
timevÆ
 
tv_cur
, 
ªs
;

319 
	`gëtimeofday
(&
tv_cur
, 
NULL
);

320 
	`timîsub
(&
tv_cur
, &
tv_œ°
, &
ªs
);

321 if(
ªs
.
tv_£c
){

322 
Âs
 = (100*(
˙t
 - 
œ°
)Ë/ (
ªs
.
tv_£c
 * 100 +Ñes.
tv_u£c
 / 10000);

323 
œ°
 = 
˙t
;

324 
tv_œ°
 = 
tv_cur
;

325 
	`Ârötf
(
°dîr
, " %d fps\n", 
Âs
);

328 
˙t
++;

330  
åue
;

331 
	}
}

332 
boﬁ
 
	gO≥nCVSuµ‹t
::
	$maöLo›
(
CamîaPr›îty
* 
ˇmPr›
, 
buf„r
* 
buf„rs
)

334 
FILE
* 
¥ofûe_Â
 = 
	`f›í
("TIMESET.txt", "w");

336 
˙t_Âs
=0;

337 
timevÆ
 
tv_œ°_Âs
;

338 
œ°_Âs
=0;

340 * 
cou¡
 = 
ˇmPr›
->
	`gëCou¡
();

341 
vﬁ©ûe_cou¡
;

342 
˙t
=0;

344 
	`±hªad_muãx_lock
(&
muãx
);

345 
boﬁ
 
vﬁ©ûe_eos
 = 
this
->
eos
;

346 
vﬁ©ûe_cou¡
 = *
cou¡
;

347 
	`±hªad_muãx_u∆ock
(&
muãx
);

349 
œ°
 = 0;

350 
timevÆ
 
tv_œ°
;

351 
fd
 = 
ˇmPr›
->
	`gëfd
();

353 
n_buf„rs
 = 
ˇmPr›
->
	`gëN_buf„rs
();

354 
size
 = 
ˇmPr›
->
	`gëBuf„rSize
();

355 
off£t
 = 
size
*(
n_buf„rs
-1);

356 
off£t_size
 = 
size
*
n_buf„rs
;

357 * 
_check
 =(*)
shmPå
+
off£t_size
+();

358 * 
check
 = (*)
_check
;

360 (
vﬁ©ûe_cou¡
 > 0Ë&& 
vﬁ©ûe_eos
)

364 
fd_£t
 
fds
;

365 
timevÆ
 
tv
;

366 
r
;

367 
	`FD_ZERO
(&
fds
);

368 
	`FD_SET
(
fd
, &
fds
);

369 
tv
.
tv_£c
 = 2;

370 
tv
.
tv_u£c
 = 0;

371 
r
 = 
	`£À˘
(
fd
+1, &
fds
, 
NULL
, NULL, &
tv
);

372 if(-1 =
r
){

373 if(
EINTR
 =
î∫o
)

375 
	`Ârötf
(
°dîr
, "Select Error\n");

376  
Ál£
;

378 if(0 =
r
){

379 
	`Ârötf
(
°dîr
, "Select Timeout\n");

380  
Ál£
;

382 if(
	`FD_ISSET
(
fd
, &
fds
))

386 
	`checkFPS
(
˙t_Âs
, 
œ°_Âs
, 
tv_œ°_Âs
, 
¥ofûe_Â
);

387 if(
	`ªadFøme
(
ˇmPr›
, 
buf„rs
, 
˙t
, 
œ°
, 
tv_œ°
, 
this
->
£mid
,Åhis->
shmPå
,Åhis->
mx
,Åhis->
£mF‹Sñe˘
,Åhis->
fifo_fd
))

391 
	`±hªad_muãx_lock
(&
muãx
);

392 
vﬁ©ûe_eos
 = 
this
->
eos
;

393 if(*
cou¡
 > 0)

394 
vﬁ©ûe_cou¡
=(*
cou¡
)--;

396 
vﬁ©ûe_cou¡
 = (*
cou¡
);

397 
	`±hªad_muãx_u∆ock
(&
muãx
);

400 
	`£m_waô
(
this
->
mx
);

401 *
check
 = 0;

402 
	`£m_po°
(
this
->
mx
);

403 
	`f˛o£
(
¥ofûe_Â
);

404  
åue
;

405 
	}
}

406 
boﬁ
 
	gO≥nCVSuµ‹t
::
	$°¨t
()

408 
i
;

409 
fd
 = 
ˇmPr›
->
	`gëfd
();

410 
n_buf„r
 = 
ˇmPr›
->
	`gëN_buf„rs
();

411 
v4l2_buf„r
* 
buf
 = 
ˇmPr›
->
	`gëBuf„r
();

412 
v4l2_buf_ty≥
 
ty≥
 = 
ˇmPr›
->
	`gëTy≥
();

413 
i
=0; i< 
n_buf„r
; i++)

415 
	`CLEAR
(*
buf
);

416 
buf
->
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

417 
buf
->
mem‹y
 = 
V4L2_MEMORY_USERPTR
;

418 
buf
->
ödex
 = 
i
;

419 
buf
->
m
.
u£Ωå
 = ()
buf„rs
[
i
].
°¨t
;

420 
buf
->
Àngth
 = *
buf„rs
[
i
].length;

421 
	`£m_waô
(
this
->
mx
);

422 *
buf„rs
[1].
Àngth
 = 0;

423 
	`£m_po°
(
this
->
mx
);

424 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_QBUF
, 
buf
))

426 
	`Ârötf
(
°dîr
, "VIDIOC_QBUF\n");

427  
Ál£
;

431 
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

432 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_STREAMON
, &
ty≥
))

434 
	`Ârötf
(
°dîr
, "VIDIOC_STREAMON\n");

435  
Ál£
;

437 if(!
	`maöLo›
(
this
->
ˇmPr›
,Åhis->
buf„rs
))

439 
	`Ârötf
(
°dîr
, "Main_Loop\n");

440  
Ál£
;

443  
åue
;

444 
	}
}

445 
boﬁ
 
	gO≥nCVSuµ‹t
::
	$öô_devi˚
()

447 
mö
;

448 
fd
 = 
ˇmPr›
->
	`gëfd
();

449 
v4l2_ˇ∑bûôy
* 
ˇp
 = 
ˇmPr›
->
	`gëC≠abûôy
();

450 
v4l2_¸›ˇp
* 
¸›ˇp
 = 
ˇmPr›
->
	`gëCr›ˇp
();

451 
v4l2_¸›
* 
¸›
 = 
ˇmPr›
->
	`gëCr›
();

452 
v4l2_f‹m©
* 
fmt
 = 
ˇmPr›
->
	`gëF‹m©
();

453 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_QUERYCAP
, 
ˇp
))

455 if(
EINVAL
 =
î∫o
)

457 
	`Ârötf
(
°dîr
, "%†i†nÿV4L2 devi˚ \n", 
devi˚Name
);

458  
Ál£
;

462 
	`î∫o_exô
("VIDIOC_QUERYCAP");

463  
Ál£
;

466 if(!(
ˇp
->
ˇ∑bûôõs
 & 
V4L2_CAP_VIDEO_CAPTURE
))

468 
	`Ârötf
(
°dîr
, "%†i†nÿvideÿˇ±uª devi˚\n", 
devi˚Name
);

469  
Ál£
;

471 if(!(
ˇp
->
ˇ∑bûôõs
 & 
V4L2_CAP_STREAMING
))

473 
	`Ârötf
(
°dîr
, "%†i†nÿvideÿˇ±uª devi˚\n", 
devi˚Name
);

474  
Ál£
;

476 
	`CLEAR
(*
¸›ˇp
);

477 
¸›ˇp
->
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

478 if(0 =
	`xio˘l
(
fd
, 
VIDIOC_CROPCAP
, 
¸›ˇp
))

480 
¸›
->
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

481 
¸›
->
c
 = 
¸›ˇp
->
de‰e˘
;

482 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_S_CROP
, 
¸›
))

484 
î∫o
)

486 
EINVAL
:

487 
	`Ârötf
(
°dîr
, "Cropping Not Supported\n");

490 
	`Ârötf
(
°dîr
, "Errors Ignored\n");

499 
	`CLEAR
(*
fmt
);

500 
fmt
->
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

501 
fmt
->fmt.
pix
.
width
 = 
ˇmPr›
->
	`gëWidth
();

502 
fmt
->fmt.
pix
.
height
 = 
ˇmPr›
->
	`gëHeight
();

503 
fmt
->fmt.
pix
.
pixñf‹m©
 = 
ˇmPr›
->
	`gëPixñf‹m©
();

504 
fmt
->fmt.
pix
.
fõld
 = 
ˇmPr›
->
	`gëFõld
();

505 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_S_FMT
, 
fmt
))

507 
	`Ârötf
(
°dîr
, "VIDIOC_S_FMT Error\n");

508  
Ál£
;

511 
mö
 = 
fmt
->fmt.
pix
.
width
 * 2;

512 if(
fmt
->fmt.
pix
.
byã•îlöe
 < 
mö
)

513 
fmt
->fmt.
pix
.
byã•îlöe
 = 
mö
;

514 
mö
 = 
fmt
->fmt.
pix
.
byã•îlöe
 * fmt->fmt.pix.
height
;

515 if(
fmt
->fmt.
pix
.
sizeimage
 < 
mö
)

516 
fmt
->fmt.
pix
.
sizeimage
 = 
mö
;

518 if(!
	`öô_u£rPoöãr
(
fmt
->fmt.
pix
.
sizeimage
))

520 
	`Ârötf
(
°dîr
, "initialize userÖointer failed\n");

521  
Ál£
;

523  
åue
;

526 
	}
}

527 
boﬁ
 
	$libv4l2_›í
(
CamîaPr›îty
* 
ˇmPr›
)

529 
fd
;

530 
°©
 
°
;

531 if(-1 =
	`°©
(
devi˚Name
,&
°
))

533 
	`Ârötf
(
°dîr
, "C™nŸ idítify '%s' : %d, %s\n", 
devi˚Name
, 
î∫o
, 
	`°ªº‹
(errno));

534  
Ál£
;

536 if(!
	`S_ISCHR
(
°
.
°_mode
))

538 
	`Ârötf
(
°dîr
, "%†i†nÿdevi˚\n", 
devi˚Name
);

539  
Ál£
;

542 
fd
 = 
	`›í
(
devi˚Name
, 
O_RDWR
, 0);

543 if(-1 =
fd
)

545 
	`Ârötf
(
°dîr
, "C™nŸ o≥¿'%s' : %d, %s\n", 
devi˚Name
, 
î∫o
, 
	`°ªº‹
(errno));

546  
Ál£
;

549 
ˇmPr›
->
	`£tfd
(
fd
);

550  
åue
;

551 
	}
}

552 
boﬁ
 
	$libv4l2_öô
(
CamîaPr›îty
* 
ˇmPr›
)

554  
åue
;

555 
	}
}

559 
	$î∫o_exô
(c⁄° *
s
)

561 
	`Ârötf
(
°dîr
, "%†îr‹ %d, %s\n", 
s
, 
î∫o
, 
	`°ªº‹
(errno));

562 
	`exô
(
EXIT_FAILURE
);

563 
	}
}

565 
	$xio˘l
(
fh
, 
ªque°
, *
¨g
)

567 
r
;

569 
r
 = 
	`io˘l
(
fh
, 
ªque°
, 
¨g
);

570 }-1 =
r
 && 
EINTR
 =
î∫o
);

571 
	}
}

572 
boﬁ
 
	$öô_Sh¨edMem‹yS∑˚
(
ªq_cou¡
, 
buf„r_size
, 
shmid
, ** 
shmPå
, 
key_t
 
shmkey
)

574 
	`¥ötf
("buf„r_À¿%d, buf„r_num = %d\n", 
buf„r_size
, 
ªq_cou¡
);

576 
shmid
 = 
	`shmgë
((
key_t
)
shmkey
, (
buf„r_size
*
ªq_cou¡
)+(()*ªq_cou¡), 0666|
IPC_CREAT
);

577 
	`¥ötf
("shmkey : %d\n", 
shmkey
);

578 if(
shmid
 == -1)

580 
	`≥º‹
("shmget failed : ");

581  
Ál£
;

583 *
shmPå
 = 
	`shm©
(
shmid
, 
NULL
, 0);

585 if(*
shmPå
 == (*)-1)

587 
	`≥º‹
("shmget failed : ");

588  
Ál£
;

590 
	`¥ötf
("Shared Memory Region Initialization Success\n");

591  
åue
;

592 
	}
}

593 
boﬁ
 
	$unöô_Sh¨edMem‹yS∑˚
(
shmid
)

595 if(-1 =
	`shm˘l
(
shmid
, 
IPC_RMID
, 0))

597 
	`Ârötf
(
°dîr
, "FailedÅoÑemove shared dataÑegion\n");

598  
Ál£
;

600  
åue
;

601 
	}
}

	@cam_core.h

1 #i‚de‡
_CAM_CORE_H_


2 
	#_CAM_CORE_H_


	)

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<as£π.h
>

9 
	~<gë›t.h
>

11 
	~<öây≥s.h
>

12 
	~<˘y≥.h
>

13 
	~<dúít.h
>

14 
	~<f˙é.h
>

15 
	~<uni°d.h
>

16 
	~<î∫o.h
>

17 
	~<sys/°©.h
>

18 
	~<sys/ty≥s.h
>

19 
	~<sys/time.h
>

20 
	~<sys/mm™.h
>

21 
	~<sys/io˘l.h
>

22 
	~<£m≠h‹e.h
>

24 
	~<asm/ty≥s.h
>

26 
	~<löux/videodev2.h
>

32 
	~<sys/ùc.h
>

33 
	~<sys/shm.h
>

34 
	~<±hªad.h
>

36 
	~"ˇm_¥›îty.h
"

37 
	~"ˇm_°©us.h
"

40 
	#SHM_KEY
 1234

	)

42 
	#V4L2_DEFAULT_WIDTH
 640

	)

43 
	#V4L2_DEFAULT_HEIGHT
 480

	)

46 
	#CLEAR
(
x
Ë
	`mem£t
(&(x), 0, (x))

	)

47 
	#MAX_V4L2_BUFFERS
 10

	)

49 
	#O±La°
 256

	)

51 
	#SEM_FOR_PAYLOAD_SIZE
 9948

	)

53 
xio˘l
(
fh
, 
ªque°
, * 
¨g
);

54 
î∫o_exô
(c⁄° *
s
);

55 
°ªamög_£t_ˇp
(
fd
);

58 c⁄° * 
	gdevi˚Name
 = "/dev/video0";

62 
	sbuf„r
{

63 *
	m°¨t
;

65 * 
	mÀngth
;

66 }
	tbuf„r
;

68 
	s˘l_∑ømëîs
{

69 
boﬁ
 
	mãrmö©e_decodög
;

70 
	m›ti⁄s
[
O±La°
];

71 
	mfd_«me
[80];

72 
boﬁ
 
	mfûíame_a˘ive
;

73 
	m‰eq
;

74 
uöt32_t
 
	mwaô_limô
;

75 
uöt8_t
 
	mtu√r_ödex
;

79 
˘l_∑ømëîs
 
	g∑øms
;

82 
boﬁ
 
libv4l2_›í
(
CamîaPr›îty
* 
ˇmPr›
);

83 
boﬁ
 
libv4l2_öô
(
CamîaPr›îty
* 
ˇmPr›
);

84 
boﬁ
 
öô_Sh¨edMem‹yS∑˚
(
ªq_cou¡
, 
buf„r_size
, 
shmid
, ** 
shm±r
, 
key_t
 
shmkey
);

85 
boﬁ
 
uöô_Sh¨edMem‹yS∑˚
(
shmid
, ** 
shmPå
);

86 
boﬁ
 
ªcMaöLo›
(
CamîaPr›îty
* 
ˇmPr›
, 
buf„r
* 
buf„rs
);

87 
boﬁ
 
ªadFøme
(
CamîaPr›îty
* 
ˇmPr›
, 
buf„r
* 
buf„rs
, & 
˙t
, &
œ°
, 
timevÆ
 &
tv_œ°
, 
£mid
, * 
shmPå
);

88 
¥o˚ssImg
(c⁄° * 
p
 , 
size
);

89 
do_h™dÀ_ˇp
(
CamîaPr›îty
* 
ˇmPr›
, 
buf„r
* 
buf„rs
);

92 ˛as†
	cOPELCamîa


94 
	mpublic
:

95 
£tCamîaPr›îty
(
CamîaPr›îty
* 
ˇmPr›
);

96 
CamîaPr›îty
* 
	$gëCamîaPr›îty
() const;

97 
	`OPELCamîa
();

98 
	`OPELCamîa
(
CamîaPr›îty
* 
ˇmPr›
);

99 
boﬁ
 
	`›í
();

100 
vútuÆ
 
boﬁ
 
	`öô_devi˚
() = 0;

101 
vútuÆ
 
boﬁ
 
	`°¨t
() = 0;

102 
vútuÆ
 
boﬁ
 
	`°›
() = 0;

103 
vútuÆ
 
boﬁ
 
	`˛o£_devi˚
() = 0;

104 
	`dñëeCamîaPr›îty
();

105 
boﬁ
 
	`öô_Sem≠h‹e
();

106 
boﬁ
 
	`uöô_Sem≠h‹e
();

107 
¥Ÿe˘ed
:

108 
vútuÆ
 
boﬁ
 
	`öô_u£rPoöãr
() = 0;

110 
CamîaPr›îty
* 
ˇmPr›
;

114 ˛as†
	cRec‹d
 : 
public
 
OPELCamîa


116 
public
:

117 
vútuÆ
 
boﬁ
 
	`öô_devi˚
();

118 
vútuÆ
 
boﬁ
 
	`°¨t
();

119 
vútuÆ
 
boﬁ
 
	`°›
();

120 
vútuÆ
 
boﬁ
 
	`˛o£_devi˚
();

122 
¥iv©e
:

123 
buf„r
* 
buf„rs
;

125 
vútuÆ
 
boﬁ
 
	`öô_u£rPoöãr
();

126 * 
ouçut_∑th
;

128 ˛as†
	cO≥nCVSuµ‹t
 : 
public
 
OPELCamîa


130 
public
:

131 
vútuÆ
 
boﬁ
 
	`öô_devi˚
();

132 
vútuÆ
 
boﬁ
 
	`°¨t
();

133 
vútuÆ
 
boﬁ
 
	`°›
();

134 
vútuÆ
 
boﬁ
 
	`˛o£_devi˚
();

135 
boﬁ
 
	`gëEos
();

136 
	`£tEos
(
boﬁ
 
eos
);

137 
	$£tThrMuãx
(
±hªad_muãx_t
& 
muãx
){ 
this
->mutex = mutex; }

140 
boﬁ
 
	`öô_Sem≠h‹e
();

141 
boﬁ
 
	`uöô_Sem≠h‹e
();

142 
¥iv©e
:

143 
boﬁ
 
	`maöLo›
(
CamîaPr›îty
* 
ˇmPr›
, 
buf„r
* 
buf„rs
);

144 
vútuÆ
 
boﬁ
 
	`öô_u£rPoöãr
();

145 
buf„r
* 
buf„rs
;

146 
£mid
;

147 
shmid
;

148 * 
shmPå
;

149 
shmid_ds
 
shm_öfo
;

150 
boﬁ
 
eos
;

151 
±hªad_muãx_t
 
muãx
;

152 
£m_t
* 
mx
;

153 
£m_t
* 
£mF‹Sñe˘
;

154 
fifo_fd
;

155 
	}
};

	@cam_ctrl.h

1 #i‚de‡
_CAM_CTRL_H_


2 
	#_CAM_CTRL_H_


	)

4 
	~"ˇm_c‹e.h
"

6 
	#W_VGA
 640

	)

7 
	#H_VGA
 480

	)

9 
	#W_SVGA
 800

	)

10 
	#H_SVGA
 600

	)

12 
	#W_XGA
 1024

	)

13 
	#H_XGA
 768

	)

15 
	#W_SXGA
 1280

	)

16 
	#H_SXGA
 1024

	)

18 
	#W_HD
 1280

	)

19 
	#H_HD
 720

	)

21 
	#W_FHD
 1920

	)

22 
	#H_FHD
 1080

	)

24 ˛as†
	cCamîa_Cål


26 
	mpublic
:

27 
	$gëPr›îty
() const;

28 
	`£tPr›îty
(, );

29 
	`gëIn°™˚
(
Camîa
* 
ˇm
);

31 
¥iv©e
:

32 
Camîa
* 
ˇm
;

	@cam_property.cpp

1 
	~"ˇm_¥›îty.h
"

12 
	gCamîaPr›îty
::
	$¥ötSëVÆue
()

14 
°d
::
cout
 << "***** OPEL CAMERA PROPERTIES *****" <<°d::
ídl
;

15 
°d
::
cout
 << "Width : " << 
this
->
width
 << " Heighà: " <<Åhis->
height
 << std::
ídl
;

16 
°d
::
cout
 << "Pixñf‹m© : " << 
this
->
pixñf‹m©
 << std::
ídl
;

17 
°d
::
cout
 << "Numbî o‡Fømê: " << *(
cou¡
Ë<< std::
ídl
;

18 
°d
::
cout
 << "Fõld : " << 
this
->
fõld
 << std::
ídl
;

20 
	}
}

21 
	gCamîaPr›îty
::
	$öôPr›îty
(
¥›îty
* 
¥›
)

36 
	}
}

37 
boﬁ
 
CamîaPr›îty
::
	$InôSh¨edPr›îtyToT¨gë
(
¥›îty
* 
¥›
)

40 if(!(
this
->
shmPå_f‹_¥›îty
)){

41 
this
->
shmid_f‹_¥›îty
 = 
	`shmgë
(
shmkey_f‹_¥›îty
, (
¥›îty
), 0666|
IPC_CREAT
);

42 if(
this
->
shmid_f‹_¥›îty
 == -1)

44 
	`Ârötf
(
°dîr
,"[InitSharedPropertyToTarget] : Shmget Error\n");

45  
Ál£
;

47 
shmPå_f‹_¥›îty
 = (*)
	`shm©
(
this
->
shmid_f‹_¥›îty
, 
NULL
, 0);

48 if(
shmPå_f‹_¥›îty
 == (*)-1)

50 
	`Ârötf
(
°dîr
, "[InitSharedPropertyToTarget] : Shmat Error\n");

51  
Ál£
;

54 
¥›
 = (
¥›îty
*)
shmPå_f‹_¥›îty
;

55 
¥›
->
width
 = 
this
->width;

56 
¥›
->
height
 = 
this
->height;

57 
¥›
->
buf„r_size
 = 
this
->buffer_size;

58 
¥›
->
buf„r_num
 = 
this
->buffer_num;

59 
¥›
->
n_buf„r
 = 
this
->n_buffer;

60 
¥›
->
isPr›îtyCh™ged
 = 
åue
;

61 
¥›
->
ÆlowRu¬ög
 = 
åue
;

65  
Ál£
;

68 
	}
}

69 
boﬁ
 
	gCamîaPr›îty
::
	$uInôSh¨edPr›îtyToT¨gë
(
¥›îty
* 
¥›
)

71 if(-1 =
	`shmdt
(
this
->
shmPå_f‹_¥›îty
))

73 
	`Ârötf
(
°dîr
, "[CameraProperty::uInitSharedPropertyToTarget] : shmdt Error\n");

74  
Ál£
;

76 if(-1 =
	`shm˘l
(
this
->
shmid_f‹_¥›îty
, 
IPC_RMID
, 0))

79 
	`Ârötf
(
°dîr
, "[CameraProperty::uInitSharedPropertyToTarget] : shmctl Error\n");

80  
Ál£
;

83  
åue
;

84 
	}
}

85 
	gCamîaPr›îty
::
	$£tBuf„rSize
(
buf„r_size
)

89 
	`£m›
(
£mid
, &
muãx_waô
, 1);

90 
this
->
buf„r_size
 = buffer_size;

91 
¥›
->
buf„r_size
 = buffer_size;

92 
	`£m›
(
£mid
, &
muãx_po°
, 1);

95 
	}
}

96 
	gCamîaPr›îty
::
	$£tBuf„rNum
(
buf„r_num
)

100 
	`£m›
(
£mid
, &
muãx_waô
, 1);

101 
this
->
buf„r_num
 = buffer_num;

102 
¥›
->
buf„r_num
 = buffer_num;

103 
	`£m›
(
£mid
, &
muãx_po°
, 1);

106 
	}
}

107 
boﬁ
 
	gCamîaPr›îty
::
	$öôSem≠h‹e
()

109 
£mun
 
£m_uni⁄
;

110 
£mid
 = 
	`£mgë
((
key_t
)
OPENCV_SEMAPHORE_FOR_PROPERTY
, 1, 0666 | 
IPC_CREAT
);

111 if(-1 =
£mid
)

113 
	`Ârötf
(
°dîr
, "[CameraProperty::initSemaphore] : Semaphore Initializaition Error\n");

114  
Ál£
;

116 
£m_uni⁄
.
vÆ
 = 1;

117 if(-1 =
	`£m˘l
(
£mid
, 0, 
SETVAL
, 
£m_uni⁄
))

119 
	`Ârötf
(
°dîr
, "[CameraProperty::initSemaphore] : Semaphore Initialization Error\n");

120  
Ál£
;

122  
åue
;

123 
	}
}

124 
	gCamîaPr›îty
::
	$CamîaPr›îty
(
boﬁ
 
isRec
)

126 if(!
isRec
)

128 
	`Ârötf
(
°dîr
, "Called Construct for OpenCV Support\n");

129 
this
->
cou¡
 = (*)
	`mÆloc
(());

130 
this
->
ˇp
 = (
v4l2_ˇ∑bûôy
*)
	`mÆloc
((v4l2_capability));

131 
this
->
öp
 = (
v4l2_öput
*)
	`mÆloc
((v4l2_input));

132 
this
->
fmt
 = (
v4l2_f‹m©
*)
	`mÆloc
((v4l2_format));

133 
this
->
¸›
 = (
v4l2_¸›
*)
	`mÆloc
((v4l2_crop));

134 
this
->
¸›ˇp
 = (
v4l2_¸›ˇp
*)
	`mÆloc
((v4l2_cropcap));

135 
this
->
ªq
 = (
v4l2_ªque°buf„rs
*)
	`mÆloc
((v4l2_requestbuffers));

136 
this
->
com¥
 = (
v4l2_j≥gcom¥essi⁄
*)
	`mÆloc
((v4l2_jpegcompression));

137 
this
->
c⁄åﬁ
 = (
v4l2_c⁄åﬁ
*)
	`mÆloc
((v4l2_control));

138 
this
->
buf
 = (
v4l2_buf„r
*)
	`mÆloc
((v4l2_buffer));

139 
this
->
quîy˘æ
 = (
v4l2_quîy˘æ
*)
	`mÆloc
((v4l2_queryctrl));

140 
this
->
time°amp
 = (
timevÆ
*)
	`mÆloc
((timeval));

141 *(
this
->
cou¡
Ë
DEFAULT_COUNT
;

142 
this
->
fõld
 = 
V4L2_FIELD_ANY
;

143 
this
->
width
 = 
DEFAULT_WIDTH
;

144 
this
->
height
 = 
DEFAULT_HEIGHT
;

145 
this
->
pixñf‹m©
 = 
V4L2_PIX_FMT_RGB24
;

146 
this
->
shmkey
 = 
OPENCV_SHM_KEY
;

147 
this
->
shmkey_f‹_¥›îty
 = 
OPENCV_SHM_KEY_FOR_PROPERTY
;

148 
this
->
shmPå_f‹_¥›îty
 = 
NULL
;

162 
	`Ârötf
(
°dîr
, "Called Construct for Recording\n");

163 
this
->
cou¡
 = (*)
	`mÆloc
(());

164 
this
->
ˇp
 = (
v4l2_ˇ∑bûôy
*)
	`mÆloc
((v4l2_capability));

165 
this
->
öp
 = (
v4l2_öput
*)
	`mÆloc
((v4l2_input));

166 
this
->
fmt
 = (
v4l2_f‹m©
*)
	`mÆloc
((v4l2_format));

167 
this
->
¸›
 = (
v4l2_¸›
*)
	`mÆloc
((v4l2_crop));

168 
this
->
¸›ˇp
 = (
v4l2_¸›ˇp
*)
	`mÆloc
((v4l2_cropcap));

169 
this
->
ªq
 = (
v4l2_ªque°buf„rs
*)
	`mÆloc
((v4l2_requestbuffers));

170 
this
->
com¥
 = (
v4l2_j≥gcom¥essi⁄
*)
	`mÆloc
((v4l2_jpegcompression));

171 
this
->
c⁄åﬁ
 = (
v4l2_c⁄åﬁ
*)
	`mÆloc
((v4l2_control));

172 
this
->
buf
 = (
v4l2_buf„r
*)
	`mÆloc
((v4l2_buffer));

173 
this
->
quîy˘æ
 = (
v4l2_quîy˘æ
*)
	`mÆloc
((v4l2_queryctrl));

174 
this
->
time°amp
 = (
timevÆ
*)
	`mÆloc
((timeval));

175 *(
this
->
cou¡
Ë
DEFAULT_COUNT
;

176 
this
->
fõld
 = 
V4L2_FIELD_ANY
;

177 
this
->
width
 = 
REC_DEFAULT_WIDTH
;

178 
this
->
height
 = 
REC_DEFAULT_HEIGHT
;

179 
this
->
pixñf‹m©
 = 
V4L2_PIX_FMT_MJPEG
;

180 
this
->
shmkey
 = 
REC_SHM_KEY
;

181 
this
->
shmkey_f‹_¥›îty
 = 
REC_SHM_KEY_FOR_PROPERTY
;

182 
this
->
shmPå_f‹_¥›îty
 = 
NULL
;

185 
	}
}

187 
	gCamîaPr›îty
::
	$CamîaPr›îty
()

191 
this
->
cou¡
 = (*)
	`mÆloc
(());

192 
this
->
ˇp
 = (
v4l2_ˇ∑bûôy
*)
	`mÆloc
((v4l2_capability));

193 
this
->
öp
 = (
v4l2_öput
*)
	`mÆloc
((v4l2_input));

194 
this
->
fmt
 = (
v4l2_f‹m©
*)
	`mÆloc
((v4l2_format));

195 
this
->
¸›
 = (
v4l2_¸›
*)
	`mÆloc
((v4l2_crop));

196 
this
->
¸›ˇp
 = (
v4l2_¸›ˇp
*)
	`mÆloc
((v4l2_cropcap));

197 
this
->
ªq
 = (
v4l2_ªque°buf„rs
*)
	`mÆloc
((v4l2_requestbuffers));

198 
this
->
com¥
 = (
v4l2_j≥gcom¥essi⁄
*)
	`mÆloc
((v4l2_jpegcompression));

199 
this
->
c⁄åﬁ
 = (
v4l2_c⁄åﬁ
*)
	`mÆloc
((v4l2_control));

200 
this
->
buf
 = (
v4l2_buf„r
*)
	`mÆloc
((v4l2_buffer));

201 
this
->
quîy˘æ
 = (
v4l2_quîy˘æ
*)
	`mÆloc
((v4l2_queryctrl));

202 
this
->
time°amp
 = (
timevÆ
*)
	`mÆloc
((timeval));

203 *(
this
->
cou¡
Ë
DEFAULT_COUNT
;

204 
this
->
fõld
 = 
V4L2_FIELD_INTERLACED
;

205 
this
->
width
 = 
DEFAULT_WIDTH
;

206 
this
->
height
 = 
DEFAULT_HEIGHT
;

207 
this
->
pixñf‹m©
 = 
V4L2_PIX_FMT_RGB24
;

211 
	}
}

212 
	gCamîaPr›îty
::~
	$CamîaPr›îty
()

215 
	`‰ì
(
this
->
cou¡
);

216 
	`‰ì
(
this
->
ˇp
);

217 
	`‰ì
(
this
->
öp
);

218 
	`‰ì
(
this
->
fmt
);

219 
	`‰ì
(
this
->
¸›
);

220 
	`‰ì
(
this
->
¸›ˇp
);

221 
	`‰ì
(
this
->
ªq
);

222 
	`‰ì
(
this
->
com¥
);

223 
	`‰ì
(
this
->
c⁄åﬁ
);

224 
	`‰ì
(
this
->
buf
);

225 
	`‰ì
(
this
->
quîy˘æ
);

226 
	`‰ì
(
this
->
time°amp
);

233 
	}
}

	@cam_property.h

1 #i‚de‡
_CAM_PROPERTY_H_


2 
	#_CAM_PROPERTY_H_


	)

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

6 
	~<as£π.h
>

7 
	~<sys/ùc.h
>

8 
	~<sys/shm.h
>

9 
	~<sys/ty≥s.h
>

10 
	~<sys/°©.h
>

11 
	~<uni°d.h
>

12 
	~<sys/f˙é.h
>

13 
	~<sys/mm™.h
>

14 
	~<sys/£m.h
>

17 
	~<io°ªam
>

18 
	~<löux/videodev2.h
>

22 
	~"ˇm_°©us.h
"

23 
	#DEFAULT_COUNT
 100000000

	)

25 
	#OPENCV_DEFAULT_PIXFORMAT
 
V4L2_PIX_FMT_RGB24


26 
	#DEFAULT_WIDTH
 640

	)

27 
	#DEFAULT_HEIGHT
 480

	)

28 
	#OPENCV_SHM_KEY
 5315

	)

30 
	#OPENCV_SHM_KEY_FOR_PROPERTY
 4941

	)

31 
	#OPENCV_SEMAPHORE_FOR_PROPERTY
 49411

	)

33 
	#REC_DEFAULT_WIDTH
 1280

	)

34 
	#REC_DEFAULT_HEIGHT
 720

	)

35 
	#REC_DEFAULT_PIXFORMAT
 
V4L2_PIX_FMT_H264


36 
	#REC_SHM_KEY_SIZE
 9448

	)

37 
	#REC_SHM_KEY
 9447

	)

38 
	#REC_SHM_KEY_FOR_PROPERTY
 9988

	)

43 
	u£mun


45 
	mvÆ
;

46 
£mid_ds
* 
	mbuf
;

47 *
	m¨øy
;

49 
£mbuf
 
	gmuãx_po°
 = {0, -1, 
SEM_UNDO
};

50 
£mbuf
 
	gmuãx_waô
 = {0, 1, 
SEM_UNDO
};

52 
	s¥›îty


54 
	mwidth
;

55 
	mheight
;

56 
	mbuf„r_size
;

57 
	mbuf„r_num
;

58 
	mn_buf„r
;

59 
boﬁ
 
	misPr›îtyCh™ged
;

60 
boﬁ
 
	mÆlowRu¬ög
;

64 }
	t¥›îty
;

67 ˛as†
	cCamîaPr›îty


69 
	mpublic
:

73 ~
CamîaPr›îty
();

75 
CamîaPr›îty
();

76 
CamîaPr›îty
(
boﬁ
);

77 
key_t
 
	$gëShmKey
(){ 
this
->
shmkey
;}

78 
	$£tfd
(
fd
Ë{ 
this
->fd = fd; 
	}
}

79 
	$gëfd
(Ë{  
this
->
fd
; 
	}
}

80 
v4l2_ªque°buf„rs
* 
	$gëReque°buf„rs
(Ë{  
this
->
ªq
; 
	}
}

81 
	$£tN_buf„rs
(
n_buf„r
Ë{
this
->n_buf„∏n_buf„r; 
	}
}

82 
	$gëN_buf„rs
(Ë{ 
this
->
n_buf„r
; 
	}
}

83 
v4l2_ˇ∑bûôy
* 
	$gëC≠abûôy
(Ë{  
this
->
ˇp
; 
	}
}

84 
v4l2_¸›ˇp
* 
	$gëCr›ˇp
(Ë{  
this
->
¸›ˇp
; 
	}
}

85 
v4l2_¸›
* 
	$gëCr›
(Ë{  
this
->
¸›
; 
	}
}

86 
v4l2_f‹m©
* 
	$gëF‹m©
(Ë{ 
this
->
fmt
; 
	}
}

87 
v4l2_buf„r
* 
	$gëBuf„r
(Ë{ 
this
->
buf
; 
	}
}

88 
v4l2_buf_ty≥
 
	$gëTy≥
(Ë{ 
this
->
ty≥
;
	}
}

89 
	$gëWidth
(Ë{  
this
->
width
; 
	}
}

90 
	$gëHeight
(Ë{  
this
->
height
; 
	}
}

91 
	$gëPixñf‹m©
(Ë{  
this
->
pixñf‹m©
; 
	}
}

92 
v4l2_fõld
 
	$gëFõld
(Ë{  
this
->
fõld
; 
	}
}

93 * 
	$gëCou¡
(Ë{  
this
->
cou¡
; 
	}
}

94 
	$£tCou¡
(
cou¡
Ë{ *(
this
->cou¡Ëcou¡; 
	}
}

95 
¥ötSëVÆue
();

96 
£tBuf„rSize
(
buf„r_size
);

97 
£tBuf„rNum
(
buf„r_num
);

98 
	$gëBuf„rSize
(Ë{  
this
->
buf„r_size
; 
	}
}

99 
	$gëBuf„rNum
(Ë{  
this
->
buf„r_num
; 
	}
}

100 
öôPr›îty
(
¥›îty
* 
¥›
);

101 
boﬁ
 
InôSh¨edPr›îtyToT¨gë
(
¥›îty
* 
¥›
);

102 
boﬁ
 
uInôSh¨edPr›îtyToT¨gë
(
¥›îty
* 
¥›
);

103 
boﬁ
 
öôSem≠h‹e
();

106 
	$£tPr›îty
(
¥›îty
* 
¥›
){ 
this
->¥› =Ör›; 
	}
}

108 
	g¥iv©e
:

109 * 
¥o˚ssName
;

110 
	gfd
;

113 
	gdevi˚H™dÀ
;

114 
	gbuf„rIndex
;

115 
	gwidth
, 
	gheight
;

116 
	gpixñf‹m©
;

117 
key_t
 
	gshmkey
;

118 
key_t
 
	gshmkey_f‹_¥›îty
;

119 
	gshmid_f‹_¥›îty
;

120 * 
	gshmPå_f‹_¥›îty
;

122 
v4l2_fõld
 
	gfõld
;

123 
	gmode
;

124 * 
	gcou¡
;

125 
	gn_buf„r
;

126 
	gbuf„r_size
;

127 
	gbuf„r_num
;

129 
v4l2_ˇ∑bûôy
* 
	gˇp
;

130 
v4l2_öput
* 
	göp
;

131 
v4l2_f‹m©
* 
	gfmt
;

132 
v4l2_¸›
* 
	g¸›
;

133 
v4l2_¸›ˇp
* 
	g¸›ˇp
;

134 
v4l2_ªque°buf„rs
* 
	gªq
;

135 
v4l2_j≥gcom¥essi⁄
* 
	gcom¥
;

136 
v4l2_c⁄åﬁ
* 
	gc⁄åﬁ
;

137 
v4l2_buf„r
* 
	gbuf
;

138 
v4l2_buf_ty≥
 
	gty≥
;

139 
v4l2_quîy˘æ
* 
	gquîy˘æ
;

140 
timevÆ
* 
	gtime°amp
;

141 
¥›îty
* 
	g¥›
;

144 
	g£mid
;

	@cam_proxy.h

1 #i‚de‡
_CAM_PROXY_H_


2 
	#_CAM_PROXY_H_


	)

4 
	~"ˇm_c‹e.h
"

7 
runProxyBuf„r
();

	@cam_record.cpp

1 
	~"ˇm_c‹e.h
"

2 
boﬁ
 
	gRec‹d
::
	$öô_devi˚
()

46  
boﬁ
;

48 
	}
}

49 
boﬁ
 
	gRec‹d
::
	$öô_u£rPoöãr
(
buf„r_size
)

52 
ªqCou¡s
 = 
REC_REQ_COUNT
;

53 
ˇmPr›
->
	`£tN_buf„rs
(
ªqCou¡s
);

54 
v4l2_ªque°buf„rs
* 
ªq
 = 
ˇmP‹p
->
	`gëReque°buf„rs
();

55 
v4l2_buf„r
* 
buf
 = 
ˇmPr›
->
	`gëBuf„r
();

56 
	`mem£t
(&
ªqbufs
, 0, (
ªq
));

57 
ªq
->
cou¡
 = 
ªqCou¡s
;

58 
ªq
->
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

59 
ªq
->
mem‹y
 = 
V4L2_MEMORY_USERPTR
;

60 
buf„rs
 = (
buf„r
*)
	`ˇŒoc
(4, (*buffers));

61 if(!
buf„rs
)

63 
	`Ârötf
(
°dîr
, "Out of Memeory\n");

64  
Ál£
;

66 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_REQBUFS
, 
ªq
))

68 if(
EINVAL
 =
î∫o
)

70 
	`Ârötf
(
°dîr
, "%†d€†nŸ suµ‹à" " u£∏poöã∏i/o\n", 
devi˚Name
);

71  
Ál£
;

75 
	`Ârötf
(
°dîr
, "VIDIOC_REQBUFS");

76  
Ál£
;

79 
i
=0; i<
ªqCou¡s
; i++)

81 
	`mem£t
(&
buf
, 0, (buf));

82 
	`mem£t
(
∂™es
, 0, (planes));

83 
buf
->
ty≥
 = 
V4L2_BUF_TYPE_VIDEIO_CAPTURE
;

84 
buf
->
mem‹y
 = 
V4L2_MEMORY_USERPTR
;

85 
buf
->
ödex
 = 
i
;

86 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_QUERYBUF
, 
buf
))

88 
	`Ârötf
(
°dîr
, "VIDIOC_QUERYBUF");

89  
Ál£
;

92 
buf„rs
[
i
].
Àngth
 = 
buf
.length;

93 
buf„rs
[
i
].
°¨t
 = 
	`ˇŒoc
(1, 
buf
.
Àngth
);

94 if(!
buf„rs
[
i
].
°¨t
)

96 
	`Ârötf
(
°dîr
, "ödex[%d] : Buf„∏CÆlo¯Faûed\n", 
i
);

97  
Ál£
;

99 
buf
->
m
.
u£Ωå
 = ()
buf„rs
[
i
].
°¨t
;

100 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_QBUF
, 
buf
))

102 
	`Ârötf
(
°dîr
, "VIDIOC_QBUF");

103  
Ál£
;

107  
åue
;

108 
	}
}

109 
	$do_h™dÀ_ˇp
(
CamîaPr›îty
* 
ˇmPr›
, 
buf„r
* 
buf„rs
)

111 
ch
 = '<';

112 
ªt
;

113 
v4l2_buf„r
* 
buf
 = 
ˇmPr›
->
	`gëBuf„r
();

114 
fd
 = 
ˇmPr›
->
	`gëfd
();

115 
n_buf„rs
 = 
ˇmPr›
->
	`gëN_buf„rs
();

116 
n_buf„rs
 = 
ˇmPr›
->
	`gëCou¡
();

117 
i
;

118 * 
cou¡
 = 
ˇmPr›
->
	`gëCou¡
();

119 
	`CLEAR
(*
buf
);

120 
buf
->
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

121 
buf
->
mem‹y
 = 
V4L2_MEMORY_USERPTR
;

124 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_DQBUF
, 
buf
))

126 
î∫o
){

127 
EAGAIN
:

130 
EIO
:

133 
	`Ârötf
(
°dîr
, "VIDIOC_DQBUF\n");

134  
Ál£
;

137 
i
=0; i<
n_buf„rs
, ++i)

139 if(
buf
->
m
.

147 
	}
}

148 
boﬁ
 
	$ªcMaöLo›
(
CamîaPr›îty
* 
ˇmPr›
, 
buf„r
* 
buf„rs
)

151 (*
cou¡
)-- > 0)

154 
fd_£t
 
ªad_fds
;

155 
fd_£t
 
ex˚±i⁄_fds
;

156 
timevÆ
 
tv
 = {2, 0};

157 
r
;

158 
	`FD_ZERO
(&
ex˚±i⁄_fds
);

159 
	`FD_SET
(
fd
, &
ex˚±i⁄_fds
);

160 
	`FD_ZERO
(&
ªad_fds
);

161 
	`FD_SET
(
fd
, &
ªad_fds
);

162 
r
 = 
	`£À˘
(
fd
 + 1, 
$ªad_fds
, 
NULL
, &
ex˚±i⁄_fds
, &
tv
);

163 if(-1 =
r
){

164 if(
EINTR
 =
î∫o
)

166 
	`Ârötf
(
°dîr
, "Sñe˘Éº‹ %s\n", 
	`°ªº‹
(
î∫o
));

167  
Ál£
;

169 if(0 =
r
){

170 
	`Ârötf
(
°dîr
, "Select Timeout\n");

171  
Ál£
;

179 if(
	`FD_ISSET
(
fd
, &
ªad_fds
))

181 
r
 = 
this
->
	`do_h™dÀ_ˇp
();

182 if–
r
 == -1)

187  
åue
;

188 
	}
}

189 
boﬁ
 
	gRec‹d
::
	$°¨t
()

191 
i
;

192 
fd
 = 
ˇmPr›
->
	`gëfd
();

193 
n_buf„r
 = 
ˇmPr›
->
	`gëN_buf„rs
();

194 
v4l2_buf„r
* 
buf
 = 
ˇmPr›
->
	`gëBuf„r
();

195 
v4l2_buf_ty≥
 
ty≥
 = 
	`ˇmPr›_gëTy≥
();

196 
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

197 if(-1 =
	`xio˘l
(
fd
, 
VIDIOC_STREAMON
, &
ty≥
))

199 
	`Ârötf
(
°dîr
, "VIDIOC_STREAMON\n");

200  
Ál£
;

202 if(
	`ªcMaöLo›
(
this
->
ˇmPr›
,Åhis->
buf„rs
))

204 
	`Ârötf
(
°dîr
, "REC_MAIN_LOOP\n");

205  
Ál£
;

207  
åue
;

208 
	}
}

209 
boﬁ
 
	gRec‹d
::
	$°›
()

214  
åue
;

215 
	}
}

216 
boﬁ
 
	gRec‹d
::
	$˛o£_devi˚
()

220  
åue
;

221 
	}
}

	@cam_request.h

1 #i‚de‡
_CAM_REQUEST_H_


2 
	#_CAM_REQUEST_H_


	)

3 
	~<°dio.h
>

5 
	eköds
 {
	m›íCV
=0, 
	mREC
};

6 
	e›î©i⁄s
 {
	möô
=0, 
	m°¨t
, 
	m°›
, 
	m˛o£_devi˚
};

8 
	sCamîaReque°


10 
pid_t
 
	mpid
;

12 
köds
 
	mköd
;

13 
›î©i⁄s
 
	m›î©i⁄
;

15 }
	tCamîaReque°
;

	@cam_status.cpp

1 
	~"ˇm_°©us.h
"

2 
CamîaSètus
* 
	gCamîaSètus
::
ˇmSèts
 = 
NULL
;

5 
	gCamîaSètus
::
	$gëThrMuãx
(
±hªad_muãx_t
& 
muãx
)

7 
this
->
muãx
 = mutex;

8 
	}
}

10 
boﬁ
 
	gCamîaSètus
::
	$uöôSem≠h‹e
()

12 
	`£m_˛o£
(
this
->
°©usMuãx
);

13 
	`£m_u∆ök
("CCDSTATUS");

14  
åue
;

15 
	}
}

17 
boﬁ
 
	gCamîaSètus
::
	$öôSem≠h‹e
()

20 
this
->
°©usMuãx
 = 
	`£m_›í
("CCDSTATUS", 
O_CREAT
, 0666, 1);

21 if(
this
->
°©usMuãx
 =
SEM_FAILED
)

23 
	`Ârötf
(
°dîr
, "[CameraStatus::uinitSemaphore] : Init Semaphore Failed\n");

24 
	`£m_u∆ök
("CCDSTATUS");

25  
Ál£
;

27  
åue
;

28 
	}
}

29 
boﬁ
 
	gCamîaSètus
::
	$InôSh¨edPr›îtyToT¨gë
(
°©us
** 
°
)

31 if(!(
this
->
shmPå_f‹_°©us
)){

32 
this
->
shmid_f‹_°©us
 = 
	`shmgë
((
key_t
)
SHM_KEY_FOR_STATUS
, (
°©us
), 0666|
IPC_CREAT
);

33 if(
this
->
shmid_f‹_°©us
 == -1)

35 
	`Ârötf
(
°dîr
, "[CameraStatus::InitSharedPropertyToTarget] : shmget Error\n");

36  
Ál£
;

38 
shmPå_f‹_°©us
 = (*)
	`shm©
(
this
->
shmid_f‹_°©us
, 
NULL
, 0);

39 if(
shmPå_f‹_°©us
 == (*)-1)

41 
	`Ârötf
(
°dîr
, "[CameraStatus::InitSharedPropertyToTarget] : shmat Error\n");

42  
Ál£
;

44 *
°
 = (
°©us
*)
shmPå_f‹_°©us
;

45 (*
°
)->
isCCDRu¬ög
 = 
this
->isCCDRunning;

46 (*
°
)->
isO≥nCVRu¬ög
 = 
this
->isOpenCVRunning;

47 (*
°
)->
isO≥nCVInôülized
 = 
this
->isOpenCVInitialized;

48 (*
°
)->
isRecRu¬ög
 = 
this
->isRecRunning;

49 (*
°
)->
isRecInôülized
 = 
this
->isRecInitialized;

50  
åue
;

53  
åue
;

55  
åue
;

56 
	}
}

57 
	gCamîaSètus
::
	$CamîaSètus
()

60 
this
->
isCCDRu¬ög
 = 
Ál£
;

61 
this
->
isO≥nCVRu¬ög
 = 
Ál£
;

62 
this
->
isO≥nCVInôülized
 = 
Ál£
;

63 
this
->
isRecRu¬ög
 = 
Ál£
;

64 
this
->
isRecInôülized
 = 
Ál£
;

65 
this
->
°©usMuãx
 = 
	`£m_›í
("ˇmSètus", 
O_CREAT
, 0666, 1);

72 
	}
}

73 
	gCamîaSètus
::~
	$CamîaSètus
()

77 
	}
}

78 
CamîaSètus
* CamîaSètus::
	$gëIn°™˚
()

80 if(
ˇmSèts
 == (*)0)

81 
ˇmSèts
 = 
√w
 
	`CamîaSètus
();

82  
ˇmSèts
;

83 
	}
}

	@cam_status.h

1 #i‚de‡
_CAM_STATUS_H_


2 
	#_CAM_STATUS_H_


	)

3 
	~<°dlib.h
>

4 
	~<±hªad.h
>

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

9 
	~<£m≠h‹e.h
>

10 
	~<sys/ùc.h
>

11 
	~<sys/shm.h
>

14 
	~<sys/ty≥s.h
>

15 
	~<uni°d.h
>

16 
	~<sys/°©.h
>

17 
	~<sys/f˙é.h
>

18 
	~<sys/mm™.h
>

19 
	~<f˙é.h
>

20 
	#OPENCV_PROP_SHM
 1588

	)

21 
	#SEM_KEY_FOR_STATUS
 49441

	)

22 
	#SHM_KEY_FOR_STATUS
 4944

	)

23 
	~"ˇm_¥›îty.h
"

28 
	s°©us


30 
boﬁ
 
	misCCDRu¬ög
;

31 
boﬁ
 
	misO≥nCVRu¬ög
;

32 
boﬁ
 
	misO≥nCVInôülized
;

33 
boﬁ
 
	misRecRu¬ög
;

34 
boﬁ
 
	misRecInôülized
;

36 }
	t°©us
;

38 ˛as†
	cCamîaSètus


40 
	mpublic
:

41 ~
CamîaSètus
();

42 
gëThrMuãx
(
±hªad_muãx_t
& 
muãx
);

43 
CamîaSètus
* 
gëIn°™˚
();

44 
boﬁ
 
	$gëIsO≥nCVRu¬ög
(Ë{  
this
->
isO≥nCVRu¬ög
; }

45 
	$£tIsO≥nCVRu¬ög
(
boﬁ
 
isRu¬ög
)

47 
	`£m_waô
(
°©usMuãx
);

48 
this
->
isO≥nCVRu¬ög
 = 
isRu¬ög
;

49 
°©usObje˘
->
isO≥nCVRu¬ög
 = 
isRu¬ög
;

50 
	`£m_po°
(
°©usMuãx
);

51 
	}
}

52 
boﬁ
 
	$gëIsO≥nCVInôülized
(Ë{  
this
->
isO≥nCVInôülized
; 
	}
}

53 
	$£tIsO≥nCVInôülized
(
boﬁ
 
isInôülized
)

55 
	`£m_waô
(
°©usMuãx
);

56 
this
->
isO≥nCVInôülized
 = 
isInôülized
;

57 
°©usObje˘
->
isO≥nCVInôülized
 = 
isInôülized
;

58 
	`£m_po°
(
°©usMuãx
);

59 
	}
}

61 
boﬁ
 
	$gëIsRecRu¬ög
(Ë{  
this
->
isRecRu¬ög
; 
	}
}

62 
	$£tIsRecRu¬ög
(
boﬁ
 
isRu¬ög
)

64 
	`£m_waô
(
°©usMuãx
);

65 
this
->
isRecRu¬ög
 = 
isRu¬ög
;

66 
°©usObje˘
->
isRecRu¬ög
 = 
isRu¬ög
;

67 
	`£m_po°
(
°©usMuãx
);

68 
	}
};

69 
boﬁ
 
	$gëIsRecInôülized
(Ë{  
this
->
isRecInôülized
; 
	}
}

70 
	$£tIsRecInôülized
(
boﬁ
 
isInôülized
)

72 
	`£m_waô
(
°©usMuãx
);

73 
this
->
isRecInôülized
 = 
isInôülized
;

74 
°©usObje˘
->
isRecInôülized
 = 
isInôülized
;

75 
	`£m_po°
(
°©usMuãx
);

76 
	}
}

78 
boﬁ
 
öôSem≠h‹e
();

79 
boﬁ
 
uöôSem≠h‹e
();

80 
	$gëSemid
(){  
this
->
£mid
; 
	}
}

81 
boﬁ
 
InôSh¨edPr›îtyToT¨gë
(
°©us
** 
°
);

82 
	$£tSètusObje˘
(
°©us
* 
°
){ 
this
->
°©usObje˘
 = st; 
	}
}

84 
	g¥iv©e
:

85 
CamîaSètus
* 
ˇmSèts
;

86 
CamîaSètus
();

87 
boﬁ
 
	gisCCDRu¬ög
;

88 
boﬁ
 
	gisO≥nCVRu¬ög
;

89 
boﬁ
 
	gisO≥nCVInôülized
;

90 
boﬁ
 
	gisRecRu¬ög
;

91 
boﬁ
 
	gisRecInôülized
;

92 
±hªad_muãx_t
 
	gmuãx
;

93 
£m_t
* 
	g°©usMuãx
;

94 
	g£mid
;

95 
	gshmid_f‹_°©us
;

96 * 
	gshmPå_f‹_°©us
;

97 
°©us
* 
	g°©usObje˘
;

	@ctrlAPI.h

1 #i‚de‡
_CTRL_API_H_


2 
	#_CTRL_API_H_


	)

	@deletesem.c

1 
	~<£m≠h‹e.h
>

2 
	~<°dio.h
>

3 
	~<î∫o.h
>

4 
	~<°dlib.h
>

5 
	~<uni°d.h
>

6 
	~<sys/ty≥s.h
>

7 
	~<sys/°©.h
>

8 
	~<f˙é.h
>

9 
	~<sys/mm™.h
>

10 
	gSEM_NAME
[]= "vik";

11 
	gSEM_FOR_SELECT
[]="vvik";

12 
	$maö
()

14 
ch
;

15 
shmid
;

16 
key_t
 
key
;

17 *
shm
,*
s
;

18 
£m_t
 *
muãx
;

19 
£m_t
 *
£mF‹Sñe˘
;

20 
muãx
 = 
	`£m_›í
(
SEM_NAME
,
O_CREAT
,0644,1);

21 if(
muãx
 =
SEM_FAILED
)

23 
	`≥º‹
("unableÅo create semaphore");

24 
	`£m_u∆ök
(
SEM_NAME
);

25 
	`exô
(-1);

27 
£mF‹Sñe˘
 = 
	`£m_›í
(
SEM_FOR_SELECT
, 
O_CREAT
, 0664, 1);

28 if(
£mF‹Sñe˘
 =
SEM_FAILED
)

30 
	`≥º‹
("unableÅo create semaphore");

31 
	`£m_u∆ök
(
SEM_FOR_SELECT
);

32 
	`exô
(-1);

34 
	`£m_˛o£
(
muãx
);

35 
	`£m_˛o£
(
£mF‹Sñe˘
);

36 
	`£m_u∆ök
(
SEM_FOR_SELECT
);

37 
	`£m_u∆ök
(
SEM_NAME
);

38 
muãx
 = 
	`£m_›í
("CCDSTATUS", 
O_CREAT
, 0666, 1);

39 if(
muãx
 =
SEM_FAILED
)

41 
	`≥º‹
("unableÅo create Semaphore");

42 
	`£m_u∆ök
("CCDSTATUS");

43 
	`exô
(-1);

45 
	`£m_˛o£
(
muãx
);

46 
	`£m_u∆ök
("CCDSTATUS");

49 
	}
}

	@main.cpp

1 
	~<io°ªam
>

2 
	~<dbus/dbus.h
>

3 
	~<dbus/dbus-glib.h
>

4 
	~<glib.h
>

5 
	~<dbus/dbus-glib-lowÀvñ.h
>

6 
	~<°dio.h
>

7 
	~<±hªad.h
>

8 
	~<°dlib.h
>

9 
	~<uni°d.h
>

10 
	~<°dio.h
>

11 
	~<queue
>

12 
	~"ˇm_ªque°.h
"

13 
	~"ˇm_c‹e.h
"

14 
	~"ˇm_°©us.h
"

15 
	~"ˇm_¥›îty.h
"

16 
	#îrExô
(
msg
Ëdÿ{
	`≥º‹
(msg); 
	`exô
(
EXIT_FAILURE
);}0)

	)

17 
	#NUM_OF_THREADS
 2

	)

19 
	#INDEX_OF_OPENCV_THR
 0

	)

20 
	#INDEX_OF_REC_THR
 1

	)

22 
ölöe
 
DBusH™dÀrResu…
 
	$ªtu∫MSG
(c⁄° * 
îrMsg
)

24 
	`Ârötf
(
°dîr
, 
îrMsg
);

25  
DBUS_HANDLER_RESULT_HANDLED
;

26 
	}
}

28 
CamîaPr›îty
* 
	g›íCV_ˇmPr›
;

29 
CamîaPr›îty
* 
	gªc_ˇmPr›
;

31 
O≥nCVSuµ‹t
* 
	gªc_ˇm
;

32 
O≥nCVSuµ‹t
* 
	g›íCV_ˇm
;

34 
¥›îty
* 
	g›íCVPr›îty
;

35 
¥›îty
* 
	gªcPr›îty
;

38 
°©us
* 
	g°
;

40 
CamîaSètus
* 
	gˇmSètus
;

41 
±hªad_muãx_t
 
	gmuãx_lock
;

44 
boﬁ
 
	gfú°
;

45 
	g£m_°©us_id
;

47 
boﬁ
 
	gis_›íCVCamInô
;

48 
boﬁ
 
	gis_ªcInô
;

50 
±hªad_t
 
	gOPELCamThªad
[
NUM_OF_THREADS
];

51 
	gthr_id
[2] = {0,};

54 
	g›íCVRefC¡
;

55 
	gªcRefC¡
;

56 
boﬁ
 
	g°ªamögOn
;

58 * 
	$ªcCamîaSuµ‹tThr
(* 
¨gs
)

60 if(!
ªc_ˇm
->
	`°¨t
())

62 
	`Ârötf
(
°dîr
, "START FIALED\n");

63  
NULL
;

65 
ˇmSètus
->
	`£tIsRecRu¬ög
(
Ál£
);

66 
ªc_ˇm
->
	`£tEos
(
Ál£
);

67 if(!
ªc_ˇm
->
	`°›
())

69 
	`Ârötf
(
°dîr
, "STOP FAILED\n");

70  
NULL
;

72 
	`¥ötf
("recording Done!!!\n");

74 
	}
}

75 * 
	$›íCVCamîaSuµ‹tThr
(* 
¨gs
)

77 if(!
›íCV_ˇm
->
	`°¨t
())

79 
	`Ârötf
(
°dîr
, "START FAIL\n");

80  
NULL
;

82 
ˇmSètus
->
	`£tIsO≥nCVRu¬ög
(
Ál£
);

83 
›íCV_ˇm
->
	`£tEos
(
Ál£
);

84 if(!
›íCV_ˇm
->
	`°›
())

86 
	`Ârötf
(
°dîr
, "STOP FAILED\n");

87  
NULL
;

89 
	`¥ötf
("opencv Done!!!\n");

91 
	}
}

93 
	$£tCou¡
(
cuº
)

96 
	`±hªad_muãx_lock
(&
muãx_lock
);

97 * 
¥ev
 = 
ªc_ˇmPr›
->
	`gëCou¡
();

99 
	`Ârötf
(
°dîr
, "cuº : %d, *¥ev : %d\n", 
cuº
, *
¥ev
);

100 if((2*
cuº
Ë> *
¥ev
){

102 
	`Ârötf
(
°dîr
, "(2*curr) > *prev !!!!!!!!!\n");

103 if(
cuº
 == 1)

104 *
¥ev
100*
cuº
;

105 if(
cuº
 > 1)

106 *
¥ev
 = 2*
cuº
;

109 if(
cuº
 == 0)

111 
	`Ârötf
(
°dîr
, "curr == 0 !!!!!!\n");

112 
°ªamögOn
 = 
åue
;

113 *
¥ev
 = 10000000;

115 
	`±hªad_muãx_u∆ock
(&
muãx_lock
);

117 
	}
}

119 
DBusH™dÀrResu…
 
	$dbus_fûãr
(
DBusC⁄√˘i⁄
 *
c⁄n
, 
DBusMesßge
 *
mesßge
, *
u£r_d©a
)

122 
DBusMesßgeIãr
 
¨gs
;

125 if(
	`dbus_mesßge_is_sig«l
(
mesßge
, "org.opel.camera.daemon", "OpenCVInit"))

127 
°d
::
cout
 << "Get[DBUS] : OpenCVInit\n";

129 if(
ˇmSètus
->
	`gëIsRecRu¬ög
())

131 
	`Ârötf
(
°dîr
, "Recording Process is Running\n");

132  
DBUS_HANDLER_RESULT_HANDLED
;

134 if(
ˇmSètus
->
	`gëIsRecInôülized
())

136 
	`Ârötf
(
°dîr
, "Recording Process is Not RunningÅhen start openCV Service\n");

137 if(!
ªc_ˇm
->
	`˛o£_devi˚
())

139 
	`Ârötf
(
°dîr
, "recording device_close callÉrror\n");

140  
DBUS_HANDLER_RESULT_HANDLED
;

142 
ˇmSètus
->
	`£tIsRecInôülized
(
Ál£
);

145 if(
ˇmSètus
->
	`gëIsO≥nCVInôülized
(Ë|| camSètus->
	`gëIsO≥nCVRu¬ög
())

147 
	`Ârötf
(
°dîr
, "[OpenCVInit] : OpenCV Already Working or Initialized\n");

148  
DBUS_HANDLER_RESULT_HANDLED
;

151 
›íCV_ˇmPr›
->
	`¥ötSëVÆue
();

152 if(!
›íCV_ˇm
->
	`›í
())

154 
	`Ârötf
(
°dîr
, "DEVICE OPEN FAILED\n");

155  
DBUS_HANDLER_RESULT_HANDLED
;

157 if(!
›íCV_ˇm
->
	`öô_devi˚
())

159 
	`Ârötf
(
°dîr
, "DEVICE INIT FAILED\n");

160  
DBUS_HANDLER_RESULT_HANDLED
;

162 
ˇmSètus
->
	`£tIsO≥nCVInôülized
(
åue
);

164  
DBUS_HANDLER_RESULT_HANDLED
;

167 if(
	`dbus_mesßge_is_sig«l
(
mesßge
, "org.opel.camera.daemon", "OpenCVStart"))

169 
°d
::
cout
 << "Get[DBUS] : OpenCVStart\n";

171 if(
ˇmSètus
->
	`gëIsO≥nCVInôülized
(Ë&& !(ˇmSètus->
	`gëIsO≥nCVRu¬ög
()))

173 
›íCV_ˇm
->
	`£tEos
(
åue
);

175 
thr_id
[
INDEX_OF_OPENCV_THR
] = 
	`±hªad_¸óã
(&
OPELCamThªad
[INDEX_OF_OPENCV_THR], 
NULL
, 
›íCVCamîaSuµ‹tThr
, (*)0);

176 if(
thr_id
 < 0)

178 
	`Ârötf
(
°dîr
, "Create Thread Failed\n");

179  
DBUS_HANDLER_RESULT_HANDLED
;

182 if(-1 =
	`±hªad_dëach
(
OPELCamThªad
[0]))

184 
	`Ârötf
(
°dîr
, "[DBUS_OPENCVSTOP] :Öthread_detach Error\n");

185  
DBUS_HANDLER_RESULT_HANDLED
;

187 
ˇmSètus
->
	`£tIsO≥nCVRu¬ög
(
åue
);

191  
DBUS_HANDLER_RESULT_HANDLED
;

193  
DBUS_HANDLER_RESULT_HANDLED
;

197 if(
	`dbus_mesßge_is_sig«l
(
mesßge
, "org.opel.camera.daemon", "OpenCVStop"))

200  
DBUS_HANDLER_RESULT_HANDLED
;

204 if(
	`dbus_mesßge_is_sig«l
(
mesßge
, "org.opel.camera.daemon", "recInit"))

206 
°d
::
cout
 << "Get[DBUS] :ÑecInit\n";

208 if(
ˇmSètus
->
	`gëIsO≥nCVRu¬ög
(Ë|| camSètus->
	`gëIsO≥nCVInôülized
())

210 
	`Ârötf
(
°dîr
, "Turning OffÅhe OpenCV\n");

211 
›íCV_ˇm
->
	`£tEos
(
Ál£
);

212 
	`u¶ìp
(100000);

214 if(!
›íCV_ˇm
->
	`˛o£_devi˚
())

216 
	`Ârötf
(
°dîr
, "CLOSE DEVICE FAILED\n");

217  
DBUS_HANDLER_RESULT_HANDLED
;

219 
ˇmSètus
->
	`£tIsO≥nCVRu¬ög
(
Ál£
);

220 
ˇmSètus
->
	`£tIsO≥nCVInôülized
(
Ál£
);

223 if(
ˇmSètus
->
	`gëIsRecRu¬ög
(Ë|| camSètus->
	`gëIsRecInôülized
())

225 
	`¥ötf
("Already Recording Initialized\n");

226  
DBUS_HANDLER_RESULT_HANDLED
;

230 
ªc_ˇmPr›
->
	`¥ötSëVÆue
();

231 if(!
ªc_ˇm
->
	`›í
())

233 
	`Ârötf
(
°dîr
, "DEVICE OPEN FAILED\n");

234  
DBUS_HANDLER_RESULT_HANDLED
;

236 if(!
ªc_ˇm
->
	`öô_devi˚
())

238 
	`Ârötf
(
°dîr
, "DEVICE INIT FAILED\n");

239  
DBUS_HANDLER_RESULT_HANDLED
;

241 
ˇmSètus
->
	`£tIsRecInôülized
(
åue
);

242  
DBUS_HANDLER_RESULT_HANDLED
;

244  
DBUS_HANDLER_RESULT_HANDLED
;

247 if(
	`dbus_mesßge_is_sig«l
(
mesßge
, "org.opel.camera.daemon", "recStart"))

249 
cuºCou¡
 = 0;

250 
°d
::
cout
 << "Get[DBUS] :ÑecStart\n";

253 
	`dbus_mesßge_ôî_öô
(
mesßge
, &
¨gs
);

255 
	`dbus_mesßge_ôî_gë_basic
(&
¨gs
, &
cuºCou¡
);

256 }
	`dbus_mesßge_ôî_√xt
(&
¨gs
));

257 
	`£tCou¡
(
cuºCou¡
);

258 
ªc_ˇm
->
	`£tEos
(
åue
);

260 if(
ˇmSètus
->
	`gëIsRecRu¬ög
()){

261 
	`¥ötf
("Recording Already Running\n");

262  
DBUS_HANDLER_RESULT_HANDLED
;

266 if(
ˇmSètus
->
	`gëIsRecInôülized
()){

267 
ªc_ˇm
->
	`£tEos
(
åue
);

268 
thr_id
[
INDEX_OF_REC_THR
] = 
	`±hªad_¸óã
(&
OPELCamThªad
[INDEX_OF_REC_THR], 
NULL
, 
ªcCamîaSuµ‹tThr
, (*)0);

270 if(
thr_id
[
INDEX_OF_REC_THR
] < 0)

272 
	`Ârötf
(
°dîr
, "CREATE THREAD FAILED\n");

273  
DBUS_HANDLER_RESULT_HANDLED
;

275 if(-1 =
	`±hªad_dëach
(
OPELCamThªad
[
INDEX_OF_REC_THR
]))

277 
	`Ârötf
(
°dîr
, "DetatchingÅheÖ_thread Failed\n");

278  
DBUS_HANDLER_RESULT_HANDLED
;

280 
ˇmSètus
->
	`£tIsRecRu¬ög
(
åue
);

284 
	`Ârötf
(
°dîr
, "CAMERA PROPERTY NOT INITIALIZED YET\n");

285  
DBUS_HANDLER_RESULT_HANDLED
;

287  
DBUS_HANDLER_RESULT_HANDLED
;

291 if(
	`dbus_mesßge_is_sig«l
(
mesßge
, "org.opel.camera.daemon", "recStop"))

293 if(
°ªamögOn
)

295 
	`Ârötf
(
°dîr
, "recStop occurred by streaming Process\n");

296 
ªc_ˇm
->
	`£tEos
(
Ál£
);

297 
	`u¶ìp
(10000);

298 
°ªamögOn
 = 
Ál£
;

302 
	`Ârötf
(
°dîr
, "recStop is occurred byÇot streaming Process\n");

303  
DBUS_HANDLER_RESULT_HANDLED
;

305  
DBUS_HANDLER_RESULT_HANDLED
;

307  
DBUS_HANDLER_RESULT_NOT_YET_HANDLED
;

308 
	}
}

314 
	$maö
(
¨gc
, ** 
¨gv
)

316 
boﬁ
 
isRec
 = 
åue
;

318 
›íCVRefC¡
 = 0;

319 
ªcRefC¡
 = 0;

320 
°ªamögOn
 = 
Ál£
;

321 
›íCVPr›îty
 = (
¥›îty
*)
	`mÆloc
((property));

322 
ªcPr›îty
 = (
¥›îty
*)
	`mÆloc
((property));

327 
›íCV_ˇmPr›
 = 
√w
 
	`CamîaPr›îty
(!
isRec
);

329 
ªc_ˇmPr›
 = 
√w
 
	`CamîaPr›îty
(
isRec
);

332 
›íCV_ˇmPr›
->
	`InôSh¨edPr›îtyToT¨gë
(
›íCVPr›îty
);

333 
›íCV_ˇmPr›
->
	`£tPr›îty
(
›íCVPr›îty
);

335 
ªc_ˇmPr›
->
	`InôSh¨edPr›îtyToT¨gë
(
ªcPr›îty
);

336 
ªc_ˇmPr›
->
	`£tPr›îty
(
ªcPr›îty
);

338 
›íCV_ˇmPr›
->
	`öôSem≠h‹e
();

339 
ªc_ˇm
 = 
√w
 
	`O≥nCVSuµ‹t
();

340 
›íCV_ˇm
 = 
√w
 
	`O≥nCVSuµ‹t
();

342 
›íCV_ˇm
->
	`£tCamîaPr›îty
(
›íCV_ˇmPr›
);

343 
ªc_ˇm
->
	`£tCamîaPr›îty
(
ªc_ˇmPr›
);

344 
	`±hªad_muãx_öô
(&
muãx_lock
, 
NULL
);

346 
ˇmSètus
 = 
CamîaSètus
::
	`gëIn°™˚
();

348 
ˇmSètus
->
	`InôSh¨edPr›îtyToT¨gë
(&
°
);

349 
ˇmSètus
->
	`£tSètusObje˘
(
°
);

350 
ˇmSètus
->
	`öôSem≠h‹e
();

351 
ˇmSètus
->
	`gëThrMuãx
(
muãx_lock
);

352 
›íCV_ˇm
->
	`£tThrMuãx
(
muãx_lock
);

354 
fú°
 = 
åue
;

355 
DBusC⁄√˘i⁄
 *
c⁄n
;

356 
DBusEº‹
 
îr
;

357 
GMaöLo›
 *
lo›
;

358 
lo›
 = 
	`g_maö_lo›_√w
(
NULL
, 
Ál£
);

359 
	`dbus_îr‹_öô
(&
îr
);

360 
c⁄n
 = 
	`dbus_bus_gë
(
DBUS_BUS_SYSTEM
, &
îr
);

361 if(
	`dbus_îr‹_is_£t
(&
îr
))

363 
	`¥ötf
("Eº‹ C⁄√˘ögÅÿthêD´m⁄ Bu†: %s", 
îr
.
mesßge
);

364 
	`dbus_îr‹_‰ì
(&
îr
);

367 
	`dbus_bus_add_m©ch
(
c⁄n
, "ty≥='sig«l',öãrÁ˚='‹g.›ñ.ˇmîa.d´m⁄'", 
NULL
);

368 
	`dbus_c⁄√˘i⁄_add_fûãr
(
c⁄n
, 
dbus_fûãr
, 
lo›
, 
NULL
);

369 
	`dbus_c⁄√˘i⁄_£tup_wôh_g_maö
(
c⁄n
, 
NULL
);

370 
	`g_maö_lo›_run
(
lo›
);

373 
	}
}

	@test.cpp

1 
	~"ˇm_c‹e.h
"

2 
	~<io°ªam
>

4 
	#îrExô
(
msg
Ëdÿ{
	`≥º‹
(msg); 
	`exô
(
EXIT_FAILURE
);}0)

	)

5 
	$maö
()

14 
	}
}

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

90 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_BSD


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3));

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

195 
	#ªaddú_r
 
ªaddú64_r


	)

199 #ifde‡
__USE_LARGEFILE64


200 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

201 
dúít64
 *
__ª°ri˘
 
__íåy
,

202 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

203 
	`__n⁄nuŒ
 ((1, 2, 3));

208 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

210 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


211 
	~<bôs/ty≥s.h
>

214 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

220 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


223 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


226 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

229 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


230 #i‚de‡
MAXNAMLEN


232 
	~<bôs/posix1_lim.h
>

235 #ifde‡
NAME_MAX


236 
	#MAXNAMLEN
 
NAME_MAX


	)

238 
	#MAXNAMLEN
 255

	)

243 
	#__√ed_size_t


	)

244 
	~<°ddef.h
>

253 #i‚de‡
__USE_FILE_OFFSET64


254 
	`sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

255 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

256 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

257 (*
__cmp
Ë(c⁄° 
dúít
 **,

258 c⁄° 
dúít
 **))

259 
	`__n⁄nuŒ
 ((1, 2));

261 #ifde‡
__REDIRECT


262 
	`__REDIRECT
 (
sˇndú
,

263 (c⁄° *
__ª°ri˘
 
__dú
,

264 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

265 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

266 (*
__cmp
Ë(c⁄° 
dúít
 **,

267 c⁄° 
dúít
 **)),

268 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

270 
	#sˇndú
 
sˇndú64


	)

274 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


277 
	`sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

278 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

279 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

280 (*
__cmp
Ë(c⁄° 
dúít64
 **,

281 c⁄° 
dúít64
 **))

282 
	`__n⁄nuŒ
 ((1, 2));

285 #ifde‡
__USE_GNU


291 #i‚de‡
__USE_FILE_OFFSET64


292 
	`sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

293 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

294 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

295 (*
__cmp
Ë(c⁄° 
dúít
 **,

296 c⁄° 
dúít
 **))

297 
	`__n⁄nuŒ
 ((2, 3));

299 #ifde‡
__REDIRECT


300 
	`__REDIRECT
 (
sˇndú©
,

301 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

302 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

303 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

304 (*
__cmp
Ë(c⁄° 
dúít
 **,

305 c⁄° 
dúít
 **)),

306 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

308 
	#sˇndú©
 
sˇndú©64


	)

314 
	`sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

315 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

316 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

317 (*
__cmp
Ë(c⁄° 
dúít64
 **,

318 c⁄° 
dúít64
 **))

319 
	`__n⁄nuŒ
 ((2, 3));

323 #i‚de‡
__USE_FILE_OFFSET64


324 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

325 c⁄° 
dúít
 **
__e2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

328 #ifde‡
__REDIRECT


329 
	`__REDIRECT_NTH
 (
Æphas‹t
,

330 (c⁄° 
dúít
 **
__e1
,

331 c⁄° 
dúít
 **
__e2
),

332 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

334 
	#Æphas‹t
 
Æphas‹t64


	)

338 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


339 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

340 c⁄° 
dúít64
 **
__e2
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


351 #i‚de‡
__USE_FILE_OFFSET64


352 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

353 
size_t
 
__nbyãs
,

354 
__off_t
 *
__ª°ri˘
 
__ba£p
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

357 #ifde‡
__REDIRECT


358 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

359 (
__fd
, *
__ª°ri˘
 
__buf
,

360 
size_t
 
__nbyãs
,

361 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

362 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

364 
	#gëdúíåõs
 
gëdúíåõs64


	)

368 #ifde‡
__USE_LARGEFILE64


369 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

370 
size_t
 
__nbyãs
,

371 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

372 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

376 #ifde‡
__USE_GNU


378 #i‚de‡
__USE_FILE_OFFSET64


379 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

380 c⁄° 
dúít
 **
__e2
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

383 #ifde‡
__REDIRECT


384 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

385 (c⁄° 
dúít
 **
__e1
,

386 c⁄° 
dúít
 **
__e2
),

387 
vîsi⁄s‹t64
)

388 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

390 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

394 #ifde‡
__USE_LARGEFILE64


395 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

396 c⁄° 
dúít64
 **
__e2
)

397 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

401 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/linux/videodev2.h

56 #i‚de‡
__LINUX_VIDEODEV2_H


57 
	#__LINUX_VIDEODEV2_H


	)

59 
	~<sys/time.h
>

61 
	~<löux/io˘l.h
>

62 
	~<löux/ty≥s.h
>

68 
	#VIDEO_MAX_FRAME
 32

	)

69 
	#VIDEO_MAX_PLANES
 8

	)

75 
	#VID_TYPE_CAPTURE
 1

	)

76 
	#VID_TYPE_TUNER
 2

	)

77 
	#VID_TYPE_TELETEXT
 4

	)

78 
	#VID_TYPE_OVERLAY
 8

	)

79 
	#VID_TYPE_CHROMAKEY
 16

	)

80 
	#VID_TYPE_CLIPPING
 32

	)

81 
	#VID_TYPE_FRAMERAM
 64

	)

82 
	#VID_TYPE_SCALES
 128

	)

83 
	#VID_TYPE_MONOCHROME
 256

	)

84 
	#VID_TYPE_SUBCAPTURE
 512

	)

85 
	#VID_TYPE_MPEG_DECODER
 1024

	)

86 
	#VID_TYPE_MPEG_ENCODER
 2048

	)

87 
	#VID_TYPE_MJPEG_DECODER
 4096

	)

88 
	#VID_TYPE_MJPEG_ENCODER
 8192

	)

95 
	#v4l2_fourcc
(
a
, 
b
, 
c
, 
d
)\

96 ((
__u32
)(
a
Ë| ((__u32)(
b
Ë<< 8Ë| ((__u32)(
c
Ë<< 16Ë| ((__u32)(
d
Ë<< 24))

	)

101 
	ev4l2_fõld
 {

102 
	mV4L2_FIELD_ANY
 = 0,

106 
	mV4L2_FIELD_NONE
 = 1,

107 
	mV4L2_FIELD_TOP
 = 2,

108 
	mV4L2_FIELD_BOTTOM
 = 3,

109 
	mV4L2_FIELD_INTERLACED
 = 4,

110 
	mV4L2_FIELD_SEQ_TB
 = 5,

112 
	mV4L2_FIELD_SEQ_BT
 = 6,

113 
	mV4L2_FIELD_ALTERNATE
 = 7,

115 
	mV4L2_FIELD_INTERLACED_TB
 = 8,

118 
	mV4L2_FIELD_INTERLACED_BT
 = 9,

122 
	#V4L2_FIELD_HAS_TOP
(
fõld
) \

123 ((
fõld
Ë=
V4L2_FIELD_TOP
 ||\

124 (
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

125 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

126 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

127 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

128 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

129 
	#V4L2_FIELD_HAS_BOTTOM
(
fõld
) \

130 ((
fõld
Ë=
V4L2_FIELD_BOTTOM
 ||\

131 (
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

132 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

133 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

134 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

135 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

136 
	#V4L2_FIELD_HAS_BOTH
(
fõld
) \

137 ((
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

138 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

139 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

140 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

141 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

143 
	ev4l2_buf_ty≥
 {

144 
	mV4L2_BUF_TYPE_VIDEO_CAPTURE
 = 1,

145 
	mV4L2_BUF_TYPE_VIDEO_OUTPUT
 = 2,

146 
	mV4L2_BUF_TYPE_VIDEO_OVERLAY
 = 3,

147 
	mV4L2_BUF_TYPE_VBI_CAPTURE
 = 4,

148 
	mV4L2_BUF_TYPE_VBI_OUTPUT
 = 5,

149 
	mV4L2_BUF_TYPE_SLICED_VBI_CAPTURE
 = 6,

150 
	mV4L2_BUF_TYPE_SLICED_VBI_OUTPUT
 = 7,

153 
	mV4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY
 = 8,

155 
	mV4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE
 = 9,

156 
	mV4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE
 = 10,

157 
	mV4L2_BUF_TYPE_PRIVATE
 = 0x80,

160 
	#V4L2_TYPE_IS_MULTIPLANAR
(
ty≥
) \

161 ((
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE
 \

162 || (
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE
)

	)

164 
	#V4L2_TYPE_IS_OUTPUT
(
ty≥
) \

165 ((
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OUTPUT
 \

166 || (
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE
 \

167 || (
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OVERLAY
 \

168 || (
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY
 \

169 || (
ty≥
Ë=
V4L2_BUF_TYPE_VBI_OUTPUT
 \

170 || (
ty≥
Ë=
V4L2_BUF_TYPE_SLICED_VBI_OUTPUT
)

	)

172 
	ev4l2_tu√r_ty≥
 {

173 
	mV4L2_TUNER_RADIO
 = 1,

174 
	mV4L2_TUNER_ANALOG_TV
 = 2,

175 
	mV4L2_TUNER_DIGITAL_TV
 = 3,

178 
	ev4l2_mem‹y
 {

179 
	mV4L2_MEMORY_MMAP
 = 1,

180 
	mV4L2_MEMORY_USERPTR
 = 2,

181 
	mV4L2_MEMORY_OVERLAY
 = 3,

185 
	ev4l2_cﬁ‹•a˚
 {

187 
	mV4L2_COLORSPACE_SMPTE170M
 = 1,

190 
	mV4L2_COLORSPACE_SMPTE240M
 = 2,

193 
	mV4L2_COLORSPACE_REC709
 = 3,

196 
	mV4L2_COLORSPACE_BT878
 = 4,

199 
	mV4L2_COLORSPACE_470_SYSTEM_M
 = 5,

200 
	mV4L2_COLORSPACE_470_SYSTEM_BG
 = 6,

206 
	mV4L2_COLORSPACE_JPEG
 = 7,

209 
	mV4L2_COLORSPACE_SRGB
 = 8,

212 
	ev4l2_¥i‹ôy
 {

213 
	mV4L2_PRIORITY_UNSET
 = 0,

214 
	mV4L2_PRIORITY_BACKGROUND
 = 1,

215 
	mV4L2_PRIORITY_INTERACTIVE
 = 2,

216 
	mV4L2_PRIORITY_RECORD
 = 3,

217 
	mV4L2_PRIORITY_DEFAULT
 = 
V4L2_PRIORITY_INTERACTIVE
,

220 
	sv4l2_ª˘
 {

221 
__s32
 
	mÀ·
;

222 
__s32
 
	mt›
;

223 
__s32
 
	mwidth
;

224 
__s32
 
	mheight
;

227 
	sv4l2_‰a˘
 {

228 
__u32
 
	mnumî©‹
;

229 
__u32
 
	mdíomö©‹
;

235 
	sv4l2_ˇ∑bûôy
 {

236 
__u8
 
	mdrivî
[16];

237 
__u8
 
	mˇrd
[32];

238 
__u8
 
	mbus_öfo
[32];

239 
__u32
 
	mvîsi⁄
;

240 
__u32
 
	mˇ∑bûôõs
;

241 
__u32
 
	mª£rved
[4];

245 
	#V4L2_CAP_VIDEO_CAPTURE
 0x00000001

	)

246 
	#V4L2_CAP_VIDEO_OUTPUT
 0x00000002

	)

247 
	#V4L2_CAP_VIDEO_OVERLAY
 0x00000004

	)

248 
	#V4L2_CAP_VBI_CAPTURE
 0x00000010

	)

249 
	#V4L2_CAP_VBI_OUTPUT
 0x00000020

	)

250 
	#V4L2_CAP_SLICED_VBI_CAPTURE
 0x00000040

	)

251 
	#V4L2_CAP_SLICED_VBI_OUTPUT
 0x00000080

	)

252 
	#V4L2_CAP_RDS_CAPTURE
 0x00000100

	)

253 
	#V4L2_CAP_VIDEO_OUTPUT_OVERLAY
 0x00000200

	)

254 
	#V4L2_CAP_HW_FREQ_SEEK
 0x00000400

	)

255 
	#V4L2_CAP_RDS_OUTPUT
 0x00000800

	)

258 
	#V4L2_CAP_VIDEO_CAPTURE_MPLANE
 0x00001000

	)

260 
	#V4L2_CAP_VIDEO_OUTPUT_MPLANE
 0x00002000

	)

262 
	#V4L2_CAP_TUNER
 0x00010000

	)

263 
	#V4L2_CAP_AUDIO
 0x00020000

	)

264 
	#V4L2_CAP_RADIO
 0x00040000

	)

265 
	#V4L2_CAP_MODULATOR
 0x00080000

	)

267 
	#V4L2_CAP_READWRITE
 0x01000000

	)

268 
	#V4L2_CAP_ASYNCIO
 0x02000000

	)

269 
	#V4L2_CAP_STREAMING
 0x04000000

	)

274 
	sv4l2_pix_f‹m©
 {

275 
__u32
 
	mwidth
;

276 
__u32
 
	mheight
;

277 
__u32
 
	mpixñf‹m©
;

278 
v4l2_fõld
 
	mfõld
;

279 
__u32
 
	mbyã•îlöe
;

280 
__u32
 
	msizeimage
;

281 
v4l2_cﬁ‹•a˚
 
	mcﬁ‹•a˚
;

282 
__u32
 
	m¥iv
;

288 
	#V4L2_PIX_FMT_RGB332
 
	`v4l2_fourcc
('R', 'G', 'B', '1'Ë

	)

289 
	#V4L2_PIX_FMT_RGB444
 
	`v4l2_fourcc
('R', '4', '4', '4'Ë

	)

290 
	#V4L2_PIX_FMT_RGB555
 
	`v4l2_fourcc
('R', 'G', 'B', 'O'Ë

	)

291 
	#V4L2_PIX_FMT_RGB565
 
	`v4l2_fourcc
('R', 'G', 'B', 'P'Ë

	)

292 
	#V4L2_PIX_FMT_RGB555X
 
	`v4l2_fourcc
('R', 'G', 'B', 'Q'Ë

	)

293 
	#V4L2_PIX_FMT_RGB565X
 
	`v4l2_fourcc
('R', 'G', 'B', 'R'Ë

	)

294 
	#V4L2_PIX_FMT_BGR666
 
	`v4l2_fourcc
('B', 'G', 'R', 'H'Ë

	)

295 
	#V4L2_PIX_FMT_BGR24
 
	`v4l2_fourcc
('B', 'G', 'R', '3'Ë

	)

296 
	#V4L2_PIX_FMT_RGB24
 
	`v4l2_fourcc
('R', 'G', 'B', '3'Ë

	)

297 
	#V4L2_PIX_FMT_BGR32
 
	`v4l2_fourcc
('B', 'G', 'R', '4'Ë

	)

298 
	#V4L2_PIX_FMT_RGB32
 
	`v4l2_fourcc
('R', 'G', 'B', '4'Ë

	)

301 
	#V4L2_PIX_FMT_GREY
 
	`v4l2_fourcc
('G', 'R', 'E', 'Y'Ë

	)

302 
	#V4L2_PIX_FMT_Y4
 
	`v4l2_fourcc
('Y', '0', '4', ' 'Ë

	)

303 
	#V4L2_PIX_FMT_Y6
 
	`v4l2_fourcc
('Y', '0', '6', ' 'Ë

	)

304 
	#V4L2_PIX_FMT_Y10
 
	`v4l2_fourcc
('Y', '1', '0', ' 'Ë

	)

305 
	#V4L2_PIX_FMT_Y12
 
	`v4l2_fourcc
('Y', '1', '2', ' 'Ë

	)

306 
	#V4L2_PIX_FMT_Y16
 
	`v4l2_fourcc
('Y', '1', '6', ' 'Ë

	)

309 
	#V4L2_PIX_FMT_Y10BPACK
 
	`v4l2_fourcc
('Y', '1', '0', 'B'Ë

	)

312 
	#V4L2_PIX_FMT_PAL8
 
	`v4l2_fourcc
('P', 'A', 'L', '8'Ë

	)

315 
	#V4L2_PIX_FMT_YVU410
 
	`v4l2_fourcc
('Y', 'V', 'U', '9'Ë

	)

316 
	#V4L2_PIX_FMT_YVU420
 
	`v4l2_fourcc
('Y', 'V', '1', '2'Ë

	)

317 
	#V4L2_PIX_FMT_YUYV
 
	`v4l2_fourcc
('Y', 'U', 'Y', 'V'Ë

	)

318 
	#V4L2_PIX_FMT_YYUV
 
	`v4l2_fourcc
('Y', 'Y', 'U', 'V'Ë

	)

319 
	#V4L2_PIX_FMT_YVYU
 
	`v4l2_fourcc
('Y', 'V', 'Y', 'U'Ë

	)

320 
	#V4L2_PIX_FMT_UYVY
 
	`v4l2_fourcc
('U', 'Y', 'V', 'Y'Ë

	)

321 
	#V4L2_PIX_FMT_VYUY
 
	`v4l2_fourcc
('V', 'Y', 'U', 'Y'Ë

	)

322 
	#V4L2_PIX_FMT_YUV422P
 
	`v4l2_fourcc
('4', '2', '2', 'P'Ë

	)

323 
	#V4L2_PIX_FMT_YUV411P
 
	`v4l2_fourcc
('4', '1', '1', 'P'Ë

	)

324 
	#V4L2_PIX_FMT_Y41P
 
	`v4l2_fourcc
('Y', '4', '1', 'P'Ë

	)

325 
	#V4L2_PIX_FMT_YUV444
 
	`v4l2_fourcc
('Y', '4', '4', '4'Ë

	)

326 
	#V4L2_PIX_FMT_YUV555
 
	`v4l2_fourcc
('Y', 'U', 'V', 'O'Ë

	)

327 
	#V4L2_PIX_FMT_YUV565
 
	`v4l2_fourcc
('Y', 'U', 'V', 'P'Ë

	)

328 
	#V4L2_PIX_FMT_YUV32
 
	`v4l2_fourcc
('Y', 'U', 'V', '4'Ë

	)

329 
	#V4L2_PIX_FMT_YUV410
 
	`v4l2_fourcc
('Y', 'U', 'V', '9'Ë

	)

330 
	#V4L2_PIX_FMT_YUV420
 
	`v4l2_fourcc
('Y', 'U', '1', '2'Ë

	)

331 
	#V4L2_PIX_FMT_HI240
 
	`v4l2_fourcc
('H', 'I', '2', '4'Ë

	)

332 
	#V4L2_PIX_FMT_HM12
 
	`v4l2_fourcc
('H', 'M', '1', '2'Ë

	)

333 
	#V4L2_PIX_FMT_M420
 
	`v4l2_fourcc
('M', '4', '2', '0'Ë

	)

336 
	#V4L2_PIX_FMT_NV12
 
	`v4l2_fourcc
('N', 'V', '1', '2'Ë

	)

337 
	#V4L2_PIX_FMT_NV21
 
	`v4l2_fourcc
('N', 'V', '2', '1'Ë

	)

338 
	#V4L2_PIX_FMT_NV16
 
	`v4l2_fourcc
('N', 'V', '1', '6'Ë

	)

339 
	#V4L2_PIX_FMT_NV61
 
	`v4l2_fourcc
('N', 'V', '6', '1'Ë

	)

342 
	#V4L2_PIX_FMT_NV12M
 
	`v4l2_fourcc
('N', 'M', '1', '2'Ë

	)

343 
	#V4L2_PIX_FMT_NV12MT
 
	`v4l2_fourcc
('T', 'M', '1', '2'Ë

	)

346 
	#V4L2_PIX_FMT_YUV420M
 
	`v4l2_fourcc
('Y', 'M', '1', '2'Ë

	)

349 
	#V4L2_PIX_FMT_SBGGR8
 
	`v4l2_fourcc
('B', 'A', '8', '1'Ë

	)

350 
	#V4L2_PIX_FMT_SGBRG8
 
	`v4l2_fourcc
('G', 'B', 'R', 'G'Ë

	)

351 
	#V4L2_PIX_FMT_SGRBG8
 
	`v4l2_fourcc
('G', 'R', 'B', 'G'Ë

	)

352 
	#V4L2_PIX_FMT_SRGGB8
 
	`v4l2_fourcc
('R', 'G', 'G', 'B'Ë

	)

353 
	#V4L2_PIX_FMT_SBGGR10
 
	`v4l2_fourcc
('B', 'G', '1', '0'Ë

	)

354 
	#V4L2_PIX_FMT_SGBRG10
 
	`v4l2_fourcc
('G', 'B', '1', '0'Ë

	)

355 
	#V4L2_PIX_FMT_SGRBG10
 
	`v4l2_fourcc
('B', 'A', '1', '0'Ë

	)

356 
	#V4L2_PIX_FMT_SRGGB10
 
	`v4l2_fourcc
('R', 'G', '1', '0'Ë

	)

357 
	#V4L2_PIX_FMT_SBGGR12
 
	`v4l2_fourcc
('B', 'G', '1', '2'Ë

	)

358 
	#V4L2_PIX_FMT_SGBRG12
 
	`v4l2_fourcc
('G', 'B', '1', '2'Ë

	)

359 
	#V4L2_PIX_FMT_SGRBG12
 
	`v4l2_fourcc
('B', 'A', '1', '2'Ë

	)

360 
	#V4L2_PIX_FMT_SRGGB12
 
	`v4l2_fourcc
('R', 'G', '1', '2'Ë

	)

362 
	#V4L2_PIX_FMT_SGRBG10DPCM8
 
	`v4l2_fourcc
('B', 'D', '1', '0')

	)

367 
	#V4L2_PIX_FMT_SBGGR16
 
	`v4l2_fourcc
('B', 'Y', 'R', '2'Ë

	)

370 
	#V4L2_PIX_FMT_MJPEG
 
	`v4l2_fourcc
('M', 'J', 'P', 'G'Ë

	)

371 
	#V4L2_PIX_FMT_JPEG
 
	`v4l2_fourcc
('J', 'P', 'E', 'G'Ë

	)

372 
	#V4L2_PIX_FMT_DV
 
	`v4l2_fourcc
('d', 'v', 's', 'd'Ë

	)

373 
	#V4L2_PIX_FMT_MPEG
 
	`v4l2_fourcc
('M', 'P', 'E', 'G'Ë

	)

374 
	#V4L2_PIX_FMT_H264
 
	`v4l2_fourcc
('H', '2', '6', '4'Ë

	)

375 
	#V4L2_PIX_FMT_H264_NO_SC
 
	`v4l2_fourcc
('A', 'V', 'C', '1'Ë

	)

376 
	#V4L2_PIX_FMT_H263
 
	`v4l2_fourcc
('H', '2', '6', '3'Ë

	)

377 
	#V4L2_PIX_FMT_MPEG1
 
	`v4l2_fourcc
('M', 'P', 'G', '1'Ë

	)

378 
	#V4L2_PIX_FMT_MPEG2
 
	`v4l2_fourcc
('M', 'P', 'G', '2'Ë

	)

379 
	#V4L2_PIX_FMT_MPEG4
 
	`v4l2_fourcc
('M', 'P', 'G', '4'Ë

	)

380 
	#V4L2_PIX_FMT_XVID
 
	`v4l2_fourcc
('X', 'V', 'I', 'D'Ë

	)

381 
	#V4L2_PIX_FMT_VC1_ANNEX_G
 
	`v4l2_fourcc
('V', 'C', '1', 'G'Ë

	)

382 
	#V4L2_PIX_FMT_VC1_ANNEX_L
 
	`v4l2_fourcc
('V', 'C', '1', 'L'Ë

	)

385 
	#V4L2_PIX_FMT_CPIA1
 
	`v4l2_fourcc
('C', 'P', 'I', 'A'Ë

	)

386 
	#V4L2_PIX_FMT_WNVA
 
	`v4l2_fourcc
('W', 'N', 'V', 'A'Ë

	)

387 
	#V4L2_PIX_FMT_SN9C10X
 
	`v4l2_fourcc
('S', '9', '1', '0'Ë

	)

388 
	#V4L2_PIX_FMT_SN9C20X_I420
 
	`v4l2_fourcc
('S', '9', '2', '0'Ë

	)

389 
	#V4L2_PIX_FMT_PWC1
 
	`v4l2_fourcc
('P', 'W', 'C', '1'Ë

	)

390 
	#V4L2_PIX_FMT_PWC2
 
	`v4l2_fourcc
('P', 'W', 'C', '2'Ë

	)

391 
	#V4L2_PIX_FMT_ET61X251
 
	`v4l2_fourcc
('E', '6', '2', '5'Ë

	)

392 
	#V4L2_PIX_FMT_SPCA501
 
	`v4l2_fourcc
('S', '5', '0', '1'Ë

	)

393 
	#V4L2_PIX_FMT_SPCA505
 
	`v4l2_fourcc
('S', '5', '0', '5'Ë

	)

394 
	#V4L2_PIX_FMT_SPCA508
 
	`v4l2_fourcc
('S', '5', '0', '8'Ë

	)

395 
	#V4L2_PIX_FMT_SPCA561
 
	`v4l2_fourcc
('S', '5', '6', '1'Ë

	)

396 
	#V4L2_PIX_FMT_PAC207
 
	`v4l2_fourcc
('P', '2', '0', '7'Ë

	)

397 
	#V4L2_PIX_FMT_MR97310A
 
	`v4l2_fourcc
('M', '3', '1', '0'Ë

	)

398 
	#V4L2_PIX_FMT_SN9C2028
 
	`v4l2_fourcc
('S', 'O', 'N', 'X'Ë

	)

399 
	#V4L2_PIX_FMT_SQ905C
 
	`v4l2_fourcc
('9', '0', '5', 'C'Ë

	)

400 
	#V4L2_PIX_FMT_PJPG
 
	`v4l2_fourcc
('P', 'J', 'P', 'G'Ë

	)

401 
	#V4L2_PIX_FMT_OV511
 
	`v4l2_fourcc
('O', '5', '1', '1'Ë

	)

402 
	#V4L2_PIX_FMT_OV518
 
	`v4l2_fourcc
('O', '5', '1', '8'Ë

	)

403 
	#V4L2_PIX_FMT_STV0680
 
	`v4l2_fourcc
('S', '6', '8', '0'Ë

	)

404 
	#V4L2_PIX_FMT_TM6000
 
	`v4l2_fourcc
('T', 'M', '6', '0'Ë

	)

405 
	#V4L2_PIX_FMT_CIT_YYVYUY
 
	`v4l2_fourcc
('C', 'I', 'T', 'V'Ë

	)

406 
	#V4L2_PIX_FMT_KONICA420
 
	`v4l2_fourcc
('K', 'O', 'N', 'I'Ë

	)

407 
	#V4L2_PIX_FMT_JPGL
 
	`v4l2_fourcc
('J', 'P', 'G', 'L'Ë

	)

408 
	#V4L2_PIX_FMT_SE401
 
	`v4l2_fourcc
('S', '4', '0', '1'Ë

	)

413 
	sv4l2_fmtdesc
 {

414 
__u32
 
	mödex
;

415 
v4l2_buf_ty≥
 
	mty≥
;

416 
__u32
 
	mÊags
;

417 
__u8
 
	mdes¸ùti⁄
[32];

418 
__u32
 
	mpixñf‹m©
;

419 
__u32
 
	mª£rved
[4];

422 
	#V4L2_FMT_FLAG_COMPRESSED
 0x0001

	)

423 
	#V4L2_FMT_FLAG_EMULATED
 0x0002

	)

430 
	ev4l2_‰msizëy≥s
 {

431 
	mV4L2_FRMSIZE_TYPE_DISCRETE
 = 1,

432 
	mV4L2_FRMSIZE_TYPE_CONTINUOUS
 = 2,

433 
	mV4L2_FRMSIZE_TYPE_STEPWISE
 = 3,

436 
	sv4l2_‰msize_dis¸ëe
 {

437 
__u32
 
	mwidth
;

438 
__u32
 
	mheight
;

441 
	sv4l2_‰msize_°ïwi£
 {

442 
__u32
 
	mmö_width
;

443 
__u32
 
	mmax_width
;

444 
__u32
 
	m°ï_width
;

445 
__u32
 
	mmö_height
;

446 
__u32
 
	mmax_height
;

447 
__u32
 
	m°ï_height
;

450 
	sv4l2_‰msizìnum
 {

451 
__u32
 
	mödex
;

452 
__u32
 
	mpixñ_f‹m©
;

453 
__u32
 
	mty≥
;

456 
v4l2_‰msize_dis¸ëe
 
	mdis¸ëe
;

457 
v4l2_‰msize_°ïwi£
 
	m°ïwi£
;

460 
__u32
 
	mª£rved
[2];

466 
	ev4l2_‰mivÆty≥s
 {

467 
	mV4L2_FRMIVAL_TYPE_DISCRETE
 = 1,

468 
	mV4L2_FRMIVAL_TYPE_CONTINUOUS
 = 2,

469 
	mV4L2_FRMIVAL_TYPE_STEPWISE
 = 3,

472 
	sv4l2_‰mivÆ_°ïwi£
 {

473 
v4l2_‰a˘
 
	mmö
;

474 
v4l2_‰a˘
 
	mmax
;

475 
v4l2_‰a˘
 
	m°ï
;

478 
	sv4l2_‰mivÆíum
 {

479 
__u32
 
	mödex
;

480 
__u32
 
	mpixñ_f‹m©
;

481 
__u32
 
	mwidth
;

482 
__u32
 
	mheight
;

483 
__u32
 
	mty≥
;

486 
v4l2_‰a˘
 
	mdis¸ëe
;

487 
v4l2_‰mivÆ_°ïwi£
 
	m°ïwi£
;

490 
__u32
 
	mª£rved
[2];

497 
	sv4l2_timecode
 {

498 
__u32
 
	mty≥
;

499 
__u32
 
	mÊags
;

500 
__u8
 
	m‰ames
;

501 
__u8
 
	m£c⁄ds
;

502 
__u8
 
	mmöuãs
;

503 
__u8
 
	mhours
;

504 
__u8
 
	mu£rbôs
[4];

508 
	#V4L2_TC_TYPE_24FPS
 1

	)

509 
	#V4L2_TC_TYPE_25FPS
 2

	)

510 
	#V4L2_TC_TYPE_30FPS
 3

	)

511 
	#V4L2_TC_TYPE_50FPS
 4

	)

512 
	#V4L2_TC_TYPE_60FPS
 5

	)

515 
	#V4L2_TC_FLAG_DROPFRAME
 0x0001

	)

516 
	#V4L2_TC_FLAG_COLORFRAME
 0x0002

	)

517 
	#V4L2_TC_USERBITS_fõld
 0x000C

	)

518 
	#V4L2_TC_USERBITS_USERDEFINED
 0x0000

	)

519 
	#V4L2_TC_USERBITS_8BITCHARS
 0x0008

	)

522 
	sv4l2_j≥gcom¥essi⁄
 {

523 
	mquÆôy
;

525 
	mAPPn
;

527 
	mAPP_Àn
;

528 
	mAPP_d©a
[60];

530 
	mCOM_Àn
;

531 
	mCOM_d©a
[60];

533 
__u32
 
	mj≥g_m¨kîs
;

543 
	#V4L2_JPEG_MARKER_DHT
 (1<<3Ë

	)

544 
	#V4L2_JPEG_MARKER_DQT
 (1<<4Ë

	)

545 
	#V4L2_JPEG_MARKER_DRI
 (1<<5Ë

	)

546 
	#V4L2_JPEG_MARKER_COM
 (1<<6Ë

	)

547 
	#V4L2_JPEG_MARKER_APP
 (1<<7Ë

	)

554 
	sv4l2_ªque°buf„rs
 {

555 
__u32
 
	mcou¡
;

556 
v4l2_buf_ty≥
 
	mty≥
;

557 
v4l2_mem‹y
 
	mmem‹y
;

558 
__u32
 
	mª£rved
[2];

579 
	sv4l2_∂™e
 {

580 
__u32
 
	mbyãsu£d
;

581 
__u32
 
	mÀngth
;

583 
__u32
 
	mmem_off£t
;

584 
	mu£Ωå
;

585 } 
	mm
;

586 
__u32
 
	md©a_off£t
;

587 
__u32
 
	mª£rved
[11];

617 
	sv4l2_buf„r
 {

618 
__u32
 
	mödex
;

619 
v4l2_buf_ty≥
 
	mty≥
;

620 
__u32
 
	mbyãsu£d
;

621 
__u32
 
	mÊags
;

622 
v4l2_fõld
 
	mfõld
;

623 
timevÆ
 
	mtime°amp
;

624 
v4l2_timecode
 
	mtimecode
;

625 
__u32
 
	m£quí˚
;

628 
v4l2_mem‹y
 
	mmem‹y
;

630 
__u32
 
	moff£t
;

631 
	mu£Ωå
;

632 
v4l2_∂™e
 *
	m∂™es
;

633 } 
	mm
;

634 
__u32
 
	mÀngth
;

635 
__u32
 
	möput
;

636 
__u32
 
	mª£rved
;

640 
	#V4L2_BUF_FLAG_MAPPED
 0x0001

	)

641 
	#V4L2_BUF_FLAG_QUEUED
 0x0002

	)

642 
	#V4L2_BUF_FLAG_DONE
 0x0004

	)

643 
	#V4L2_BUF_FLAG_KEYFRAME
 0x0008

	)

644 
	#V4L2_BUF_FLAG_PFRAME
 0x0010

	)

645 
	#V4L2_BUF_FLAG_BFRAME
 0x0020

	)

647 
	#V4L2_BUF_FLAG_ERROR
 0x0040

	)

648 
	#V4L2_BUF_FLAG_TIMECODE
 0x0100

	)

649 
	#V4L2_BUF_FLAG_INPUT
 0x0200

	)

650 
	#V4L2_BUF_FLAG_PREPARED
 0x0400

	)

652 
	#V4L2_BUF_FLAG_NO_CACHE_INVALIDATE
 0x0800

	)

653 
	#V4L2_BUF_FLAG_NO_CACHE_CLEAN
 0x1000

	)

658 
	sv4l2_‰amebuf„r
 {

659 
__u32
 
	mˇ∑bûôy
;

660 
__u32
 
	mÊags
;

663 *
	mba£
;

664 
v4l2_pix_f‹m©
 
	mfmt
;

667 
	#V4L2_FBUF_CAP_EXTERNOVERLAY
 0x0001

	)

668 
	#V4L2_FBUF_CAP_CHROMAKEY
 0x0002

	)

669 
	#V4L2_FBUF_CAP_LIST_CLIPPING
 0x0004

	)

670 
	#V4L2_FBUF_CAP_BITMAP_CLIPPING
 0x0008

	)

671 
	#V4L2_FBUF_CAP_LOCAL_ALPHA
 0x0010

	)

672 
	#V4L2_FBUF_CAP_GLOBAL_ALPHA
 0x0020

	)

673 
	#V4L2_FBUF_CAP_LOCAL_INV_ALPHA
 0x0040

	)

674 
	#V4L2_FBUF_CAP_SRC_CHROMAKEY
 0x0080

	)

676 
	#V4L2_FBUF_FLAG_PRIMARY
 0x0001

	)

677 
	#V4L2_FBUF_FLAG_OVERLAY
 0x0002

	)

678 
	#V4L2_FBUF_FLAG_CHROMAKEY
 0x0004

	)

679 
	#V4L2_FBUF_FLAG_LOCAL_ALPHA
 0x0008

	)

680 
	#V4L2_FBUF_FLAG_GLOBAL_ALPHA
 0x0010

	)

681 
	#V4L2_FBUF_FLAG_LOCAL_INV_ALPHA
 0x0020

	)

682 
	#V4L2_FBUF_FLAG_SRC_CHROMAKEY
 0x0040

	)

684 
	sv4l2_˛ù
 {

685 
v4l2_ª˘
 
	mc
;

686 
v4l2_˛ù
 *
	m√xt
;

689 
	sv4l2_wödow
 {

690 
v4l2_ª˘
 
	mw
;

691 
v4l2_fõld
 
	mfõld
;

692 
__u32
 
	mchromakey
;

693 
v4l2_˛ù
 *
	m˛ùs
;

694 
__u32
 
	m˛ùcou¡
;

695 *
	mbôm≠
;

696 
__u8
 
	mglobÆ_Æpha
;

702 
	sv4l2_ˇ±uª∑rm
 {

703 
__u32
 
	mˇ∑bûôy
;

704 
__u32
 
	mˇ±uªmode
;

705 
v4l2_‰a˘
 
	mtimïî‰ame
;

706 
__u32
 
	mexãndedmode
;

707 
__u32
 
	mªadbuf„rs
;

708 
__u32
 
	mª£rved
[4];

712 
	#V4L2_MODE_HIGHQUALITY
 0x0001

	)

713 
	#V4L2_CAP_TIMEPERFRAME
 0x1000

	)

715 
	sv4l2_ouçuç¨m
 {

716 
__u32
 
	mˇ∑bûôy
;

717 
__u32
 
	mouçutmode
;

718 
v4l2_‰a˘
 
	mtimïî‰ame
;

719 
__u32
 
	mexãndedmode
;

720 
__u32
 
	mwrôebuf„rs
;

721 
__u32
 
	mª£rved
[4];

727 
	sv4l2_¸›ˇp
 {

728 
v4l2_buf_ty≥
 
	mty≥
;

729 
v4l2_ª˘
 
	mbounds
;

730 
v4l2_ª˘
 
	mde‰e˘
;

731 
v4l2_‰a˘
 
	mpixña•e˘
;

734 
	sv4l2_¸›
 {

735 
v4l2_buf_ty≥
 
	mty≥
;

736 
v4l2_ª˘
 
	mc
;

743 
__u64
 
	tv4l2_°d_id
;

746 
	#V4L2_STD_PAL_B
 ((
v4l2_°d_id
)0x00000001)

	)

747 
	#V4L2_STD_PAL_B1
 ((
v4l2_°d_id
)0x00000002)

	)

748 
	#V4L2_STD_PAL_G
 ((
v4l2_°d_id
)0x00000004)

	)

749 
	#V4L2_STD_PAL_H
 ((
v4l2_°d_id
)0x00000008)

	)

750 
	#V4L2_STD_PAL_I
 ((
v4l2_°d_id
)0x00000010)

	)

751 
	#V4L2_STD_PAL_D
 ((
v4l2_°d_id
)0x00000020)

	)

752 
	#V4L2_STD_PAL_D1
 ((
v4l2_°d_id
)0x00000040)

	)

753 
	#V4L2_STD_PAL_K
 ((
v4l2_°d_id
)0x00000080)

	)

755 
	#V4L2_STD_PAL_M
 ((
v4l2_°d_id
)0x00000100)

	)

756 
	#V4L2_STD_PAL_N
 ((
v4l2_°d_id
)0x00000200)

	)

757 
	#V4L2_STD_PAL_Nc
 ((
v4l2_°d_id
)0x00000400)

	)

758 
	#V4L2_STD_PAL_60
 ((
v4l2_°d_id
)0x00000800)

	)

760 
	#V4L2_STD_NTSC_M
 ((
v4l2_°d_id
)0x00001000Ë

	)

761 
	#V4L2_STD_NTSC_M_JP
 ((
v4l2_°d_id
)0x00002000Ë

	)

762 
	#V4L2_STD_NTSC_443
 ((
v4l2_°d_id
)0x00004000)

	)

763 
	#V4L2_STD_NTSC_M_KR
 ((
v4l2_°d_id
)0x00008000Ë

	)

765 
	#V4L2_STD_SECAM_B
 ((
v4l2_°d_id
)0x00010000)

	)

766 
	#V4L2_STD_SECAM_D
 ((
v4l2_°d_id
)0x00020000)

	)

767 
	#V4L2_STD_SECAM_G
 ((
v4l2_°d_id
)0x00040000)

	)

768 
	#V4L2_STD_SECAM_H
 ((
v4l2_°d_id
)0x00080000)

	)

769 
	#V4L2_STD_SECAM_K
 ((
v4l2_°d_id
)0x00100000)

	)

770 
	#V4L2_STD_SECAM_K1
 ((
v4l2_°d_id
)0x00200000)

	)

771 
	#V4L2_STD_SECAM_L
 ((
v4l2_°d_id
)0x00400000)

	)

772 
	#V4L2_STD_SECAM_LC
 ((
v4l2_°d_id
)0x00800000)

	)

775 
	#V4L2_STD_ATSC_8_VSB
 ((
v4l2_°d_id
)0x01000000)

	)

776 
	#V4L2_STD_ATSC_16_VSB
 ((
v4l2_°d_id
)0x02000000)

	)

796 
	#V4L2_STD_NTSC
 (
V4L2_STD_NTSC_M
 |\

797 
V4L2_STD_NTSC_M_JP
 |\

798 
V4L2_STD_NTSC_M_KR
)

	)

800 
	#V4L2_STD_SECAM_DK
 (
V4L2_STD_SECAM_D
 |\

801 
V4L2_STD_SECAM_K
 |\

802 
V4L2_STD_SECAM_K1
)

	)

804 
	#V4L2_STD_SECAM
 (
V4L2_STD_SECAM_B
 |\

805 
V4L2_STD_SECAM_G
 |\

806 
V4L2_STD_SECAM_H
 |\

807 
V4L2_STD_SECAM_DK
 |\

808 
V4L2_STD_SECAM_L
 |\

809 
V4L2_STD_SECAM_LC
)

	)

811 
	#V4L2_STD_PAL_BG
 (
V4L2_STD_PAL_B
 |\

812 
V4L2_STD_PAL_B1
 |\

813 
V4L2_STD_PAL_G
)

	)

814 
	#V4L2_STD_PAL_DK
 (
V4L2_STD_PAL_D
 |\

815 
V4L2_STD_PAL_D1
 |\

816 
V4L2_STD_PAL_K
)

	)

822 
	#V4L2_STD_PAL
 (
V4L2_STD_PAL_BG
 |\

823 
V4L2_STD_PAL_DK
 |\

824 
V4L2_STD_PAL_H
 |\

825 
V4L2_STD_PAL_I
)

	)

827 
	#V4L2_STD_B
 (
V4L2_STD_PAL_B
 |\

828 
V4L2_STD_PAL_B1
 |\

829 
V4L2_STD_SECAM_B
)

	)

830 
	#V4L2_STD_G
 (
V4L2_STD_PAL_G
 |\

831 
V4L2_STD_SECAM_G
)

	)

832 
	#V4L2_STD_H
 (
V4L2_STD_PAL_H
 |\

833 
V4L2_STD_SECAM_H
)

	)

834 
	#V4L2_STD_L
 (
V4L2_STD_SECAM_L
 |\

835 
V4L2_STD_SECAM_LC
)

	)

836 
	#V4L2_STD_GH
 (
V4L2_STD_G
 |\

837 
V4L2_STD_H
)

	)

838 
	#V4L2_STD_DK
 (
V4L2_STD_PAL_DK
 |\

839 
V4L2_STD_SECAM_DK
)

	)

840 
	#V4L2_STD_BG
 (
V4L2_STD_B
 |\

841 
V4L2_STD_G
)

	)

842 
	#V4L2_STD_MN
 (
V4L2_STD_PAL_M
 |\

843 
V4L2_STD_PAL_N
 |\

844 
V4L2_STD_PAL_Nc
 |\

845 
V4L2_STD_NTSC
)

	)

848 
	#V4L2_STD_MTS
 (
V4L2_STD_NTSC_M
 |\

849 
V4L2_STD_PAL_M
 |\

850 
V4L2_STD_PAL_N
 |\

851 
V4L2_STD_PAL_Nc
)

	)

854 
	#V4L2_STD_525_60
 (
V4L2_STD_PAL_M
 |\

855 
V4L2_STD_PAL_60
 |\

856 
V4L2_STD_NTSC
 |\

857 
V4L2_STD_NTSC_443
)

	)

859 
	#V4L2_STD_625_50
 (
V4L2_STD_PAL
 |\

860 
V4L2_STD_PAL_N
 |\

861 
V4L2_STD_PAL_Nc
 |\

862 
V4L2_STD_SECAM
)

	)

864 
	#V4L2_STD_ATSC
 (
V4L2_STD_ATSC_8_VSB
 |\

865 
V4L2_STD_ATSC_16_VSB
)

	)

867 
	#V4L2_STD_UNKNOWN
 0

	)

868 
	#V4L2_STD_ALL
 (
V4L2_STD_525_60
 |\

869 
V4L2_STD_625_50
)

	)

871 
	sv4l2_°™d¨d
 {

872 
__u32
 
	mödex
;

873 
v4l2_°d_id
 
	mid
;

874 
__u8
 
	m«me
[24];

875 
v4l2_‰a˘
 
	m‰amïîiod
;

876 
__u32
 
	m‰amñöes
;

877 
__u32
 
	mª£rved
[4];

883 
	sv4l2_dv_¥e£t
 {

884 
__u32
 
	m¥e£t
;

885 
__u32
 
	mª£rved
[4];

891 
	sv4l2_dv_íum_¥e£t
 {

892 
__u32
 
	mödex
;

893 
__u32
 
	m¥e£t
;

894 
__u8
 
	m«me
[32];

895 
__u32
 
	mwidth
;

896 
__u32
 
	mheight
;

897 
__u32
 
	mª£rved
[4];

903 
	#V4L2_DV_INVALID
 0

	)

904 
	#V4L2_DV_480P59_94
 1

	)

905 
	#V4L2_DV_576P50
 2

	)

906 
	#V4L2_DV_720P24
 3

	)

907 
	#V4L2_DV_720P25
 4

	)

908 
	#V4L2_DV_720P30
 5

	)

909 
	#V4L2_DV_720P50
 6

	)

910 
	#V4L2_DV_720P59_94
 7

	)

911 
	#V4L2_DV_720P60
 8

	)

912 
	#V4L2_DV_1080I29_97
 9

	)

913 
	#V4L2_DV_1080I30
 10

	)

914 
	#V4L2_DV_1080I25
 11

	)

915 
	#V4L2_DV_1080I50
 12

	)

916 
	#V4L2_DV_1080I60
 13

	)

917 
	#V4L2_DV_1080P24
 14

	)

918 
	#V4L2_DV_1080P25
 15

	)

919 
	#V4L2_DV_1080P30
 16

	)

920 
	#V4L2_DV_1080P50
 17

	)

921 
	#V4L2_DV_1080P60
 18

	)

928 
	sv4l2_bt_timögs
 {

929 
__u32
 
	mwidth
;

930 
__u32
 
	mheight
;

931 
__u32
 
	möãæa˚d
;

932 
__u32
 
	mpﬁ¨ôõs
;

933 
__u64
 
	mpixñ˛ock
;

934 
__u32
 
	mh‰⁄ç‹ch
;

935 
__u32
 
	mhsync
;

936 
__u32
 
	mhbackp‹ch
;

937 
__u32
 
	mv‰⁄ç‹ch
;

938 
__u32
 
	mvsync
;

939 
__u32
 
	mvbackp‹ch
;

940 
__u32
 
	mû_v‰⁄ç‹ch
;

943 
__u32
 
	mû_vsync
;

946 
__u32
 
	mû_vbackp‹ch
;

949 
__u32
 
	mª£rved
[16];

950 } 
__©åibuã__
 ((
∑cked
));

953 
	#V4L2_DV_PROGRESSIVE
 0

	)

954 
	#V4L2_DV_INTERLACED
 1

	)

957 
	#V4L2_DV_VSYNC_POS_POL
 0x00000001

	)

958 
	#V4L2_DV_HSYNC_POS_POL
 0x00000002

	)

962 
	sv4l2_dv_timögs
 {

963 
__u32
 
	mty≥
;

965 
v4l2_bt_timögs
 
	mbt
;

966 
__u32
 
	mª£rved
[32];

968 } 
__©åibuã__
 ((
∑cked
));

971 
	#V4L2_DV_BT_656_1120
 0

	)

976 
	sv4l2_öput
 {

977 
__u32
 
	mödex
;

978 
__u8
 
	m«me
[32];

979 
__u32
 
	mty≥
;

980 
__u32
 
	maudio£t
;

981 
__u32
 
	mtu√r
;

982 
v4l2_°d_id
 
	m°d
;

983 
__u32
 
	m°©us
;

984 
__u32
 
	mˇ∑bûôõs
;

985 
__u32
 
	mª£rved
[3];

989 
	#V4L2_INPUT_TYPE_TUNER
 1

	)

990 
	#V4L2_INPUT_TYPE_CAMERA
 2

	)

993 
	#V4L2_IN_ST_NO_POWER
 0x00000001

	)

994 
	#V4L2_IN_ST_NO_SIGNAL
 0x00000002

	)

995 
	#V4L2_IN_ST_NO_COLOR
 0x00000004

	)

999 
	#V4L2_IN_ST_HFLIP
 0x00000010

	)

1000 
	#V4L2_IN_ST_VFLIP
 0x00000020

	)

1003 
	#V4L2_IN_ST_NO_H_LOCK
 0x00000100

	)

1004 
	#V4L2_IN_ST_COLOR_KILL
 0x00000200

	)

1007 
	#V4L2_IN_ST_NO_SYNC
 0x00010000

	)

1008 
	#V4L2_IN_ST_NO_EQU
 0x00020000

	)

1009 
	#V4L2_IN_ST_NO_CARRIER
 0x00040000

	)

1012 
	#V4L2_IN_ST_MACROVISION
 0x01000000

	)

1013 
	#V4L2_IN_ST_NO_ACCESS
 0x02000000

	)

1014 
	#V4L2_IN_ST_VTR
 0x04000000

	)

1017 
	#V4L2_IN_CAP_PRESETS
 0x00000001

	)

1018 
	#V4L2_IN_CAP_CUSTOM_TIMINGS
 0x00000002

	)

1019 
	#V4L2_IN_CAP_STD
 0x00000004

	)

1024 
	sv4l2_ouçut
 {

1025 
__u32
 
	mödex
;

1026 
__u8
 
	m«me
[32];

1027 
__u32
 
	mty≥
;

1028 
__u32
 
	maudio£t
;

1029 
__u32
 
	mmoduœt‹
;

1030 
v4l2_°d_id
 
	m°d
;

1031 
__u32
 
	mˇ∑bûôõs
;

1032 
__u32
 
	mª£rved
[3];

1035 
	#V4L2_OUTPUT_TYPE_MODULATOR
 1

	)

1036 
	#V4L2_OUTPUT_TYPE_ANALOG
 2

	)

1037 
	#V4L2_OUTPUT_TYPE_ANALOGVGAOVERLAY
 3

	)

1040 
	#V4L2_OUT_CAP_PRESETS
 0x00000001

	)

1041 
	#V4L2_OUT_CAP_CUSTOM_TIMINGS
 0x00000002

	)

1042 
	#V4L2_OUT_CAP_STD
 0x00000004

	)

1047 
	sv4l2_c⁄åﬁ
 {

1048 
__u32
 
	mid
;

1049 
__s32
 
	mvÆue
;

1052 
	sv4l2_ext_c⁄åﬁ
 {

1053 
__u32
 
	mid
;

1054 
__u32
 
	msize
;

1055 
__u32
 
	mª£rved2
[1];

1057 
__s32
 
	mvÆue
;

1058 
__s64
 
	mvÆue64
;

1059 *
	m°rög
;

1061 } 
__©åibuã__
 ((
∑cked
));

1063 
	sv4l2_ext_c⁄åﬁs
 {

1064 
__u32
 
	m˘æ_˛ass
;

1065 
__u32
 
	mcou¡
;

1066 
__u32
 
	mîr‹_idx
;

1067 
__u32
 
	mª£rved
[2];

1068 
v4l2_ext_c⁄åﬁ
 *
	mc⁄åﬁs
;

1072 
	#V4L2_CTRL_CLASS_USER
 0x00980000

	)

1073 
	#V4L2_CTRL_CLASS_MPEG
 0x00990000

	)

1074 
	#V4L2_CTRL_CLASS_CAMERA
 0x009a0000

	)

1075 
	#V4L2_CTRL_CLASS_FM_TX
 0x009b0000

	)

1076 
	#V4L2_CTRL_CLASS_FLASH
 0x009c0000

	)

1078 
	#V4L2_CTRL_ID_MASK
 (0x0fffffff)

	)

1079 
	#V4L2_CTRL_ID2CLASS
(
id
Ë((idË& 0x0fff0000UL)

	)

1080 
	#V4L2_CTRL_DRIVER_PRIV
(
id
Ë(((idË& 0xffffË>0x1000)

	)

1082 
	ev4l2_˘æ_ty≥
 {

1083 
	mV4L2_CTRL_TYPE_INTEGER
 = 1,

1084 
	mV4L2_CTRL_TYPE_BOOLEAN
 = 2,

1085 
	mV4L2_CTRL_TYPE_MENU
 = 3,

1086 
	mV4L2_CTRL_TYPE_BUTTON
 = 4,

1087 
	mV4L2_CTRL_TYPE_INTEGER64
 = 5,

1088 
	mV4L2_CTRL_TYPE_CTRL_CLASS
 = 6,

1089 
	mV4L2_CTRL_TYPE_STRING
 = 7,

1090 
	mV4L2_CTRL_TYPE_BITMASK
 = 8,

1094 
	sv4l2_quîy˘æ
 {

1095 
__u32
 
	mid
;

1096 
v4l2_˘æ_ty≥
 
	mty≥
;

1097 
__u8
 
	m«me
[32];

1098 
__s32
 
	mmöimum
;

1099 
__s32
 
	mmaximum
;

1100 
__s32
 
	m°ï
;

1101 
__s32
 
	mdeÁu…_vÆue
;

1102 
__u32
 
	mÊags
;

1103 
__u32
 
	mª£rved
[2];

1107 
	sv4l2_quîymíu
 {

1108 
__u32
 
	mid
;

1109 
__u32
 
	mödex
;

1110 
__u8
 
	m«me
[32];

1111 
__u32
 
	mª£rved
;

1115 
	#V4L2_CTRL_FLAG_DISABLED
 0x0001

	)

1116 
	#V4L2_CTRL_FLAG_GRABBED
 0x0002

	)

1117 
	#V4L2_CTRL_FLAG_READ_ONLY
 0x0004

	)

1118 
	#V4L2_CTRL_FLAG_UPDATE
 0x0008

	)

1119 
	#V4L2_CTRL_FLAG_INACTIVE
 0x0010

	)

1120 
	#V4L2_CTRL_FLAG_SLIDER
 0x0020

	)

1121 
	#V4L2_CTRL_FLAG_WRITE_ONLY
 0x0040

	)

1122 
	#V4L2_CTRL_FLAG_VOLATILE
 0x0080

	)

1125 
	#V4L2_CTRL_FLAG_NEXT_CTRL
 0x80000000

	)

1128 
	#V4L2_CID_MAX_CTRLS
 1024

	)

1129 
	#V4L2_CID_BASE
 (
V4L2_CTRL_CLASS_USER
 | 0x900)

	)

1130 
	#V4L2_CID_USER_BASE
 
V4L2_CID_BASE


	)

1132 
	#V4L2_CID_PRIVATE_BASE
 0x08000000

	)

1134 
	#V4L2_CID_USER_CLASS
 (
V4L2_CTRL_CLASS_USER
 | 1)

	)

1135 
	#V4L2_CID_BRIGHTNESS
 (
V4L2_CID_BASE
+0)

	)

1136 
	#V4L2_CID_CONTRAST
 (
V4L2_CID_BASE
+1)

	)

1137 
	#V4L2_CID_SATURATION
 (
V4L2_CID_BASE
+2)

	)

1138 
	#V4L2_CID_HUE
 (
V4L2_CID_BASE
+3)

	)

1139 
	#V4L2_CID_AUDIO_VOLUME
 (
V4L2_CID_BASE
+5)

	)

1140 
	#V4L2_CID_AUDIO_BALANCE
 (
V4L2_CID_BASE
+6)

	)

1141 
	#V4L2_CID_AUDIO_BASS
 (
V4L2_CID_BASE
+7)

	)

1142 
	#V4L2_CID_AUDIO_TREBLE
 (
V4L2_CID_BASE
+8)

	)

1143 
	#V4L2_CID_AUDIO_MUTE
 (
V4L2_CID_BASE
+9)

	)

1144 
	#V4L2_CID_AUDIO_LOUDNESS
 (
V4L2_CID_BASE
+10)

	)

1145 
	#V4L2_CID_BLACK_LEVEL
 (
V4L2_CID_BASE
+11Ë

	)

1146 
	#V4L2_CID_AUTO_WHITE_BALANCE
 (
V4L2_CID_BASE
+12)

	)

1147 
	#V4L2_CID_DO_WHITE_BALANCE
 (
V4L2_CID_BASE
+13)

	)

1148 
	#V4L2_CID_RED_BALANCE
 (
V4L2_CID_BASE
+14)

	)

1149 
	#V4L2_CID_BLUE_BALANCE
 (
V4L2_CID_BASE
+15)

	)

1150 
	#V4L2_CID_GAMMA
 (
V4L2_CID_BASE
+16)

	)

1151 
	#V4L2_CID_WHITENESS
 (
V4L2_CID_GAMMA
Ë

	)

1152 
	#V4L2_CID_EXPOSURE
 (
V4L2_CID_BASE
+17)

	)

1153 
	#V4L2_CID_AUTOGAIN
 (
V4L2_CID_BASE
+18)

	)

1154 
	#V4L2_CID_GAIN
 (
V4L2_CID_BASE
+19)

	)

1155 
	#V4L2_CID_HFLIP
 (
V4L2_CID_BASE
+20)

	)

1156 
	#V4L2_CID_VFLIP
 (
V4L2_CID_BASE
+21)

	)

1159 
	#V4L2_CID_HCENTER
 (
V4L2_CID_BASE
+22)

	)

1160 
	#V4L2_CID_VCENTER
 (
V4L2_CID_BASE
+23)

	)

1162 
	#V4L2_CID_POWER_LINE_FREQUENCY
 (
V4L2_CID_BASE
+24)

	)

1163 
	ev4l2_powî_löe_‰equícy
 {

1164 
	mV4L2_CID_POWER_LINE_FREQUENCY_DISABLED
 = 0,

1165 
	mV4L2_CID_POWER_LINE_FREQUENCY_50HZ
 = 1,

1166 
	mV4L2_CID_POWER_LINE_FREQUENCY_60HZ
 = 2,

1167 
	mV4L2_CID_POWER_LINE_FREQUENCY_AUTO
 = 3,

1169 
	#V4L2_CID_HUE_AUTO
 (
V4L2_CID_BASE
+25)

	)

1170 
	#V4L2_CID_WHITE_BALANCE_TEMPERATURE
 (
V4L2_CID_BASE
+26)

	)

1171 
	#V4L2_CID_SHARPNESS
 (
V4L2_CID_BASE
+27)

	)

1172 
	#V4L2_CID_BACKLIGHT_COMPENSATION
 (
V4L2_CID_BASE
+28)

	)

1173 
	#V4L2_CID_CHROMA_AGC
 (
V4L2_CID_BASE
+29)

	)

1174 
	#V4L2_CID_COLOR_KILLER
 (
V4L2_CID_BASE
+30)

	)

1175 
	#V4L2_CID_COLORFX
 (
V4L2_CID_BASE
+31)

	)

1176 
	ev4l2_cﬁ‹fx
 {

1177 
	mV4L2_COLORFX_NONE
 = 0,

1178 
	mV4L2_COLORFX_BW
 = 1,

1179 
	mV4L2_COLORFX_SEPIA
 = 2,

1180 
	mV4L2_COLORFX_NEGATIVE
 = 3,

1181 
	mV4L2_COLORFX_EMBOSS
 = 4,

1182 
	mV4L2_COLORFX_SKETCH
 = 5,

1183 
	mV4L2_COLORFX_SKY_BLUE
 = 6,

1184 
	mV4L2_COLORFX_GRASS_GREEN
 = 7,

1185 
	mV4L2_COLORFX_SKIN_WHITEN
 = 8,

1186 
	mV4L2_COLORFX_VIVID
 = 9,

1188 
	#V4L2_CID_AUTOBRIGHTNESS
 (
V4L2_CID_BASE
+32)

	)

1189 
	#V4L2_CID_BAND_STOP_FILTER
 (
V4L2_CID_BASE
+33)

	)

1191 
	#V4L2_CID_ROTATE
 (
V4L2_CID_BASE
+34)

	)

1192 
	#V4L2_CID_BG_COLOR
 (
V4L2_CID_BASE
+35)

	)

1194 
	#V4L2_CID_CHROMA_GAIN
 (
V4L2_CID_BASE
+36)

	)

1196 
	#V4L2_CID_ILLUMINATORS_1
 (
V4L2_CID_BASE
+37)

	)

1197 
	#V4L2_CID_ILLUMINATORS_2
 (
V4L2_CID_BASE
+38)

	)

1199 
	#V4L2_CID_MIN_BUFFERS_FOR_CAPTURE
 (
V4L2_CID_BASE
+39)

	)

1200 
	#V4L2_CID_MIN_BUFFERS_FOR_OUTPUT
 (
V4L2_CID_BASE
+40)

	)

1203 
	#V4L2_CID_LASTP1
 (
V4L2_CID_BASE
+41)

	)

1208 
	#V4L2_CID_MPEG_BASE
 (
V4L2_CTRL_CLASS_MPEG
 | 0x900)

	)

1209 
	#V4L2_CID_MPEG_CLASS
 (
V4L2_CTRL_CLASS_MPEG
 | 1)

	)

1212 
	#V4L2_CID_MPEG_STREAM_TYPE
 (
V4L2_CID_MPEG_BASE
+0)

	)

1213 
	ev4l2_m≥g_°ªam_ty≥
 {

1214 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_PS
 = 0,

1215 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_TS
 = 1,

1216 
	mV4L2_MPEG_STREAM_TYPE_MPEG1_SS
 = 2,

1217 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_DVD
 = 3,

1218 
	mV4L2_MPEG_STREAM_TYPE_MPEG1_VCD
 = 4,

1219 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_SVCD
 = 5,

1221 
	#V4L2_CID_MPEG_STREAM_PID_PMT
 (
V4L2_CID_MPEG_BASE
+1)

	)

1222 
	#V4L2_CID_MPEG_STREAM_PID_AUDIO
 (
V4L2_CID_MPEG_BASE
+2)

	)

1223 
	#V4L2_CID_MPEG_STREAM_PID_VIDEO
 (
V4L2_CID_MPEG_BASE
+3)

	)

1224 
	#V4L2_CID_MPEG_STREAM_PID_PCR
 (
V4L2_CID_MPEG_BASE
+4)

	)

1225 
	#V4L2_CID_MPEG_STREAM_PES_ID_AUDIO
 (
V4L2_CID_MPEG_BASE
+5)

	)

1226 
	#V4L2_CID_MPEG_STREAM_PES_ID_VIDEO
 (
V4L2_CID_MPEG_BASE
+6)

	)

1227 
	#V4L2_CID_MPEG_STREAM_VBI_FMT
 (
V4L2_CID_MPEG_BASE
+7)

	)

1228 
	ev4l2_m≥g_°ªam_vbi_fmt
 {

1229 
	mV4L2_MPEG_STREAM_VBI_FMT_NONE
 = 0,

1230 
	mV4L2_MPEG_STREAM_VBI_FMT_IVTV
 = 1,

1234 
	#V4L2_CID_MPEG_AUDIO_SAMPLING_FREQ
 (
V4L2_CID_MPEG_BASE
+100)

	)

1235 
	ev4l2_m≥g_audio_ßm∂ög_‰eq
 {

1236 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_44100
 = 0,

1237 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_48000
 = 1,

1238 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_32000
 = 2,

1240 
	#V4L2_CID_MPEG_AUDIO_ENCODING
 (
V4L2_CID_MPEG_BASE
+101)

	)

1241 
	ev4l2_m≥g_audio_ícodög
 {

1242 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_1
 = 0,

1243 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_2
 = 1,

1244 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_3
 = 2,

1245 
	mV4L2_MPEG_AUDIO_ENCODING_AAC
 = 3,

1246 
	mV4L2_MPEG_AUDIO_ENCODING_AC3
 = 4,

1248 
	#V4L2_CID_MPEG_AUDIO_L1_BITRATE
 (
V4L2_CID_MPEG_BASE
+102)

	)

1249 
	ev4l2_m≥g_audio_l1_bôøã
 {

1250 
	mV4L2_MPEG_AUDIO_L1_BITRATE_32K
 = 0,

1251 
	mV4L2_MPEG_AUDIO_L1_BITRATE_64K
 = 1,

1252 
	mV4L2_MPEG_AUDIO_L1_BITRATE_96K
 = 2,

1253 
	mV4L2_MPEG_AUDIO_L1_BITRATE_128K
 = 3,

1254 
	mV4L2_MPEG_AUDIO_L1_BITRATE_160K
 = 4,

1255 
	mV4L2_MPEG_AUDIO_L1_BITRATE_192K
 = 5,

1256 
	mV4L2_MPEG_AUDIO_L1_BITRATE_224K
 = 6,

1257 
	mV4L2_MPEG_AUDIO_L1_BITRATE_256K
 = 7,

1258 
	mV4L2_MPEG_AUDIO_L1_BITRATE_288K
 = 8,

1259 
	mV4L2_MPEG_AUDIO_L1_BITRATE_320K
 = 9,

1260 
	mV4L2_MPEG_AUDIO_L1_BITRATE_352K
 = 10,

1261 
	mV4L2_MPEG_AUDIO_L1_BITRATE_384K
 = 11,

1262 
	mV4L2_MPEG_AUDIO_L1_BITRATE_416K
 = 12,

1263 
	mV4L2_MPEG_AUDIO_L1_BITRATE_448K
 = 13,

1265 
	#V4L2_CID_MPEG_AUDIO_L2_BITRATE
 (
V4L2_CID_MPEG_BASE
+103)

	)

1266 
	ev4l2_m≥g_audio_l2_bôøã
 {

1267 
	mV4L2_MPEG_AUDIO_L2_BITRATE_32K
 = 0,

1268 
	mV4L2_MPEG_AUDIO_L2_BITRATE_48K
 = 1,

1269 
	mV4L2_MPEG_AUDIO_L2_BITRATE_56K
 = 2,

1270 
	mV4L2_MPEG_AUDIO_L2_BITRATE_64K
 = 3,

1271 
	mV4L2_MPEG_AUDIO_L2_BITRATE_80K
 = 4,

1272 
	mV4L2_MPEG_AUDIO_L2_BITRATE_96K
 = 5,

1273 
	mV4L2_MPEG_AUDIO_L2_BITRATE_112K
 = 6,

1274 
	mV4L2_MPEG_AUDIO_L2_BITRATE_128K
 = 7,

1275 
	mV4L2_MPEG_AUDIO_L2_BITRATE_160K
 = 8,

1276 
	mV4L2_MPEG_AUDIO_L2_BITRATE_192K
 = 9,

1277 
	mV4L2_MPEG_AUDIO_L2_BITRATE_224K
 = 10,

1278 
	mV4L2_MPEG_AUDIO_L2_BITRATE_256K
 = 11,

1279 
	mV4L2_MPEG_AUDIO_L2_BITRATE_320K
 = 12,

1280 
	mV4L2_MPEG_AUDIO_L2_BITRATE_384K
 = 13,

1282 
	#V4L2_CID_MPEG_AUDIO_L3_BITRATE
 (
V4L2_CID_MPEG_BASE
+104)

	)

1283 
	ev4l2_m≥g_audio_l3_bôøã
 {

1284 
	mV4L2_MPEG_AUDIO_L3_BITRATE_32K
 = 0,

1285 
	mV4L2_MPEG_AUDIO_L3_BITRATE_40K
 = 1,

1286 
	mV4L2_MPEG_AUDIO_L3_BITRATE_48K
 = 2,

1287 
	mV4L2_MPEG_AUDIO_L3_BITRATE_56K
 = 3,

1288 
	mV4L2_MPEG_AUDIO_L3_BITRATE_64K
 = 4,

1289 
	mV4L2_MPEG_AUDIO_L3_BITRATE_80K
 = 5,

1290 
	mV4L2_MPEG_AUDIO_L3_BITRATE_96K
 = 6,

1291 
	mV4L2_MPEG_AUDIO_L3_BITRATE_112K
 = 7,

1292 
	mV4L2_MPEG_AUDIO_L3_BITRATE_128K
 = 8,

1293 
	mV4L2_MPEG_AUDIO_L3_BITRATE_160K
 = 9,

1294 
	mV4L2_MPEG_AUDIO_L3_BITRATE_192K
 = 10,

1295 
	mV4L2_MPEG_AUDIO_L3_BITRATE_224K
 = 11,

1296 
	mV4L2_MPEG_AUDIO_L3_BITRATE_256K
 = 12,

1297 
	mV4L2_MPEG_AUDIO_L3_BITRATE_320K
 = 13,

1299 
	#V4L2_CID_MPEG_AUDIO_MODE
 (
V4L2_CID_MPEG_BASE
+105)

	)

1300 
	ev4l2_m≥g_audio_mode
 {

1301 
	mV4L2_MPEG_AUDIO_MODE_STEREO
 = 0,

1302 
	mV4L2_MPEG_AUDIO_MODE_JOINT_STEREO
 = 1,

1303 
	mV4L2_MPEG_AUDIO_MODE_DUAL
 = 2,

1304 
	mV4L2_MPEG_AUDIO_MODE_MONO
 = 3,

1306 
	#V4L2_CID_MPEG_AUDIO_MODE_EXTENSION
 (
V4L2_CID_MPEG_BASE
+106)

	)

1307 
	ev4l2_m≥g_audio_mode_exãnsi⁄
 {

1308 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_4
 = 0,

1309 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_8
 = 1,

1310 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_12
 = 2,

1311 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_16
 = 3,

1313 
	#V4L2_CID_MPEG_AUDIO_EMPHASIS
 (
V4L2_CID_MPEG_BASE
+107)

	)

1314 
	ev4l2_m≥g_audio_emphasis
 {

1315 
	mV4L2_MPEG_AUDIO_EMPHASIS_NONE
 = 0,

1316 
	mV4L2_MPEG_AUDIO_EMPHASIS_50_DIV_15_uS
 = 1,

1317 
	mV4L2_MPEG_AUDIO_EMPHASIS_CCITT_J17
 = 2,

1319 
	#V4L2_CID_MPEG_AUDIO_CRC
 (
V4L2_CID_MPEG_BASE
+108)

	)

1320 
	ev4l2_m≥g_audio_¸c
 {

1321 
	mV4L2_MPEG_AUDIO_CRC_NONE
 = 0,

1322 
	mV4L2_MPEG_AUDIO_CRC_CRC16
 = 1,

1324 
	#V4L2_CID_MPEG_AUDIO_MUTE
 (
V4L2_CID_MPEG_BASE
+109)

	)

1325 
	#V4L2_CID_MPEG_AUDIO_AAC_BITRATE
 (
V4L2_CID_MPEG_BASE
+110)

	)

1326 
	#V4L2_CID_MPEG_AUDIO_AC3_BITRATE
 (
V4L2_CID_MPEG_BASE
+111)

	)

1327 
	ev4l2_m≥g_audio_ac3_bôøã
 {

1328 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_32K
 = 0,

1329 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_40K
 = 1,

1330 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_48K
 = 2,

1331 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_56K
 = 3,

1332 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_64K
 = 4,

1333 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_80K
 = 5,

1334 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_96K
 = 6,

1335 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_112K
 = 7,

1336 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_128K
 = 8,

1337 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_160K
 = 9,

1338 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_192K
 = 10,

1339 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_224K
 = 11,

1340 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_256K
 = 12,

1341 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_320K
 = 13,

1342 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_384K
 = 14,

1343 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_448K
 = 15,

1344 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_512K
 = 16,

1345 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_576K
 = 17,

1346 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_640K
 = 18,

1350 
	#V4L2_CID_MPEG_VIDEO_ENCODING
 (
V4L2_CID_MPEG_BASE
+200)

	)

1351 
	ev4l2_m≥g_video_ícodög
 {

1352 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_1
 = 0,

1353 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_2
 = 1,

1354 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_4_AVC
 = 2,

1356 
	#V4L2_CID_MPEG_VIDEO_ASPECT
 (
V4L2_CID_MPEG_BASE
+201)

	)

1357 
	ev4l2_m≥g_video_a•e˘
 {

1358 
	mV4L2_MPEG_VIDEO_ASPECT_1x1
 = 0,

1359 
	mV4L2_MPEG_VIDEO_ASPECT_4x3
 = 1,

1360 
	mV4L2_MPEG_VIDEO_ASPECT_16x9
 = 2,

1361 
	mV4L2_MPEG_VIDEO_ASPECT_221x100
 = 3,

1363 
	#V4L2_CID_MPEG_VIDEO_B_FRAMES
 (
V4L2_CID_MPEG_BASE
+202)

	)

1364 
	#V4L2_CID_MPEG_VIDEO_GOP_SIZE
 (
V4L2_CID_MPEG_BASE
+203)

	)

1365 
	#V4L2_CID_MPEG_VIDEO_GOP_CLOSURE
 (
V4L2_CID_MPEG_BASE
+204)

	)

1366 
	#V4L2_CID_MPEG_VIDEO_PULLDOWN
 (
V4L2_CID_MPEG_BASE
+205)

	)

1367 
	#V4L2_CID_MPEG_VIDEO_BITRATE_MODE
 (
V4L2_CID_MPEG_BASE
+206)

	)

1368 
	ev4l2_m≥g_video_bôøã_mode
 {

1369 
	mV4L2_MPEG_VIDEO_BITRATE_MODE_VBR
 = 0,

1370 
	mV4L2_MPEG_VIDEO_BITRATE_MODE_CBR
 = 1,

1372 
	#V4L2_CID_MPEG_VIDEO_BITRATE
 (
V4L2_CID_MPEG_BASE
+207)

	)

1373 
	#V4L2_CID_MPEG_VIDEO_BITRATE_PEAK
 (
V4L2_CID_MPEG_BASE
+208)

	)

1374 
	#V4L2_CID_MPEG_VIDEO_TEMPORAL_DECIMATION
 (
V4L2_CID_MPEG_BASE
+209)

	)

1375 
	#V4L2_CID_MPEG_VIDEO_MUTE
 (
V4L2_CID_MPEG_BASE
+210)

	)

1376 
	#V4L2_CID_MPEG_VIDEO_MUTE_YUV
 (
V4L2_CID_MPEG_BASE
+211)

	)

1377 
	#V4L2_CID_MPEG_VIDEO_DECODER_SLICE_INTERFACE
 (
V4L2_CID_MPEG_BASE
+212)

	)

1378 
	#V4L2_CID_MPEG_VIDEO_DECODER_MPEG4_DEBLOCK_FILTER
 (
V4L2_CID_MPEG_BASE
+213)

	)

1379 
	#V4L2_CID_MPEG_VIDEO_CYCLIC_INTRA_REFRESH_MB
 (
V4L2_CID_MPEG_BASE
+214)

	)

1380 
	#V4L2_CID_MPEG_VIDEO_FRAME_RC_ENABLE
 (
V4L2_CID_MPEG_BASE
+215)

	)

1381 
	#V4L2_CID_MPEG_VIDEO_HEADER_MODE
 (
V4L2_CID_MPEG_BASE
+216)

	)

1382 
	ev4l2_m≥g_video_hódî_mode
 {

1383 
	mV4L2_MPEG_VIDEO_HEADER_MODE_SEPARATE
 = 0,

1384 
	mV4L2_MPEG_VIDEO_HEADER_MODE_JOINED_WITH_1ST_FRAME
 = 1,

1387 
	#V4L2_CID_MPEG_VIDEO_MAX_REF_PIC
 (
V4L2_CID_MPEG_BASE
+217)

	)

1388 
	#V4L2_CID_MPEG_VIDEO_MB_RC_ENABLE
 (
V4L2_CID_MPEG_BASE
+218)

	)

1389 
	#V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MAX_BYTES
 (
V4L2_CID_MPEG_BASE
+219)

	)

1390 
	#V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MAX_MB
 (
V4L2_CID_MPEG_BASE
+220)

	)

1391 
	#V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MODE
 (
V4L2_CID_MPEG_BASE
+221)

	)

1392 
	ev4l2_m≥g_video_mu…i_¶i˚_mode
 {

1393 
	mV4L2_MPEG_VIDEO_MULTI_SLICE_MODE_SINGLE
 = 0,

1394 
	mV4L2_MPEG_VIDEO_MULTI_SICE_MODE_MAX_MB
 = 1,

1395 
	mV4L2_MPEG_VIDEO_MULTI_SICE_MODE_MAX_BYTES
 = 2,

1397 
	#V4L2_CID_MPEG_VIDEO_VBV_SIZE
 (
V4L2_CID_MPEG_BASE
+222)

	)

1398 
	#V4L2_CID_MPEG_VIDEO_H263_I_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+300)

	)

1399 
	#V4L2_CID_MPEG_VIDEO_H263_P_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+301)

	)

1400 
	#V4L2_CID_MPEG_VIDEO_H263_B_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+302)

	)

1401 
	#V4L2_CID_MPEG_VIDEO_H263_MIN_QP
 (
V4L2_CID_MPEG_BASE
+303)

	)

1402 
	#V4L2_CID_MPEG_VIDEO_H263_MAX_QP
 (
V4L2_CID_MPEG_BASE
+304)

	)

1403 
	#V4L2_CID_MPEG_VIDEO_H264_I_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+350)

	)

1404 
	#V4L2_CID_MPEG_VIDEO_H264_P_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+351)

	)

1405 
	#V4L2_CID_MPEG_VIDEO_H264_B_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+352)

	)

1406 
	#V4L2_CID_MPEG_VIDEO_H264_MIN_QP
 (
V4L2_CID_MPEG_BASE
+353)

	)

1407 
	#V4L2_CID_MPEG_VIDEO_H264_MAX_QP
 (
V4L2_CID_MPEG_BASE
+354)

	)

1408 
	#V4L2_CID_MPEG_VIDEO_H264_8X8_TRANSFORM
 (
V4L2_CID_MPEG_BASE
+355)

	)

1409 
	#V4L2_CID_MPEG_VIDEO_H264_CPB_SIZE
 (
V4L2_CID_MPEG_BASE
+356)

	)

1410 
	#V4L2_CID_MPEG_VIDEO_H264_ENTROPY_MODE
 (
V4L2_CID_MPEG_BASE
+357)

	)

1411 
	ev4l2_m≥g_video_h264_íå›y_mode
 {

1412 
	mV4L2_MPEG_VIDEO_H264_ENTROPY_MODE_CAVLC
 = 0,

1413 
	mV4L2_MPEG_VIDEO_H264_ENTROPY_MODE_CABAC
 = 1,

1415 
	#V4L2_CID_MPEG_VIDEO_H264_I_PERIOD
 (
V4L2_CID_MPEG_BASE
+358)

	)

1416 
	#V4L2_CID_MPEG_VIDEO_H264_LEVEL
 (
V4L2_CID_MPEG_BASE
+359)

	)

1417 
	ev4l2_m≥g_video_h264_Àvñ
 {

1418 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1_0
 = 0,

1419 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1B
 = 1,

1420 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1_1
 = 2,

1421 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1_2
 = 3,

1422 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1_3
 = 4,

1423 
	mV4L2_MPEG_VIDEO_H264_LEVEL_2_0
 = 5,

1424 
	mV4L2_MPEG_VIDEO_H264_LEVEL_2_1
 = 6,

1425 
	mV4L2_MPEG_VIDEO_H264_LEVEL_2_2
 = 7,

1426 
	mV4L2_MPEG_VIDEO_H264_LEVEL_3_0
 = 8,

1427 
	mV4L2_MPEG_VIDEO_H264_LEVEL_3_1
 = 9,

1428 
	mV4L2_MPEG_VIDEO_H264_LEVEL_3_2
 = 10,

1429 
	mV4L2_MPEG_VIDEO_H264_LEVEL_4_0
 = 11,

1430 
	mV4L2_MPEG_VIDEO_H264_LEVEL_4_1
 = 12,

1431 
	mV4L2_MPEG_VIDEO_H264_LEVEL_4_2
 = 13,

1432 
	mV4L2_MPEG_VIDEO_H264_LEVEL_5_0
 = 14,

1433 
	mV4L2_MPEG_VIDEO_H264_LEVEL_5_1
 = 15,

1435 
	#V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_ALPHA
 (
V4L2_CID_MPEG_BASE
+360)

	)

1436 
	#V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_BETA
 (
V4L2_CID_MPEG_BASE
+361)

	)

1437 
	#V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_MODE
 (
V4L2_CID_MPEG_BASE
+362)

	)

1438 
	ev4l2_m≥g_video_h264_lo›_fûãr_mode
 {

1439 
	mV4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_ENABLED
 = 0,

1440 
	mV4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_DISABLED
 = 1,

1441 
	mV4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_DISABLED_AT_SLICE_BOUNDARY
 = 2,

1443 
	#V4L2_CID_MPEG_VIDEO_H264_PROFILE
 (
V4L2_CID_MPEG_BASE
+363)

	)

1444 
	ev4l2_m≥g_video_h264_¥ofûe
 {

1445 
	mV4L2_MPEG_VIDEO_H264_PROFILE_BASELINE
 = 0,

1446 
	mV4L2_MPEG_VIDEO_H264_PROFILE_CONSTRAINED_BASELINE
 = 1,

1447 
	mV4L2_MPEG_VIDEO_H264_PROFILE_MAIN
 = 2,

1448 
	mV4L2_MPEG_VIDEO_H264_PROFILE_EXTENDED
 = 3,

1449 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH
 = 4,

1450 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_10
 = 5,

1451 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_422
 = 6,

1452 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_444_PREDICTIVE
 = 7,

1453 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_10_INTRA
 = 8,

1454 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_422_INTRA
 = 9,

1455 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_444_INTRA
 = 10,

1456 
	mV4L2_MPEG_VIDEO_H264_PROFILE_CAVLC_444_INTRA
 = 11,

1457 
	mV4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_BASELINE
 = 12,

1458 
	mV4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_HIGH
 = 13,

1459 
	mV4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_HIGH_INTRA
 = 14,

1460 
	mV4L2_MPEG_VIDEO_H264_PROFILE_STEREO_HIGH
 = 15,

1461 
	mV4L2_MPEG_VIDEO_H264_PROFILE_MULTIVIEW_HIGH
 = 16,

1463 
	#V4L2_CID_MPEG_VIDEO_H264_VUI_EXT_SAR_HEIGHT
 (
V4L2_CID_MPEG_BASE
+364)

	)

1464 
	#V4L2_CID_MPEG_VIDEO_H264_VUI_EXT_SAR_WIDTH
 (
V4L2_CID_MPEG_BASE
+365)

	)

1465 
	#V4L2_CID_MPEG_VIDEO_H264_VUI_SAR_ENABLE
 (
V4L2_CID_MPEG_BASE
+366)

	)

1466 
	#V4L2_CID_MPEG_VIDEO_H264_VUI_SAR_IDC
 (
V4L2_CID_MPEG_BASE
+367)

	)

1467 
	ev4l2_m≥g_video_h264_vui_ßr_idc
 {

1468 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_UNSPECIFIED
 = 0,

1469 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_1x1
 = 1,

1470 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_12x11
 = 2,

1471 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_10x11
 = 3,

1472 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_16x11
 = 4,

1473 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_40x33
 = 5,

1474 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_24x11
 = 6,

1475 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_20x11
 = 7,

1476 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_32x11
 = 8,

1477 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_80x33
 = 9,

1478 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_18x11
 = 10,

1479 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_15x11
 = 11,

1480 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_64x33
 = 12,

1481 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_160x99
 = 13,

1482 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_4x3
 = 14,

1483 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_3x2
 = 15,

1484 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_2x1
 = 16,

1485 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_EXTENDED
 = 17,

1487 
	#V4L2_CID_MPEG_VIDEO_MPEG4_I_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+400)

	)

1488 
	#V4L2_CID_MPEG_VIDEO_MPEG4_P_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+401)

	)

1489 
	#V4L2_CID_MPEG_VIDEO_MPEG4_B_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+402)

	)

1490 
	#V4L2_CID_MPEG_VIDEO_MPEG4_MIN_QP
 (
V4L2_CID_MPEG_BASE
+403)

	)

1491 
	#V4L2_CID_MPEG_VIDEO_MPEG4_MAX_QP
 (
V4L2_CID_MPEG_BASE
+404)

	)

1492 
	#V4L2_CID_MPEG_VIDEO_MPEG4_LEVEL
 (
V4L2_CID_MPEG_BASE
+405)

	)

1493 
	ev4l2_m≥g_video_m≥g4_Àvñ
 {

1494 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_0
 = 0,

1495 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_0B
 = 1,

1496 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_1
 = 2,

1497 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_2
 = 3,

1498 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_3
 = 4,

1499 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_3B
 = 5,

1500 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_4
 = 6,

1501 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_5
 = 7,

1503 
	#V4L2_CID_MPEG_VIDEO_MPEG4_PROFILE
 (
V4L2_CID_MPEG_BASE
+406)

	)

1504 
	ev4l2_m≥g_video_m≥g4_¥ofûe
 {

1505 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_SIMPLE
 = 0,

1506 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_ADVANCED_SIMPLE
 = 1,

1507 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_CORE
 = 2,

1508 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_SIMPLE_SCALABLE
 = 3,

1509 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_ADVANCED_CODING_EFFICIENCY
 = 4,

1511 
	#V4L2_CID_MPEG_VIDEO_MPEG4_QPEL
 (
V4L2_CID_MPEG_BASE
+407)

	)

1514 
	#V4L2_CID_MPEG_CX2341X_BASE
 (
V4L2_CTRL_CLASS_MPEG
 | 0x1000)

	)

1515 
	#V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE
 (
V4L2_CID_MPEG_CX2341X_BASE
+0)

	)

1516 
	ev4l2_m≥g_cx2341x_video_•©ül_fûãr_mode
 {

1517 
	mV4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_MANUAL
 = 0,

1518 
	mV4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_AUTO
 = 1,

1520 
	#V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER
 (
V4L2_CID_MPEG_CX2341X_BASE
+1)

	)

1521 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+2)

	)

1522 
	ev4l2_m≥g_cx2341x_video_luma_•©ül_fûãr_ty≥
 {

1523 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_OFF
 = 0,

1524 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_HOR
 = 1,

1525 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_VERT
 = 2,

1526 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_HV_SEPARABLE
 = 3,

1527 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_SYM_NON_SEPARABLE
 = 4,

1529 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+3)

	)

1530 
	ev4l2_m≥g_cx2341x_video_chroma_•©ül_fûãr_ty≥
 {

1531 
	mV4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_OFF
 = 0,

1532 
	mV4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_1D_HOR
 = 1,

1534 
	#V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE
 (
V4L2_CID_MPEG_CX2341X_BASE
+4)

	)

1535 
	ev4l2_m≥g_cx2341x_video_ãmp‹Æ_fûãr_mode
 {

1536 
	mV4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_MANUAL
 = 0,

1537 
	mV4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_AUTO
 = 1,

1539 
	#V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER
 (
V4L2_CID_MPEG_CX2341X_BASE
+5)

	)

1540 
	#V4L2_CID_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+6)

	)

1541 
	ev4l2_m≥g_cx2341x_video_medün_fûãr_ty≥
 {

1542 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_OFF
 = 0,

1543 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR
 = 1,

1544 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_VERT
 = 2,

1545 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR_VERT
 = 3,

1546 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_DIAG
 = 4,

1548 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_BOTTOM
 (
V4L2_CID_MPEG_CX2341X_BASE
+7)

	)

1549 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_TOP
 (
V4L2_CID_MPEG_CX2341X_BASE
+8)

	)

1550 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_BOTTOM
 (
V4L2_CID_MPEG_CX2341X_BASE
+9)

	)

1551 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_TOP
 (
V4L2_CID_MPEG_CX2341X_BASE
+10)

	)

1552 
	#V4L2_CID_MPEG_CX2341X_STREAM_INSERT_NAV_PACKETS
 (
V4L2_CID_MPEG_CX2341X_BASE
+11)

	)

1555 
	#V4L2_CID_MPEG_MFC51_BASE
 (
V4L2_CTRL_CLASS_MPEG
 | 0x1100)

	)

1557 
	#V4L2_CID_MPEG_MFC51_VIDEO_DECODER_H264_DISPLAY_DELAY
 (
V4L2_CID_MPEG_MFC51_BASE
+0)

	)

1558 
	#V4L2_CID_MPEG_MFC51_VIDEO_DECODER_H264_DISPLAY_DELAY_ENABLE
 (
V4L2_CID_MPEG_MFC51_BASE
+1)

	)

1559 
	#V4L2_CID_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE
 (
V4L2_CID_MPEG_MFC51_BASE
+2)

	)

1560 
	ev4l2_m≥g_mfc51_video_‰ame_skù_mode
 {

1561 
	mV4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_DISABLED
 = 0,

1562 
	mV4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_LEVEL_LIMIT
 = 1,

1563 
	mV4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_BUF_LIMIT
 = 2,

1565 
	#V4L2_CID_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE
 (
V4L2_CID_MPEG_MFC51_BASE
+3)

	)

1566 
	ev4l2_m≥g_mfc51_video_f‹˚_‰ame_ty≥
 {

1567 
	mV4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_DISABLED
 = 0,

1568 
	mV4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_I_FRAME
 = 1,

1569 
	mV4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_NOT_CODED
 = 2,

1571 
	#V4L2_CID_MPEG_MFC51_VIDEO_PADDING
 (
V4L2_CID_MPEG_MFC51_BASE
+4)

	)

1572 
	#V4L2_CID_MPEG_MFC51_VIDEO_PADDING_YUV
 (
V4L2_CID_MPEG_MFC51_BASE
+5)

	)

1573 
	#V4L2_CID_MPEG_MFC51_VIDEO_RC_FIXED_TARGET_BIT
 (
V4L2_CID_MPEG_MFC51_BASE
+6)

	)

1574 
	#V4L2_CID_MPEG_MFC51_VIDEO_RC_REACTION_COEFF
 (
V4L2_CID_MPEG_MFC51_BASE
+7)

	)

1575 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_ACTIVITY
 (
V4L2_CID_MPEG_MFC51_BASE
+50)

	)

1576 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_DARK
 (
V4L2_CID_MPEG_MFC51_BASE
+51)

	)

1577 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_SMOOTH
 (
V4L2_CID_MPEG_MFC51_BASE
+52)

	)

1578 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_STATIC
 (
V4L2_CID_MPEG_MFC51_BASE
+53)

	)

1579 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_NUM_REF_PIC_FOR_P
 (
V4L2_CID_MPEG_MFC51_BASE
+54)

	)

1582 
	#V4L2_CID_CAMERA_CLASS_BASE
 (
V4L2_CTRL_CLASS_CAMERA
 | 0x900)

	)

1583 
	#V4L2_CID_CAMERA_CLASS
 (
V4L2_CTRL_CLASS_CAMERA
 | 1)

	)

1585 
	#V4L2_CID_EXPOSURE_AUTO
 (
V4L2_CID_CAMERA_CLASS_BASE
+1)

	)

1586 
	ev4l2_exposuª_auto_ty≥
 {

1587 
	mV4L2_EXPOSURE_AUTO
 = 0,

1588 
	mV4L2_EXPOSURE_MANUAL
 = 1,

1589 
	mV4L2_EXPOSURE_SHUTTER_PRIORITY
 = 2,

1590 
	mV4L2_EXPOSURE_APERTURE_PRIORITY
 = 3

1592 
	#V4L2_CID_EXPOSURE_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+2)

	)

1593 
	#V4L2_CID_EXPOSURE_AUTO_PRIORITY
 (
V4L2_CID_CAMERA_CLASS_BASE
+3)

	)

1595 
	#V4L2_CID_PAN_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+4)

	)

1596 
	#V4L2_CID_TILT_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+5)

	)

1597 
	#V4L2_CID_PAN_RESET
 (
V4L2_CID_CAMERA_CLASS_BASE
+6)

	)

1598 
	#V4L2_CID_TILT_RESET
 (
V4L2_CID_CAMERA_CLASS_BASE
+7)

	)

1600 
	#V4L2_CID_PAN_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+8)

	)

1601 
	#V4L2_CID_TILT_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+9)

	)

1603 
	#V4L2_CID_FOCUS_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+10)

	)

1604 
	#V4L2_CID_FOCUS_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+11)

	)

1605 
	#V4L2_CID_FOCUS_AUTO
 (
V4L2_CID_CAMERA_CLASS_BASE
+12)

	)

1607 
	#V4L2_CID_ZOOM_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+13)

	)

1608 
	#V4L2_CID_ZOOM_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+14)

	)

1609 
	#V4L2_CID_ZOOM_CONTINUOUS
 (
V4L2_CID_CAMERA_CLASS_BASE
+15)

	)

1611 
	#V4L2_CID_PRIVACY
 (
V4L2_CID_CAMERA_CLASS_BASE
+16)

	)

1613 
	#V4L2_CID_IRIS_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+17)

	)

1614 
	#V4L2_CID_IRIS_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+18)

	)

1617 
	#V4L2_CID_FM_TX_CLASS_BASE
 (
V4L2_CTRL_CLASS_FM_TX
 | 0x900)

	)

1618 
	#V4L2_CID_FM_TX_CLASS
 (
V4L2_CTRL_CLASS_FM_TX
 | 1)

	)

1620 
	#V4L2_CID_RDS_TX_DEVIATION
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 1)

	)

1621 
	#V4L2_CID_RDS_TX_PI
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 2)

	)

1622 
	#V4L2_CID_RDS_TX_PTY
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 3)

	)

1623 
	#V4L2_CID_RDS_TX_PS_NAME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 5)

	)

1624 
	#V4L2_CID_RDS_TX_RADIO_TEXT
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 6)

	)

1626 
	#V4L2_CID_AUDIO_LIMITER_ENABLED
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 64)

	)

1627 
	#V4L2_CID_AUDIO_LIMITER_RELEASE_TIME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 65)

	)

1628 
	#V4L2_CID_AUDIO_LIMITER_DEVIATION
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 66)

	)

1630 
	#V4L2_CID_AUDIO_COMPRESSION_ENABLED
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 80)

	)

1631 
	#V4L2_CID_AUDIO_COMPRESSION_GAIN
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 81)

	)

1632 
	#V4L2_CID_AUDIO_COMPRESSION_THRESHOLD
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 82)

	)

1633 
	#V4L2_CID_AUDIO_COMPRESSION_ATTACK_TIME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 83)

	)

1634 
	#V4L2_CID_AUDIO_COMPRESSION_RELEASE_TIME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 84)

	)

1636 
	#V4L2_CID_PILOT_TONE_ENABLED
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 96)

	)

1637 
	#V4L2_CID_PILOT_TONE_DEVIATION
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 97)

	)

1638 
	#V4L2_CID_PILOT_TONE_FREQUENCY
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 98)

	)

1640 
	#V4L2_CID_TUNE_PREEMPHASIS
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 112)

	)

1641 
	ev4l2_¥ìmphasis
 {

1642 
	mV4L2_PREEMPHASIS_DISABLED
 = 0,

1643 
	mV4L2_PREEMPHASIS_50_uS
 = 1,

1644 
	mV4L2_PREEMPHASIS_75_uS
 = 2,

1646 
	#V4L2_CID_TUNE_POWER_LEVEL
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 113)

	)

1647 
	#V4L2_CID_TUNE_ANTENNA_CAPACITOR
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 114)

	)

1650 
	#V4L2_CID_FLASH_CLASS_BASE
 (
V4L2_CTRL_CLASS_FLASH
 | 0x900)

	)

1651 
	#V4L2_CID_FLASH_CLASS
 (
V4L2_CTRL_CLASS_FLASH
 | 1)

	)

1653 
	#V4L2_CID_FLASH_LED_MODE
 (
V4L2_CID_FLASH_CLASS_BASE
 + 1)

	)

1654 
	ev4l2_Êash_Àd_mode
 {

1655 
	mV4L2_FLASH_LED_MODE_NONE
,

1656 
	mV4L2_FLASH_LED_MODE_FLASH
,

1657 
	mV4L2_FLASH_LED_MODE_TORCH
,

1660 
	#V4L2_CID_FLASH_STROBE_SOURCE
 (
V4L2_CID_FLASH_CLASS_BASE
 + 2)

	)

1661 
	ev4l2_Êash_°robe_sour˚
 {

1662 
	mV4L2_FLASH_STROBE_SOURCE_SOFTWARE
,

1663 
	mV4L2_FLASH_STROBE_SOURCE_EXTERNAL
,

1666 
	#V4L2_CID_FLASH_STROBE
 (
V4L2_CID_FLASH_CLASS_BASE
 + 3)

	)

1667 
	#V4L2_CID_FLASH_STROBE_STOP
 (
V4L2_CID_FLASH_CLASS_BASE
 + 4)

	)

1668 
	#V4L2_CID_FLASH_STROBE_STATUS
 (
V4L2_CID_FLASH_CLASS_BASE
 + 5)

	)

1670 
	#V4L2_CID_FLASH_TIMEOUT
 (
V4L2_CID_FLASH_CLASS_BASE
 + 6)

	)

1671 
	#V4L2_CID_FLASH_INTENSITY
 (
V4L2_CID_FLASH_CLASS_BASE
 + 7)

	)

1672 
	#V4L2_CID_FLASH_TORCH_INTENSITY
 (
V4L2_CID_FLASH_CLASS_BASE
 + 8)

	)

1673 
	#V4L2_CID_FLASH_INDICATOR_INTENSITY
 (
V4L2_CID_FLASH_CLASS_BASE
 + 9)

	)

1675 
	#V4L2_CID_FLASH_FAULT
 (
V4L2_CID_FLASH_CLASS_BASE
 + 10)

	)

1676 
	#V4L2_FLASH_FAULT_OVER_VOLTAGE
 (1 << 0)

	)

1677 
	#V4L2_FLASH_FAULT_TIMEOUT
 (1 << 1)

	)

1678 
	#V4L2_FLASH_FAULT_OVER_TEMPERATURE
 (1 << 2)

	)

1679 
	#V4L2_FLASH_FAULT_SHORT_CIRCUIT
 (1 << 3)

	)

1681 
	#V4L2_CID_FLASH_CHARGE
 (
V4L2_CID_FLASH_CLASS_BASE
 + 11)

	)

1682 
	#V4L2_CID_FLASH_READY
 (
V4L2_CID_FLASH_CLASS_BASE
 + 12)

	)

1687 
	sv4l2_tu√r
 {

1688 
__u32
 
	mödex
;

1689 
__u8
 
	m«me
[32];

1690 
v4l2_tu√r_ty≥
 
	mty≥
;

1691 
__u32
 
	mˇ∑bûôy
;

1692 
__u32
 
	møngñow
;

1693 
__u32
 
	møngehigh
;

1694 
__u32
 
	mrxsubch™s
;

1695 
__u32
 
	maudmode
;

1696 
__s32
 
	msig«l
;

1697 
__s32
 
	mafc
;

1698 
__u32
 
	mª£rved
[4];

1701 
	sv4l2_moduœt‹
 {

1702 
__u32
 
	mödex
;

1703 
__u8
 
	m«me
[32];

1704 
__u32
 
	mˇ∑bûôy
;

1705 
__u32
 
	møngñow
;

1706 
__u32
 
	møngehigh
;

1707 
__u32
 
	mtxsubch™s
;

1708 
__u32
 
	mª£rved
[4];

1712 
	#V4L2_TUNER_CAP_LOW
 0x0001

	)

1713 
	#V4L2_TUNER_CAP_NORM
 0x0002

	)

1714 
	#V4L2_TUNER_CAP_STEREO
 0x0010

	)

1715 
	#V4L2_TUNER_CAP_LANG2
 0x0020

	)

1716 
	#V4L2_TUNER_CAP_SAP
 0x0020

	)

1717 
	#V4L2_TUNER_CAP_LANG1
 0x0040

	)

1718 
	#V4L2_TUNER_CAP_RDS
 0x0080

	)

1719 
	#V4L2_TUNER_CAP_RDS_BLOCK_IO
 0x0100

	)

1720 
	#V4L2_TUNER_CAP_RDS_CONTROLS
 0x0200

	)

1723 
	#V4L2_TUNER_SUB_MONO
 0x0001

	)

1724 
	#V4L2_TUNER_SUB_STEREO
 0x0002

	)

1725 
	#V4L2_TUNER_SUB_LANG2
 0x0004

	)

1726 
	#V4L2_TUNER_SUB_SAP
 0x0004

	)

1727 
	#V4L2_TUNER_SUB_LANG1
 0x0008

	)

1728 
	#V4L2_TUNER_SUB_RDS
 0x0010

	)

1731 
	#V4L2_TUNER_MODE_MONO
 0x0000

	)

1732 
	#V4L2_TUNER_MODE_STEREO
 0x0001

	)

1733 
	#V4L2_TUNER_MODE_LANG2
 0x0002

	)

1734 
	#V4L2_TUNER_MODE_SAP
 0x0002

	)

1735 
	#V4L2_TUNER_MODE_LANG1
 0x0003

	)

1736 
	#V4L2_TUNER_MODE_LANG1_LANG2
 0x0004

	)

1738 
	sv4l2_‰equícy
 {

1739 
__u32
 
	mtu√r
;

1740 
v4l2_tu√r_ty≥
 
	mty≥
;

1741 
__u32
 
	m‰equícy
;

1742 
__u32
 
	mª£rved
[8];

1745 
	sv4l2_hw_‰eq_£ek
 {

1746 
__u32
 
	mtu√r
;

1747 
v4l2_tu√r_ty≥
 
	mty≥
;

1748 
__u32
 
	m£ek_upw¨d
;

1749 
__u32
 
	mwøp_¨ound
;

1750 
__u32
 
	m•acög
;

1751 
__u32
 
	mª£rved
[7];

1758 
	sv4l2_rds_d©a
 {

1759 
__u8
 
	mlsb
;

1760 
__u8
 
	mmsb
;

1761 
__u8
 
	mblock
;

1762 } 
__©åibuã__
 ((
∑cked
));

1764 
	#V4L2_RDS_BLOCK_MSK
 0x7

	)

1765 
	#V4L2_RDS_BLOCK_A
 0

	)

1766 
	#V4L2_RDS_BLOCK_B
 1

	)

1767 
	#V4L2_RDS_BLOCK_C
 2

	)

1768 
	#V4L2_RDS_BLOCK_D
 3

	)

1769 
	#V4L2_RDS_BLOCK_C_ALT
 4

	)

1770 
	#V4L2_RDS_BLOCK_INVALID
 7

	)

1772 
	#V4L2_RDS_BLOCK_CORRECTED
 0x40

	)

1773 
	#V4L2_RDS_BLOCK_ERROR
 0x80

	)

1778 
	sv4l2_audio
 {

1779 
__u32
 
	mödex
;

1780 
__u8
 
	m«me
[32];

1781 
__u32
 
	mˇ∑bûôy
;

1782 
__u32
 
	mmode
;

1783 
__u32
 
	mª£rved
[2];

1787 
	#V4L2_AUDCAP_STEREO
 0x00001

	)

1788 
	#V4L2_AUDCAP_AVL
 0x00002

	)

1791 
	#V4L2_AUDMODE_AVL
 0x00001

	)

1793 
	sv4l2_audioout
 {

1794 
__u32
 
	mödex
;

1795 
__u8
 
	m«me
[32];

1796 
__u32
 
	mˇ∑bûôy
;

1797 
__u32
 
	mmode
;

1798 
__u32
 
	mª£rved
[2];

1807 
	#V4L2_ENC_IDX_FRAME_I
 (0)

	)

1808 
	#V4L2_ENC_IDX_FRAME_P
 (1)

	)

1809 
	#V4L2_ENC_IDX_FRAME_B
 (2)

	)

1810 
	#V4L2_ENC_IDX_FRAME_MASK
 (0xf)

	)

1812 
	sv4l2_íc_idx_íåy
 {

1813 
__u64
 
	moff£t
;

1814 
__u64
 
	m±s
;

1815 
__u32
 
	mÀngth
;

1816 
__u32
 
	mÊags
;

1817 
__u32
 
	mª£rved
[2];

1820 
	#V4L2_ENC_IDX_ENTRIES
 (64)

	)

1821 
	sv4l2_íc_idx
 {

1822 
__u32
 
	míåõs
;

1823 
__u32
 
	míåõs_ˇp
;

1824 
__u32
 
	mª£rved
[4];

1825 
v4l2_íc_idx_íåy
 
	míåy
[
V4L2_ENC_IDX_ENTRIES
];

1829 
	#V4L2_ENC_CMD_START
 (0)

	)

1830 
	#V4L2_ENC_CMD_STOP
 (1)

	)

1831 
	#V4L2_ENC_CMD_PAUSE
 (2)

	)

1832 
	#V4L2_ENC_CMD_RESUME
 (3)

	)

1835 
	#V4L2_ENC_CMD_STOP_AT_GOP_END
 (1 << 0)

	)

1837 
	sv4l2_ícodî_cmd
 {

1838 
__u32
 
	mcmd
;

1839 
__u32
 
	mÊags
;

1842 
__u32
 
	md©a
[8];

1843 } 
	møw
;

1857 
	sv4l2_vbi_f‹m©
 {

1858 
__u32
 
	mßm∂ög_øã
;

1859 
__u32
 
	moff£t
;

1860 
__u32
 
	mßm∂es_≥r_löe
;

1861 
__u32
 
	mßm∂e_f‹m©
;

1862 
__s32
 
	m°¨t
[2];

1863 
__u32
 
	mcou¡
[2];

1864 
__u32
 
	mÊags
;

1865 
__u32
 
	mª£rved
[2];

1869 
	#V4L2_VBI_UNSYNC
 (1 << 0)

	)

1870 
	#V4L2_VBI_INTERLACED
 (1 << 1)

	)

1879 
	sv4l2_¶i˚d_vbi_f‹m©
 {

1880 
__u16
 
	m£rvi˚_£t
;

1885 
__u16
 
	m£rvi˚_löes
[2][24];

1886 
__u32
 
	mio_size
;

1887 
__u32
 
	mª£rved
[2];

1892 
	#V4L2_SLICED_TELETEXT_B
 (0x0001)

	)

1894 
	#V4L2_SLICED_VPS
 (0x0400)

	)

1896 
	#V4L2_SLICED_CAPTION_525
 (0x1000)

	)

1898 
	#V4L2_SLICED_WSS_625
 (0x4000)

	)

1900 
	#V4L2_SLICED_VBI_525
 (
V4L2_SLICED_CAPTION_525
)

	)

1901 
	#V4L2_SLICED_VBI_625
 (
V4L2_SLICED_TELETEXT_B
 | 
V4L2_SLICED_VPS
 | 
V4L2_SLICED_WSS_625
)

	)

1903 
	sv4l2_¶i˚d_vbi_ˇp
 {

1904 
__u16
 
	m£rvi˚_£t
;

1909 
__u16
 
	m£rvi˚_löes
[2][24];

1910 
v4l2_buf_ty≥
 
	mty≥
;

1911 
__u32
 
	mª£rved
[3];

1914 
	sv4l2_¶i˚d_vbi_d©a
 {

1915 
__u32
 
	mid
;

1916 
__u32
 
	mfõld
;

1917 
__u32
 
	mlöe
;

1918 
__u32
 
	mª£rved
;

1919 
__u8
 
	md©a
[48];

1939 
	#V4L2_MPEG_VBI_IVTV_TELETEXT_B
 (1)

	)

1940 
	#V4L2_MPEG_VBI_IVTV_CAPTION_525
 (4)

	)

1941 
	#V4L2_MPEG_VBI_IVTV_WSS_625
 (5)

	)

1942 
	#V4L2_MPEG_VBI_IVTV_VPS
 (7)

	)

1944 
	sv4l2_m≥g_vbi_ôv0_löe
 {

1945 
__u8
 
	mid
;

1946 
__u8
 
	md©a
[42];

1947 } 
__©åibuã__
 ((
∑cked
));

1949 
	sv4l2_m≥g_vbi_ôv0
 {

1950 
__À32
 
	mlöemask
[2];

1951 
v4l2_m≥g_vbi_ôv0_löe
 
	mlöe
[35];

1952 } 
__©åibuã__
 ((
∑cked
));

1954 
	sv4l2_m≥g_vbi_ITV0
 {

1955 
v4l2_m≥g_vbi_ôv0_löe
 
	mlöe
[36];

1956 } 
__©åibuã__
 ((
∑cked
));

1958 
	#V4L2_MPEG_VBI_IVTV_MAGIC0
 "ôv0"

	)

1959 
	#V4L2_MPEG_VBI_IVTV_MAGIC1
 "ITV0"

	)

1961 
	sv4l2_m≥g_vbi_fmt_ivtv
 {

1962 
__u8
 
	mmagic
[4];

1964 
v4l2_m≥g_vbi_ôv0
 
	môv0
;

1965 
v4l2_m≥g_vbi_ITV0
 
	mITV0
;

1967 } 
__©åibuã__
 ((
∑cked
));

1980 
	sv4l2_∂™e_pix_f‹m©
 {

1981 
__u32
 
	msizeimage
;

1982 
__u16
 
	mbyã•îlöe
;

1983 
__u16
 
	mª£rved
[7];

1984 } 
__©åibuã__
 ((
∑cked
));

1996 
	sv4l2_pix_f‹m©_m∂™e
 {

1997 
__u32
 
	mwidth
;

1998 
__u32
 
	mheight
;

1999 
__u32
 
	mpixñf‹m©
;

2000 
v4l2_fõld
 
	mfõld
;

2001 
v4l2_cﬁ‹•a˚
 
	mcﬁ‹•a˚
;

2003 
v4l2_∂™e_pix_f‹m©
 
	m∂™e_fmt
[
VIDEO_MAX_PLANES
];

2004 
__u8
 
	mnum_∂™es
;

2005 
__u8
 
	mª£rved
[11];

2006 } 
__©åibuã__
 ((
∑cked
));

2018 
	sv4l2_f‹m©
 {

2019 
v4l2_buf_ty≥
 
	mty≥
;

2021 
v4l2_pix_f‹m©
 
	mpix
;

2022 
v4l2_pix_f‹m©_m∂™e
 
	mpix_mp
;

2023 
v4l2_wödow
 
	mwö
;

2024 
v4l2_vbi_f‹m©
 
	mvbi
;

2025 
v4l2_¶i˚d_vbi_f‹m©
 
	m¶i˚d
;

2026 
__u8
 
	møw_d©a
[200];

2027 } 
	mfmt
;

2032 
	sv4l2_°ªam∑rm
 {

2033 
v4l2_buf_ty≥
 
	mty≥
;

2035 
v4l2_ˇ±uª∑rm
 
	mˇ±uª
;

2036 
v4l2_ouçuç¨m
 
	mouçut
;

2037 
__u8
 
	møw_d©a
[200];

2038 } 
	m∑rm
;

2045 
	#V4L2_EVENT_ALL
 0

	)

2046 
	#V4L2_EVENT_VSYNC
 1

	)

2047 
	#V4L2_EVENT_EOS
 2

	)

2048 
	#V4L2_EVENT_CTRL
 3

	)

2049 
	#V4L2_EVENT_FRAME_SYNC
 4

	)

2050 
	#V4L2_EVENT_PRIVATE_START
 0x08000000

	)

2053 
	sv4l2_evít_vsync
 {

2055 
__u8
 
	mfõld
;

2056 } 
__©åibuã__
 ((
∑cked
));

2059 
	#V4L2_EVENT_CTRL_CH_VALUE
 (1 << 0)

	)

2060 
	#V4L2_EVENT_CTRL_CH_FLAGS
 (1 << 1)

	)

2062 
	sv4l2_evít_˘æ
 {

2063 
__u32
 
	mch™ges
;

2064 
__u32
 
	mty≥
;

2066 
__s32
 
	mvÆue
;

2067 
__s64
 
	mvÆue64
;

2069 
__u32
 
	mÊags
;

2070 
__s32
 
	mmöimum
;

2071 
__s32
 
	mmaximum
;

2072 
__s32
 
	m°ï
;

2073 
__s32
 
	mdeÁu…_vÆue
;

2076 
	sv4l2_evít_‰ame_sync
 {

2077 
__u32
 
	m‰ame_£quí˚
;

2080 
	sv4l2_evít
 {

2081 
__u32
 
	mty≥
;

2083 
v4l2_evít_vsync
 
	mvsync
;

2084 
v4l2_evít_˘æ
 
	m˘æ
;

2085 
v4l2_evít_‰ame_sync
 
	m‰ame_sync
;

2086 
__u8
 
	md©a
[64];

2087 } 
	mu
;

2088 
__u32
 
	m≥ndög
;

2089 
__u32
 
	m£quí˚
;

2090 
time•ec
 
	mtime°amp
;

2091 
__u32
 
	mid
;

2092 
__u32
 
	mª£rved
[8];

2095 
	#V4L2_EVENT_SUB_FL_SEND_INITIAL
 (1 << 0)

	)

2096 
	#V4L2_EVENT_SUB_FL_ALLOW_FEEDBACK
 (1 << 1)

	)

2098 
	sv4l2_evít_subs¸ùti⁄
 {

2099 
__u32
 
	mty≥
;

2100 
__u32
 
	mid
;

2101 
__u32
 
	mÊags
;

2102 
__u32
 
	mª£rved
[5];

2114 
	#V4L2_CHIP_MATCH_HOST
 0

	)

2115 
	#V4L2_CHIP_MATCH_I2C_DRIVER
 1

	)

2116 
	#V4L2_CHIP_MATCH_I2C_ADDR
 2

	)

2117 
	#V4L2_CHIP_MATCH_AC97
 3

	)

2119 
	sv4l2_dbg_m©ch
 {

2120 
__u32
 
	mty≥
;

2122 
__u32
 
	maddr
;

2123 
	m«me
[32];

2125 } 
__©åibuã__
 ((
∑cked
));

2127 
	sv4l2_dbg_ªgi°î
 {

2128 
v4l2_dbg_m©ch
 
	mm©ch
;

2129 
__u32
 
	msize
;

2130 
__u64
 
	mªg
;

2131 
__u64
 
	mvÆ
;

2132 } 
__©åibuã__
 ((
∑cked
));

2135 
	sv4l2_dbg_chù_idít
 {

2136 
v4l2_dbg_m©ch
 
	mm©ch
;

2137 
__u32
 
	midít
;

2138 
__u32
 
	mªvisi⁄
;

2139 } 
__©åibuã__
 ((
∑cked
));

2150 
	sv4l2_¸óã_buf„rs
 {

2151 
__u32
 
	mödex
;

2152 
__u32
 
	mcou¡
;

2153 
v4l2_mem‹y
 
	mmem‹y
;

2154 
v4l2_f‹m©
 
	mf‹m©
;

2155 
__u32
 
	mª£rved
[8];

2162 
	#VIDIOC_QUERYCAP
 
	`_IOR
('V', 0, 
v4l2_ˇ∑bûôy
)

	)

2163 
	#VIDIOC_RESERVED
 
	`_IO
('V', 1)

	)

2164 
	#VIDIOC_ENUM_FMT
 
	`_IOWR
('V', 2, 
v4l2_fmtdesc
)

	)

2165 
	#VIDIOC_G_FMT
 
	`_IOWR
('V', 4, 
v4l2_f‹m©
)

	)

2166 
	#VIDIOC_S_FMT
 
	`_IOWR
('V', 5, 
v4l2_f‹m©
)

	)

2167 
	#VIDIOC_REQBUFS
 
	`_IOWR
('V', 8, 
v4l2_ªque°buf„rs
)

	)

2168 
	#VIDIOC_QUERYBUF
 
	`_IOWR
('V', 9, 
v4l2_buf„r
)

	)

2169 
	#VIDIOC_G_FBUF
 
	`_IOR
('V', 10, 
v4l2_‰amebuf„r
)

	)

2170 
	#VIDIOC_S_FBUF
 
	`_IOW
('V', 11, 
v4l2_‰amebuf„r
)

	)

2171 
	#VIDIOC_OVERLAY
 
	`_IOW
('V', 14, )

	)

2172 
	#VIDIOC_QBUF
 
	`_IOWR
('V', 15, 
v4l2_buf„r
)

	)

2173 
	#VIDIOC_DQBUF
 
	`_IOWR
('V', 17, 
v4l2_buf„r
)

	)

2174 
	#VIDIOC_STREAMON
 
	`_IOW
('V', 18, )

	)

2175 
	#VIDIOC_STREAMOFF
 
	`_IOW
('V', 19, )

	)

2176 
	#VIDIOC_G_PARM
 
	`_IOWR
('V', 21, 
v4l2_°ªam∑rm
)

	)

2177 
	#VIDIOC_S_PARM
 
	`_IOWR
('V', 22, 
v4l2_°ªam∑rm
)

	)

2178 
	#VIDIOC_G_STD
 
	`_IOR
('V', 23, 
v4l2_°d_id
)

	)

2179 
	#VIDIOC_S_STD
 
	`_IOW
('V', 24, 
v4l2_°d_id
)

	)

2180 
	#VIDIOC_ENUMSTD
 
	`_IOWR
('V', 25, 
v4l2_°™d¨d
)

	)

2181 
	#VIDIOC_ENUMINPUT
 
	`_IOWR
('V', 26, 
v4l2_öput
)

	)

2182 
	#VIDIOC_G_CTRL
 
	`_IOWR
('V', 27, 
v4l2_c⁄åﬁ
)

	)

2183 
	#VIDIOC_S_CTRL
 
	`_IOWR
('V', 28, 
v4l2_c⁄åﬁ
)

	)

2184 
	#VIDIOC_G_TUNER
 
	`_IOWR
('V', 29, 
v4l2_tu√r
)

	)

2185 
	#VIDIOC_S_TUNER
 
	`_IOW
('V', 30, 
v4l2_tu√r
)

	)

2186 
	#VIDIOC_G_AUDIO
 
	`_IOR
('V', 33, 
v4l2_audio
)

	)

2187 
	#VIDIOC_S_AUDIO
 
	`_IOW
('V', 34, 
v4l2_audio
)

	)

2188 
	#VIDIOC_QUERYCTRL
 
	`_IOWR
('V', 36, 
v4l2_quîy˘æ
)

	)

2189 
	#VIDIOC_QUERYMENU
 
	`_IOWR
('V', 37, 
v4l2_quîymíu
)

	)

2190 
	#VIDIOC_G_INPUT
 
	`_IOR
('V', 38, )

	)

2191 
	#VIDIOC_S_INPUT
 
	`_IOWR
('V', 39, )

	)

2192 
	#VIDIOC_G_OUTPUT
 
	`_IOR
('V', 46, )

	)

2193 
	#VIDIOC_S_OUTPUT
 
	`_IOWR
('V', 47, )

	)

2194 
	#VIDIOC_ENUMOUTPUT
 
	`_IOWR
('V', 48, 
v4l2_ouçut
)

	)

2195 
	#VIDIOC_G_AUDOUT
 
	`_IOR
('V', 49, 
v4l2_audioout
)

	)

2196 
	#VIDIOC_S_AUDOUT
 
	`_IOW
('V', 50, 
v4l2_audioout
)

	)

2197 
	#VIDIOC_G_MODULATOR
 
	`_IOWR
('V', 54, 
v4l2_moduœt‹
)

	)

2198 
	#VIDIOC_S_MODULATOR
 
	`_IOW
('V', 55, 
v4l2_moduœt‹
)

	)

2199 
	#VIDIOC_G_FREQUENCY
 
	`_IOWR
('V', 56, 
v4l2_‰equícy
)

	)

2200 
	#VIDIOC_S_FREQUENCY
 
	`_IOW
('V', 57, 
v4l2_‰equícy
)

	)

2201 
	#VIDIOC_CROPCAP
 
	`_IOWR
('V', 58, 
v4l2_¸›ˇp
)

	)

2202 
	#VIDIOC_G_CROP
 
	`_IOWR
('V', 59, 
v4l2_¸›
)

	)

2203 
	#VIDIOC_S_CROP
 
	`_IOW
('V', 60, 
v4l2_¸›
)

	)

2204 
	#VIDIOC_G_JPEGCOMP
 
	`_IOR
('V', 61, 
v4l2_j≥gcom¥essi⁄
)

	)

2205 
	#VIDIOC_S_JPEGCOMP
 
	`_IOW
('V', 62, 
v4l2_j≥gcom¥essi⁄
)

	)

2206 
	#VIDIOC_QUERYSTD
 
	`_IOR
('V', 63, 
v4l2_°d_id
)

	)

2207 
	#VIDIOC_TRY_FMT
 
	`_IOWR
('V', 64, 
v4l2_f‹m©
)

	)

2208 
	#VIDIOC_ENUMAUDIO
 
	`_IOWR
('V', 65, 
v4l2_audio
)

	)

2209 
	#VIDIOC_ENUMAUDOUT
 
	`_IOWR
('V', 66, 
v4l2_audioout
)

	)

2210 
	#VIDIOC_G_PRIORITY
 
	`_IOR
('V', 67, 
v4l2_¥i‹ôy
)

	)

2211 
	#VIDIOC_S_PRIORITY
 
	`_IOW
('V', 68, 
v4l2_¥i‹ôy
)

	)

2212 
	#VIDIOC_G_SLICED_VBI_CAP
 
	`_IOWR
('V', 69, 
v4l2_¶i˚d_vbi_ˇp
)

	)

2213 
	#VIDIOC_LOG_STATUS
 
	`_IO
('V', 70)

	)

2214 
	#VIDIOC_G_EXT_CTRLS
 
	`_IOWR
('V', 71, 
v4l2_ext_c⁄åﬁs
)

	)

2215 
	#VIDIOC_S_EXT_CTRLS
 
	`_IOWR
('V', 72, 
v4l2_ext_c⁄åﬁs
)

	)

2216 
	#VIDIOC_TRY_EXT_CTRLS
 
	`_IOWR
('V', 73, 
v4l2_ext_c⁄åﬁs
)

	)

2218 
	#VIDIOC_ENUM_FRAMESIZES
 
	`_IOWR
('V', 74, 
v4l2_‰msizìnum
)

	)

2219 
	#VIDIOC_ENUM_FRAMEINTERVALS
 
	`_IOWR
('V', 75, 
v4l2_‰mivÆíum
)

	)

2220 
	#VIDIOC_G_ENC_INDEX
 
	`_IOR
('V', 76, 
v4l2_íc_idx
)

	)

2221 
	#VIDIOC_ENCODER_CMD
 
	`_IOWR
('V', 77, 
v4l2_ícodî_cmd
)

	)

2222 
	#VIDIOC_TRY_ENCODER_CMD
 
	`_IOWR
('V', 78, 
v4l2_ícodî_cmd
)

	)

2229 
	#VIDIOC_DBG_S_REGISTER
 
	`_IOW
('V', 79, 
v4l2_dbg_ªgi°î
)

	)

2230 
	#VIDIOC_DBG_G_REGISTER
 
	`_IOWR
('V', 80, 
v4l2_dbg_ªgi°î
)

	)

2234 
	#VIDIOC_DBG_G_CHIP_IDENT
 
	`_IOWR
('V', 81, 
v4l2_dbg_chù_idít
)

	)

2237 
	#VIDIOC_S_HW_FREQ_SEEK
 
	`_IOW
('V', 82, 
v4l2_hw_‰eq_£ek
)

	)

2238 
	#VIDIOC_ENUM_DV_PRESETS
 
	`_IOWR
('V', 83, 
v4l2_dv_íum_¥e£t
)

	)

2239 
	#VIDIOC_S_DV_PRESET
 
	`_IOWR
('V', 84, 
v4l2_dv_¥e£t
)

	)

2240 
	#VIDIOC_G_DV_PRESET
 
	`_IOWR
('V', 85, 
v4l2_dv_¥e£t
)

	)

2241 
	#VIDIOC_QUERY_DV_PRESET
 
	`_IOR
('V', 86, 
v4l2_dv_¥e£t
)

	)

2242 
	#VIDIOC_S_DV_TIMINGS
 
	`_IOWR
('V', 87, 
v4l2_dv_timögs
)

	)

2243 
	#VIDIOC_G_DV_TIMINGS
 
	`_IOWR
('V', 88, 
v4l2_dv_timögs
)

	)

2244 
	#VIDIOC_DQEVENT
 
	`_IOR
('V', 89, 
v4l2_evít
)

	)

2245 
	#VIDIOC_SUBSCRIBE_EVENT
 
	`_IOW
('V', 90, 
v4l2_evít_subs¸ùti⁄
)

	)

2246 
	#VIDIOC_UNSUBSCRIBE_EVENT
 
	`_IOW
('V', 91, 
v4l2_evít_subs¸ùti⁄
)

	)

2250 
	#VIDIOC_CREATE_BUFS
 
	`_IOWR
('V', 92, 
v4l2_¸óã_buf„rs
)

	)

2251 
	#VIDIOC_PREPARE_BUF
 
	`_IOWR
('V', 93, 
v4l2_buf„r
)

	)

2256 
	#BASE_VIDIOC_PRIVATE
 192

	)

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/semaphore.h

18 #i‚de‡
_SEMAPHORE_H


19 
	#_SEMAPHORE_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 #ifde‡
__USE_XOPEN2K


24 
	#__√ed_time•ec


	)

25 
	~<time.h
>

29 
	~<bôs/£m≠h‹e.h
>

32 
__BEGIN_DECLS


36 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

37 
__THROW
;

39 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

42 
£m_t
 *
	$£m_›í
 (c⁄° *
__«me
, 
__oÊag
, ...Ë
__THROW
;

45 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

48 
	$£m_u∆ök
 (c⁄° *
__«me
Ë
__THROW
;

54 
	`£m_waô
 (
£m_t
 *
__£m
);

56 #ifde‡
__USE_XOPEN2K


61 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

62 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

66 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROWNL
;

69 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROWNL
;

72 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

73 
__THROW
;

76 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
47
935
cam_cap_check.cpp
cam_cap_check.h
cam_core.cpp
cam_core.h
cam_ctrl.h
cam_property.cpp
cam_property.h
cam_proxy.h
cam_record.cpp
cam_request.h
cam_status.cpp
cam_status.h
ctrlAPI.h
deletesem.c
main.cpp
test.cpp
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/inttypes.h
/usr/include/linux/videodev2.h
/usr/include/pthread.h
/usr/include/semaphore.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/linux/ioctl.h
/usr/include/linux/types.h
/usr/include/sched.h
/usr/include/stdint.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/linux/posix_types.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/linux/stddef.h
/usr/include/wchar.h
/usr/include/wctype.h
